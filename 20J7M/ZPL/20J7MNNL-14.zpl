set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.878, <2> 30.1976, <3> 31.9198, <4> 17.1137, <5> 22.4711, <6> 34.3141, <7> 23.605, <8> 30.9946, <9> 22.1437, <10> 29.3167, <11> 30.9537, <12> 27.5895, <13> 32.2289, <14> 19.8395, <15> 21.6929, <16> 23.5982, <17> 26.476, <18> 20.9554, <19> 21.243, <20> 19.2753;
param workload[JOB] := <1> 26.878, <2> 30.1976, <3> 31.9198, <4> 17.1137, <5> 22.4711, <6> 34.3141, <7> 23.605, <8> 30.9946, <9> 22.1437, <10> 29.3167, <11> 30.9537, <12> 27.5895, <13> 32.2289, <14> 19.8395, <15> 21.6929, <16> 23.5982, <17> 26.476, <18> 20.9554, <19> 21.243, <20> 19.2753;
param capacity[MACHINE] := <1> 512.8067, <2> 512.8067, <3> 512.8067, <4> 512.8067, <5> 512.8067, <6> 512.8067, <7> 512.8067;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
