set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.0486, <2> 31.2978, <3> 49.6307, <4> 20.0938, <5> 1.5991, <6> 29.5952, <7> 34.2202, <8> 29.8858, <9> 0.4217, <10> 14.3684, <11> 48.4248, <12> 24.8355, <13> 39.2456, <14> 18.1743, <15> 42.6459, <16> 12.8397, <17> 44.9815, <18> 23.5465, <19> 45.6463, <20> 36.3131;
param workload[JOB] := <1> 578.3352, <2> 979.5523, <3> 2463.2064, <4> 403.7608, <5> 2.5571, <6> 875.8759, <7> 1171.0221, <8> 893.161, <9> 0.1778, <10> 206.4509, <11> 2344.9613, <12> 616.8021, <13> 1540.2171, <14> 330.3052, <15> 1818.6728, <16> 164.8579, <17> 2023.3353, <18> 554.4377, <19> 2083.5847, <20> 1318.6412;
param capacity[MACHINE] := <1> 2909.9878, <2> 2909.9878, <3> 2909.9878, <4> 2909.9878, <5> 2909.9878, <6> 2909.9878, <7> 2909.9878;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
