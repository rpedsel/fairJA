set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.8729, <2> 31.1847, <3> 24.2635, <4> 27.1544, <5> 27.3901, <6> 29.5708, <7> 33.242, <8> 2.6945, <9> 29.6865, <10> 7.0821, <11> 16.3406, <12> 6.9183, <13> 20.802, <14> 1.4593, <15> 44.7992, <16> 47.8182, <17> 38.878, <18> 4.2486, <19> 47.9826, <20> 5.5702;
param workload[JOB] := <1> 523.1696, <2> 972.4855, <3> 588.7174, <4> 737.3614, <5> 750.2176, <6> 874.4322, <7> 1105.0306, <8> 7.2603, <9> 881.2883, <10> 50.1561, <11> 267.0152, <12> 47.8629, <13> 432.7232, <14> 2.1296, <15> 2006.9683, <16> 2286.5803, <17> 1511.4989, <18> 18.0506, <19> 2302.3299, <20> 31.0271;
param capacity[MACHINE] := <1> 2199.4721, <2> 2199.4721, <3> 2199.4721, <4> 2199.4721, <5> 2199.4721, <6> 2199.4721, <7> 2199.4721;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
