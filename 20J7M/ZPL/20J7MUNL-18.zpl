set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.8241, <2> 25.5303, <3> 35.7318, <4> 30.5722, <5> 42.1799, <6> 37.1733, <7> 38.2946, <8> 39.4328, <9> 7.5091, <10> 31.7191, <11> 23.1713, <12> 1.9345, <13> 21.7958, <14> 17.7896, <15> 6.9803, <16> 24.4903, <17> 16.1123, <18> 6.7285, <19> 37.5202, <20> 47.1752;
param workload[JOB] := <1> 24.8241, <2> 25.5303, <3> 35.7318, <4> 30.5722, <5> 42.1799, <6> 37.1733, <7> 38.2946, <8> 39.4328, <9> 7.5091, <10> 31.7191, <11> 23.1713, <12> 1.9345, <13> 21.7958, <14> 17.7896, <15> 6.9803, <16> 24.4903, <17> 16.1123, <18> 6.7285, <19> 37.5202, <20> 47.1752;
param capacity[MACHINE] := <1> 516.6652, <2> 516.6652, <3> 516.6652, <4> 516.6652, <5> 516.6652, <6> 516.6652, <7> 516.6652;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
