set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 4.2101, <2> 37.9377, <3> 32.5177, <4> 22.2243, <5> 17.5062, <6> 18.4363, <7> 18.586, <8> 25.9547, <9> 33.1454, <10> 41.8057, <11> 44.8783, <12> 8.0162, <13> 42.9653, <14> 11.0274, <15> 11.0289, <16> 42.7853, <17> 23.5479, <18> 41.9588, <19> 8.1118, <20> 47.5972;
param workload[JOB] := <1> 4.2101, <2> 37.9377, <3> 32.5177, <4> 22.2243, <5> 17.5062, <6> 18.4363, <7> 18.586, <8> 25.9547, <9> 33.1454, <10> 41.8057, <11> 44.8783, <12> 8.0162, <13> 42.9653, <14> 11.0274, <15> 11.0289, <16> 42.7853, <17> 23.5479, <18> 41.9588, <19> 8.1118, <20> 47.5972;
param capacity[MACHINE] := <1> 57.2401, <2> 57.2401, <3> 57.2401, <4> 57.2401, <5> 57.2401, <6> 57.2401, <7> 57.2401;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
