set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.6949, <2> 18.8012, <3> 28.7175, <4> 33.9523, <5> 22.5658, <6> 19.5777, <7> 27.6599, <8> 25.1593, <9> 25.5421, <10> 23.4248, <11> 23.9106, <12> 23.8502, <13> 23.6646, <14> 14.1673, <15> 27.3984, <16> 29.7529, <17> 27.4704, <18> 24.4155, <19> 20.5268, <20> 35.4676;
param workload[JOB] := <1> 22.6949, <2> 18.8012, <3> 28.7175, <4> 33.9523, <5> 22.5658, <6> 19.5777, <7> 27.6599, <8> 25.1593, <9> 25.5421, <10> 23.4248, <11> 23.9106, <12> 23.8502, <13> 23.6646, <14> 14.1673, <15> 27.3984, <16> 29.7529, <17> 27.4704, <18> 24.4155, <19> 20.5268, <20> 35.4676;
param capacity[MACHINE] := <1> 71.2457, <2> 71.2457, <3> 71.2457, <4> 71.2457, <5> 71.2457, <6> 71.2457, <7> 71.2457;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
