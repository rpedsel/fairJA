set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.8854, <2> 18.8352, <3> 22.7946, <4> 33.3076, <5> 27.7609, <6> 29.0926, <7> 28.8914, <8> 27.3274, <9> 21.121, <10> 26.7294, <11> 25.193, <12> 29.4198, <13> 18.8233, <14> 16.5711, <15> 28.5958, <16> 15.0526, <17> 19.9606, <18> 26.2116, <19> 29.1288, <20> 25.7732;
param workload[JOB] := <1> 26.8854, <2> 18.8352, <3> 22.7946, <4> 33.3076, <5> 27.7609, <6> 29.0926, <7> 28.8914, <8> 27.3274, <9> 21.121, <10> 26.7294, <11> 25.193, <12> 29.4198, <13> 18.8233, <14> 16.5711, <15> 28.5958, <16> 15.0526, <17> 19.9606, <18> 26.2116, <19> 29.1288, <20> 25.7732;
param capacity[MACHINE] := <1> 71.0679, <2> 71.0679, <3> 71.0679, <4> 71.0679, <5> 71.0679, <6> 71.0679, <7> 71.0679;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
