set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.9701, <2> 21.9997, <3> 35.6506, <4> 21.539, <5> 34.6289, <6> 37.695, <7> 15.9055, <8> 24.7261, <9> 28.8398, <10> 22.861, <11> 25.2047, <12> 27.0469, <13> 21.4604, <14> 20.7723, <15> 24.4601, <16> 25.444, <17> 24.1336, <18> 29.8211, <19> 22.8536, <20> 26.8114;
param workload[JOB] := <1> 24.9701, <2> 21.9997, <3> 35.6506, <4> 21.539, <5> 34.6289, <6> 37.695, <7> 15.9055, <8> 24.7261, <9> 28.8398, <10> 22.861, <11> 25.2047, <12> 27.0469, <13> 21.4604, <14> 20.7723, <15> 24.4601, <16> 25.444, <17> 24.1336, <18> 29.8211, <19> 22.8536, <20> 26.8114;
param capacity[MACHINE] := <1> 516.8238, <2> 516.8238, <3> 516.8238, <4> 516.8238, <5> 516.8238, <6> 516.8238, <7> 516.8238;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
