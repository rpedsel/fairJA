set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 17.8478, <2> 19.2586, <3> 23.8525, <4> 18.5645, <5> 33.4931, <6> 23.7084, <7> 21.7347, <8> 29.095, <9> 20.8633, <10> 22.4201, <11> 32.1649, <12> 28.2247, <13> 17.5489, <14> 24.6529, <15> 18.6329, <16> 25.1218, <17> 16.7737, <18> 25.4983, <19> 25.5084, <20> 29.6967;
param workload[JOB] := <1> 318.544, <2> 370.8937, <3> 568.9418, <4> 344.6407, <5> 1121.7877, <6> 562.0882, <7> 472.3972, <8> 846.519, <9> 435.2773, <10> 502.6609, <11> 1034.5808, <12> 796.6337, <13> 307.9639, <14> 607.7655, <15> 347.185, <16> 631.1048, <17> 281.357, <18> 650.1633, <19> 650.6785, <20> 881.894;
param capacity[MACHINE] := <1> 1676.1539, <2> 1676.1539, <3> 1676.1539, <4> 1676.1539, <5> 1676.1539, <6> 1676.1539, <7> 1676.1539;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
