set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.2003, <2> 29.4078, <3> 23.8307, <4> 21.3846, <5> 22.2174, <6> 31.0095, <7> 27.9914, <8> 22.7679, <9> 21.2838, <10> 21.3454, <11> 23.637, <12> 28.8955, <13> 26.7928, <14> 27.2812, <15> 33.6768, <16> 27.2614, <17> 22.9246, <18> 27.0467, <19> 22.1325, <20> 24.5247;
param workload[JOB] := <1> 20.2003, <2> 29.4078, <3> 23.8307, <4> 21.3846, <5> 22.2174, <6> 31.0095, <7> 27.9914, <8> 22.7679, <9> 21.2838, <10> 21.3454, <11> 23.637, <12> 28.8955, <13> 26.7928, <14> 27.2812, <15> 33.6768, <16> 27.2614, <17> 22.9246, <18> 27.0467, <19> 22.1325, <20> 24.5247;
param capacity[MACHINE] := <1> 505.612, <2> 505.612, <3> 505.612, <4> 505.612, <5> 505.612, <6> 505.612, <7> 505.612;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
