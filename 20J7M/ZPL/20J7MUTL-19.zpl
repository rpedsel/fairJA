set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 11.5822, <2> 1.6753, <3> 33.9514, <4> 27.1422, <5> 30.1095, <6> 6.7113, <7> 5.7311, <8> 33.5497, <9> 35.0506, <10> 16.5639, <11> 45.6351, <12> 33.6347, <13> 42.5858, <14> 43.1527, <15> 14.5885, <16> 10.9223, <17> 26.2917, <18> 27.2964, <19> 12.7606, <20> 9.4525;
param workload[JOB] := <1> 11.5822, <2> 1.6753, <3> 33.9514, <4> 27.1422, <5> 30.1095, <6> 6.7113, <7> 5.7311, <8> 33.5497, <9> 35.0506, <10> 16.5639, <11> 45.6351, <12> 33.6347, <13> 42.5858, <14> 43.1527, <15> 14.5885, <16> 10.9223, <17> 26.2917, <18> 27.2964, <19> 12.7606, <20> 9.4525;
param capacity[MACHINE] := <1> 50.1844, <2> 50.1844, <3> 50.1844, <4> 50.1844, <5> 50.1844, <6> 50.1844, <7> 50.1844;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
