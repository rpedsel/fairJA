set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.9411, <2> 11.2487, <3> 26.7185, <4> 23.0139, <5> 22.6345, <6> 25.0138, <7> 22.521, <8> 24.6621, <9> 26.9332, <10> 31.3239, <11> 34.8411, <12> 25.6568, <13> 24.999, <14> 19.4114, <15> 28.4767, <16> 26.3945, <17> 21.2737, <18> 31.999, <19> 31.2536, <20> 18.9543;
param workload[JOB] := <1> 573.1763, <2> 126.5333, <3> 713.8782, <4> 529.6396, <5> 512.3206, <6> 625.6902, <7> 507.1954, <8> 608.2192, <9> 725.3973, <10> 981.1867, <11> 1213.9022, <12> 658.2714, <13> 624.95, <14> 376.8024, <15> 810.9224, <16> 696.6696, <17> 452.5703, <18> 1023.936, <19> 976.7875, <20> 359.2655;
param capacity[MACHINE] := <1> 13097.3141, <2> 13097.3141, <3> 13097.3141, <4> 13097.3141, <5> 13097.3141, <6> 13097.3141, <7> 13097.3141;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
