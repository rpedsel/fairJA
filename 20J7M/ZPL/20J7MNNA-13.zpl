set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 19.1062, <2> 27.0012, <3> 29.6001, <4> 28.9387, <5> 19.249, <6> 28.6857, <7> 22.8669, <8> 24.8313, <9> 26.0884, <10> 16.8749, <11> 30.5883, <12> 33.0906, <13> 21.8253, <14> 28.2997, <15> 31.3076, <16> 22.058, <17> 22.0757, <18> 29.7152, <19> 27.8049, <20> 28.2087;
param workload[JOB] := <1> 365.0469, <2> 729.0648, <3> 876.1659, <4> 837.4484, <5> 370.524, <6> 822.8694, <7> 522.8951, <8> 616.5935, <9> 680.6046, <10> 284.7623, <11> 935.6441, <12> 1094.9878, <13> 476.3437, <14> 800.873, <15> 980.1658, <16> 486.5554, <17> 487.3365, <18> 882.9931, <19> 773.1125, <20> 795.7308;
param capacity[MACHINE] := <1> 13819.7176, <2> 13819.7176, <3> 13819.7176, <4> 13819.7176, <5> 13819.7176, <6> 13819.7176, <7> 13819.7176;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
