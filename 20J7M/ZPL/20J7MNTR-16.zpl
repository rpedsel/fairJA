set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.4324, <2> 26.7152, <3> 18.0537, <4> 19.9464, <5> 30.3532, <6> 28.4324, <7> 23.7494, <8> 19.1855, <9> 30.0402, <10> 27.822, <11> 29.1224, <12> 29.4104, <13> 17.4419, <14> 32.2187, <15> 29.5833, <16> 20.8331, <17> 23.0662, <18> 36.9547, <19> 25.0553, <20> 17.0207;
param workload[JOB] := <1> 41.0711, <2> 23.3603, <3> 3.5735, <4> 30.8697, <5> 5.1218, <6> 1.3678, <7> 19.718, <8> 22.7212, <9> 39.8201, <10> 3.6117, <11> 14.1931, <12> 43.7642, <13> 27.1913, <14> 32.1772, <15> 10.8353, <16> 43.6202, <17> 3.2605, <18> 19.3706, <19> 10.6128, <20> 36.8875;
param capacity[MACHINE] := <1> 46.4087, <2> 46.4087, <3> 46.4087, <4> 46.4087, <5> 46.4087, <6> 46.4087, <7> 46.4087;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
