set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 45.865, <2> 38.8027, <3> 14.2001, <4> 19.9793, <5> 45.4965, <6> 46.7381, <7> 6.8833, <8> 22.3677, <9> 20.7611, <10> 27.8778, <11> 18.5576, <12> 19.7653, <13> 3.4066, <14> 40.9247, <15> 7.759, <16> 37.9508, <17> 44.7286, <18> 28.4296, <19> 25.9003, <20> 9.1658;
param workload[JOB] := <1> 45.7803, <2> 10.3041, <3> 14.4099, <4> 11.1347, <5> 29.8482, <6> 41.6209, <7> 25.5045, <8> 20.3574, <9> 15.3604, <10> 23.6019, <11> 2.2258, <12> 40.5047, <13> 6.2272, <14> 44.4573, <15> 29.8089, <16> 18.2515, <17> 17.2225, <18> 36.7256, <19> 25.5066, <20> 36.9826;
param capacity[MACHINE] := <1> 495.835, <2> 495.835, <3> 495.835, <4> 495.835, <5> 495.835, <6> 495.835, <7> 495.835;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
