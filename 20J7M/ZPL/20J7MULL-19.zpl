set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 48.9147, <2> 42.7949, <3> 49.8932, <4> 32.3264, <5> 18.4146, <6> 48.7203, <7> 5.7885, <8> 31.7974, <9> 38.9725, <10> 33.4165, <11> 17.7244, <12> 24.0167, <13> 38.7003, <14> 17.1609, <15> 16.336, <16> 37.3839, <17> 22.873, <18> 25.0386, <19> 14.1637, <20> 1.7135;
param workload[JOB] := <1> 48.9147, <2> 42.7949, <3> 49.8932, <4> 32.3264, <5> 18.4146, <6> 48.7203, <7> 5.7885, <8> 31.7974, <9> 38.9725, <10> 33.4165, <11> 17.7244, <12> 24.0167, <13> 38.7003, <14> 17.1609, <15> 16.336, <16> 37.3839, <17> 22.873, <18> 25.0386, <19> 14.1637, <20> 1.7135;
param capacity[MACHINE] := <1> 80.8786, <2> 80.8786, <3> 80.8786, <4> 80.8786, <5> 80.8786, <6> 80.8786, <7> 80.8786;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
