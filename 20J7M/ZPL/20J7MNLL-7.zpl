set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.2944, <2> 23.3827, <3> 29.4268, <4> 21.1568, <5> 23.4673, <6> 22.3916, <7> 23.2838, <8> 24.4885, <9> 20.2491, <10> 32.9768, <11> 28.1675, <12> 24.9632, <13> 27.6346, <14> 26.7146, <15> 14.955, <16> 29.6992, <17> 23.1792, <18> 17.041, <19> 27.9059, <20> 28.2613;
param workload[JOB] := <1> 24.2944, <2> 23.3827, <3> 29.4268, <4> 21.1568, <5> 23.4673, <6> 22.3916, <7> 23.2838, <8> 24.4885, <9> 20.2491, <10> 32.9768, <11> 28.1675, <12> 24.9632, <13> 27.6346, <14> 26.7146, <15> 14.955, <16> 29.6992, <17> 23.1792, <18> 17.041, <19> 27.9059, <20> 28.2613;
param capacity[MACHINE] := <1> 70.5199, <2> 70.5199, <3> 70.5199, <4> 70.5199, <5> 70.5199, <6> 70.5199, <7> 70.5199;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
