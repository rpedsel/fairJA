set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 49.5546, <2> 43.1247, <3> 36.5681, <4> 29.7064, <5> 32.8146, <6> 26.2188, <7> 14.6098, <8> 7.5302, <9> 42.7813, <10> 7.0952, <11> 43.2091, <12> 25.3401, <13> 18.0276, <14> 21.0486, <15> 24.3701, <16> 37.3715, <17> 37.8388, <18> 35.0513, <19> 44.8646, <20> 7.0655;
param workload[JOB] := <1> 2455.6584, <2> 1859.7398, <3> 1337.2259, <4> 882.4702, <5> 1076.798, <6> 687.4255, <7> 213.4463, <8> 56.7039, <9> 1830.2396, <10> 50.3419, <11> 1867.0263, <12> 642.1207, <13> 324.9944, <14> 443.0436, <15> 593.9018, <16> 1396.629, <17> 1431.7748, <18> 1228.5936, <19> 2012.8323, <20> 49.9213;
param capacity[MACHINE] := <1> 20440.8873, <2> 20440.8873, <3> 20440.8873, <4> 20440.8873, <5> 20440.8873, <6> 20440.8873, <7> 20440.8873;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
