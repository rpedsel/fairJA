set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.3575, <2> 23.1249, <3> 23.5399, <4> 28.2607, <5> 20.4729, <6> 23.7585, <7> 21.0234, <8> 22.8038, <9> 34.0882, <10> 35.3211, <11> 18.0138, <12> 17.7626, <13> 27.4697, <14> 29.2153, <15> 25.6675, <16> 19.7462, <17> 31.563, <18> 19.8225, <19> 30.3014, <20> 17.7279;
param workload[JOB] := <1> 23.3575, <2> 23.1249, <3> 23.5399, <4> 28.2607, <5> 20.4729, <6> 23.7585, <7> 21.0234, <8> 22.8038, <9> 34.0882, <10> 35.3211, <11> 18.0138, <12> 17.7626, <13> 27.4697, <14> 29.2153, <15> 25.6675, <16> 19.7462, <17> 31.563, <18> 19.8225, <19> 30.3014, <20> 17.7279;
param capacity[MACHINE] := <1> 52.8258, <2> 52.8258, <3> 52.8258, <4> 52.8258, <5> 52.8258, <6> 52.8258, <7> 52.8258;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
