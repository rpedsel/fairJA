set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 48.7449, <2> 47.6613, <3> 39.2946, <4> 45.0074, <5> 47.169, <6> 39.9986, <7> 44.4611, <8> 31.3591, <9> 34.5406, <10> 10.1633, <11> 31.9581, <12> 36.2859, <13> 4.4437, <14> 10.1088, <15> 15.8152, <16> 4.9723, <17> 14.8293, <18> 7.8767, <19> 13.7998, <20> 35.8955;
param workload[JOB] := <1> 2376.0653, <2> 2271.5995, <3> 1544.0656, <4> 2025.6661, <5> 2224.9146, <6> 1599.888, <7> 1976.7894, <8> 983.3932, <9> 1193.053, <10> 103.2927, <11> 1021.3202, <12> 1316.6665, <13> 19.7465, <14> 102.1878, <15> 250.1206, <16> 24.7238, <17> 219.9081, <18> 62.0424, <19> 190.4345, <20> 1288.4869;
param capacity[MACHINE] := <1> 2227.9676, <2> 2227.9676, <3> 2227.9676, <4> 2227.9676, <5> 2227.9676, <6> 2227.9676, <7> 2227.9676;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
