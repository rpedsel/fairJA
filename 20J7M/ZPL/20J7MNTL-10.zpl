set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.7943, <2> 24.1325, <3> 28.5345, <4> 21.0378, <5> 35.7981, <6> 30.1377, <7> 21.1214, <8> 30.6223, <9> 30.3102, <10> 23.5331, <11> 27.3246, <12> 27.6987, <13> 28.7493, <14> 23.6989, <15> 16.7359, <16> 21.9714, <17> 19.9865, <18> 26.6816, <19> 24.3564, <20> 24.5533;
param workload[JOB] := <1> 26.7943, <2> 24.1325, <3> 28.5345, <4> 21.0378, <5> 35.7981, <6> 30.1377, <7> 21.1214, <8> 30.6223, <9> 30.3102, <10> 23.5331, <11> 27.3246, <12> 27.6987, <13> 28.7493, <14> 23.6989, <15> 16.7359, <16> 21.9714, <17> 19.9865, <18> 26.6816, <19> 24.3564, <20> 24.5533;
param capacity[MACHINE] := <1> 55.0477, <2> 55.0477, <3> 55.0477, <4> 55.0477, <5> 55.0477, <6> 55.0477, <7> 55.0477;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
