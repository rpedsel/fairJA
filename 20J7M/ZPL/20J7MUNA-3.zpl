set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.3584, <2> 9.2004, <3> 17.8595, <4> 48.569, <5> 21.8642, <6> 26.0572, <7> 47.3937, <8> 2.7895, <9> 32.1856, <10> 3.0791, <11> 4.2248, <12> 34.9792, <13> 7.3316, <14> 23.1927, <15> 29.0674, <16> 45.1482, <17> 29.726, <18> 22.204, <19> 4.8461, <20> 5.1067;
param workload[JOB] := <1> 267.5973, <2> 84.6474, <3> 318.9617, <4> 2358.9478, <5> 478.0432, <6> 678.9777, <7> 2246.1628, <8> 7.7813, <9> 1035.9128, <10> 9.4809, <11> 17.8489, <12> 1223.5444, <13> 53.7524, <14> 537.9013, <15> 844.9137, <16> 2038.36, <17> 883.6351, <18> 493.0176, <19> 23.4847, <20> 26.0784;
param capacity[MACHINE] := <1> 13629.0494, <2> 13629.0494, <3> 13629.0494, <4> 13629.0494, <5> 13629.0494, <6> 13629.0494, <7> 13629.0494;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
