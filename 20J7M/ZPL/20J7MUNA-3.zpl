set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 43.8769, <2> 6.3152, <3> 31.7956, <4> 34.4431, <5> 39.5284, <6> 9.8276, <7> 18.4917, <8> 14.9894, <9> 31.625, <10> 18.4837, <11> 49.3106, <12> 17.1074, <13> 34.6129, <14> 41.2751, <15> 37.6909, <16> 48.3554, <17> 9.3286, <18> 27.401, <19> 38.5498, <20> 39.1143;
param workload[JOB] := <1> 1925.1824, <2> 39.8818, <3> 1010.9602, <4> 1186.3271, <5> 1562.4944, <6> 96.5817, <7> 341.943, <8> 224.6821, <9> 1000.1406, <10> 341.6472, <11> 2431.5353, <12> 292.6631, <13> 1198.0528, <14> 1703.6339, <15> 1420.6039, <16> 2338.2447, <17> 87.0228, <18> 750.8148, <19> 1486.0871, <20> 1529.9285;
param capacity[MACHINE] := <1> 20968.4274, <2> 20968.4274, <3> 20968.4274, <4> 20968.4274, <5> 20968.4274, <6> 20968.4274, <7> 20968.4274;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
