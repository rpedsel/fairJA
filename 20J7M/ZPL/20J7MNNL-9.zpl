set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.9389, <2> 28.6338, <3> 26.4877, <4> 26.3951, <5> 28.6277, <6> 20.9305, <7> 14.2052, <8> 27.395, <9> 18.2079, <10> 30.3124, <11> 29.5926, <12> 25.784, <13> 18.3565, <14> 25.4368, <15> 30.941, <16> 26.7369, <17> 21.5583, <18> 26.6049, <19> 28.8075, <20> 22.1542;
param workload[JOB] := <1> 27.9389, <2> 28.6338, <3> 26.4877, <4> 26.3951, <5> 28.6277, <6> 20.9305, <7> 14.2052, <8> 27.395, <9> 18.2079, <10> 30.3124, <11> 29.5926, <12> 25.784, <13> 18.3565, <14> 25.4368, <15> 30.941, <16> 26.7369, <17> 21.5583, <18> 26.6049, <19> 28.8075, <20> 22.1542;
param capacity[MACHINE] := <1> 505.1069, <2> 505.1069, <3> 505.1069, <4> 505.1069, <5> 505.1069, <6> 505.1069, <7> 505.1069;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
