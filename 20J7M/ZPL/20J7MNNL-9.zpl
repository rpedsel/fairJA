set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.7156, <2> 34.655, <3> 26.0166, <4> 25.4397, <5> 20.9092, <6> 21.5776, <7> 21.7957, <8> 24.8349, <9> 25.5502, <10> 23.0561, <11> 21.1264, <12> 21.4242, <13> 20.7801, <14> 24.1057, <15> 26.8364, <16> 21.2505, <17> 19.5093, <18> 25.3613, <19> 19.6914, <20> 24.8144;
param workload[JOB] := <1> 25.7156, <2> 34.655, <3> 26.0166, <4> 25.4397, <5> 20.9092, <6> 21.5776, <7> 21.7957, <8> 24.8349, <9> 25.5502, <10> 23.0561, <11> 21.1264, <12> 21.4242, <13> 20.7801, <14> 24.1057, <15> 26.8364, <16> 21.2505, <17> 19.5093, <18> 25.3613, <19> 19.6914, <20> 24.8144;
param capacity[MACHINE] := <1> 474.4503, <2> 474.4503, <3> 474.4503, <4> 474.4503, <5> 474.4503, <6> 474.4503, <7> 474.4503;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
