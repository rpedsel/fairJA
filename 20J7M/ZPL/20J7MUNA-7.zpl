set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 34.4752, <2> 43.03, <3> 18.8865, <4> 39.6908, <5> 29.2196, <6> 18.9546, <7> 42.491, <8> 4.3766, <9> 25.7073, <10> 48.4254, <11> 7.5743, <12> 7.9963, <13> 34.0719, <14> 20.8049, <15> 10.3765, <16> 19.5906, <17> 45.0798, <18> 41.1068, <19> 21.7072, <20> 36.6642;
param workload[JOB] := <1> 1188.5394, <2> 1851.5809, <3> 356.6999, <4> 1575.3596, <5> 853.785, <6> 359.2769, <7> 1805.4851, <8> 19.1546, <9> 660.8653, <10> 2345.0194, <11> 57.37, <12> 63.9408, <13> 1160.8944, <14> 432.8439, <15> 107.6718, <16> 383.7916, <17> 2032.1884, <18> 1689.769, <19> 471.2025, <20> 1344.2636;
param capacity[MACHINE] := <1> 18759.7021, <2> 18759.7021, <3> 18759.7021, <4> 18759.7021, <5> 18759.7021, <6> 18759.7021, <7> 18759.7021;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
