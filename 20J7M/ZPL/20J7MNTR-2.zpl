set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 17.6434, <2> 38.124, <3> 29.0499, <4> 20.8819, <5> 22.711, <6> 23.5617, <7> 30.2702, <8> 27.6542, <9> 17.8949, <10> 24.0153, <11> 30.4588, <12> 18.6748, <13> 27.3644, <14> 29.18, <15> 25.3317, <16> 20.9679, <17> 26.801, <18> 30.5743, <19> 22.8787, <20> 18.4151;
param workload[JOB] := <1> 13.3702, <2> 18.9313, <3> 4.8994, <4> 11.6338, <5> 39.3366, <6> 20.9937, <7> 23.8036, <8> 13.6352, <9> 21.3606, <10> 17.6766, <11> 29.8953, <12> 15.9784, <13> 38.4642, <14> 32.2237, <15> 2.1368, <16> 5.8138, <17> 41.677, <18> 27.1804, <19> 39.1632, <20> 42.9062;
param capacity[MACHINE] := <1> 49.4014, <2> 49.4014, <3> 49.4014, <4> 49.4014, <5> 49.4014, <6> 49.4014, <7> 49.4014;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
