set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.5118, <2> 21.7184, <3> 17.5201, <4> 29.1322, <5> 23.5601, <6> 21.2431, <7> 29.2453, <8> 29.345, <9> 32.0225, <10> 23.2415, <11> 28.2416, <12> 20.568, <13> 22.3819, <14> 28.9764, <15> 24.7777, <16> 27.7741, <17> 28.963, <18> 25.2279, <19> 33.5273, <20> 21.4463;
param workload[JOB] := <1> 702.8755, <2> 471.6889, <3> 306.9539, <4> 848.6851, <5> 555.0783, <6> 451.2693, <7> 855.2876, <8> 861.129, <9> 1025.4405, <10> 540.1673, <11> 797.588, <12> 423.0426, <13> 500.9494, <14> 839.6318, <15> 613.9344, <16> 771.4006, <17> 838.8554, <18> 636.4469, <19> 1124.0798, <20> 459.9438;
param capacity[MACHINE] := <1> 1459.7623, <2> 1459.7623, <3> 1459.7623, <4> 1459.7623, <5> 1459.7623, <6> 1459.7623, <7> 1459.7623;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
