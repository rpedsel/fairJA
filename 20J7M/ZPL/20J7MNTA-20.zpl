set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 30.2723, <2> 30.126, <3> 21.2695, <4> 20.2547, <5> 34.4681, <6> 27.1486, <7> 31.1722, <8> 23.7539, <9> 19.7677, <10> 31.6175, <11> 22.7099, <12> 24.6972, <13> 23.6707, <14> 26.7431, <15> 21.3786, <16> 21.8092, <17> 27.7192, <18> 32.125, <19> 27.2608, <20> 30.3498;
param workload[JOB] := <1> 916.4121, <2> 907.5759, <3> 452.3916, <4> 410.2529, <5> 1188.0499, <6> 737.0465, <7> 971.7061, <8> 564.2478, <9> 390.762, <10> 999.6663, <11> 515.7396, <12> 609.9517, <13> 560.302, <14> 715.1934, <15> 457.0445, <16> 475.6412, <17> 768.354, <18> 1032.0156, <19> 743.1512, <20> 921.1104;
param capacity[MACHINE] := <1> 1536.0658, <2> 1536.0658, <3> 1536.0658, <4> 1536.0658, <5> 1536.0658, <6> 1536.0658, <7> 1536.0658;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
