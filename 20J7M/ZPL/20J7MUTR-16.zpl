set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 5.9618, <2> 20.0181, <3> 21.4956, <4> 44.5248, <5> 2.4082, <6> 15.0146, <7> 48.0517, <8> 34.1319, <9> 10.6252, <10> 30.2217, <11> 28.0951, <12> 19.1365, <13> 48.4075, <14> 3.8277, <15> 8.0918, <16> 28.9243, <17> 29.9424, <18> 45.8466, <19> 38.6634, <20> 39.4847;
param workload[JOB] := <1> 32.5969, <2> 21.7732, <3> 38.6515, <4> 11.473, <5> 38.8675, <6> 6.6311, <7> 9.919, <8> 35.5644, <9> 34.7144, <10> 24.5471, <11> 14.1548, <12> 20.8332, <13> 25.2917, <14> 39.0947, <15> 30.9568, <16> 38.0475, <17> 21.6806, <18> 43.7755, <19> 1.9354, <20> 24.5653;
param capacity[MACHINE] := <1> 55.1864, <2> 55.1864, <3> 55.1864, <4> 55.1864, <5> 55.1864, <6> 55.1864, <7> 55.1864;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
