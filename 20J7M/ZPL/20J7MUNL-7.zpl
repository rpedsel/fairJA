set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 31.7857, <2> 4.4223, <3> 15.373, <4> 23.0699, <5> 47.739, <6> 1.6042, <7> 12.2766, <8> 14.5424, <9> 9.7366, <10> 8.3247, <11> 30.7778, <12> 31.3901, <13> 29.2889, <14> 43.7945, <15> 3.3949, <16> 43.0228, <17> 13.5235, <18> 46.0497, <19> 45.7848, <20> 46.6338;
param workload[JOB] := <1> 31.7857, <2> 4.4223, <3> 15.373, <4> 23.0699, <5> 47.739, <6> 1.6042, <7> 12.2766, <8> 14.5424, <9> 9.7366, <10> 8.3247, <11> 30.7778, <12> 31.3901, <13> 29.2889, <14> 43.7945, <15> 3.3949, <16> 43.0228, <17> 13.5235, <18> 46.0497, <19> 45.7848, <20> 46.6338;
param capacity[MACHINE] := <1> 502.5352, <2> 502.5352, <3> 502.5352, <4> 502.5352, <5> 502.5352, <6> 502.5352, <7> 502.5352;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
