set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 31.4919, <2> 25.9879, <3> 44.7318, <4> 27.6716, <5> 18.3525, <6> 7.0164, <7> 4.1094, <8> 46.8955, <9> 18.3868, <10> 37.9388, <11> 45.0367, <12> 11.0031, <13> 48.9895, <14> 13.7351, <15> 17.7437, <16> 13.3116, <17> 17.603, <18> 30.6797, <19> 48.1986, <20> 40.1832;
param workload[JOB] := <1> 991.7398, <2> 675.3709, <3> 2000.9339, <4> 765.7174, <5> 336.8143, <6> 49.2299, <7> 16.8872, <8> 2199.1879, <9> 338.0744, <10> 1439.3525, <11> 2028.3043, <12> 121.0682, <13> 2399.9711, <14> 188.653, <15> 314.8389, <16> 177.1987, <17> 309.8656, <18> 941.244, <19> 2323.105, <20> 1614.6896;
param capacity[MACHINE] := <1> 2515.0777, <2> 2515.0777, <3> 2515.0777, <4> 2515.0777, <5> 2515.0777, <6> 2515.0777, <7> 2515.0777;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
