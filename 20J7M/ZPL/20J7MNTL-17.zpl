set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.0497, <2> 31.3977, <3> 29.5341, <4> 25.3845, <5> 24.4066, <6> 24.7398, <7> 39.091, <8> 29.5824, <9> 26.0342, <10> 22.619, <11> 27.4538, <12> 26.4515, <13> 30.8362, <14> 16.907, <15> 33.9845, <16> 22.9413, <17> 23.2932, <18> 25.5722, <19> 21.7317, <20> 23.6437;
param workload[JOB] := <1> 21.0497, <2> 31.3977, <3> 29.5341, <4> 25.3845, <5> 24.4066, <6> 24.7398, <7> 39.091, <8> 29.5824, <9> 26.0342, <10> 22.619, <11> 27.4538, <12> 26.4515, <13> 30.8362, <14> 16.907, <15> 33.9845, <16> 22.9413, <17> 23.2932, <18> 25.5722, <19> 21.7317, <20> 23.6437;
param capacity[MACHINE] := <1> 56.4272, <2> 56.4272, <3> 56.4272, <4> 56.4272, <5> 56.4272, <6> 56.4272, <7> 56.4272;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
