set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 30.4631, <2> 20.792, <3> 28.8766, <4> 25.7435, <5> 21.6232, <6> 15.29, <7> 26.4901, <8> 26.6406, <9> 29.9346, <10> 25.1509, <11> 26.353, <12> 32.0023, <13> 21.1921, <14> 33.0199, <15> 25.1711, <16> 25.8172, <17> 31.2842, <18> 21.0887, <19> 26.6153, <20> 24.1794;
param workload[JOB] := <1> 30.4631, <2> 20.792, <3> 28.8766, <4> 25.7435, <5> 21.6232, <6> 15.29, <7> 26.4901, <8> 26.6406, <9> 29.9346, <10> 25.1509, <11> 26.353, <12> 32.0023, <13> 21.1921, <14> 33.0199, <15> 25.1711, <16> 25.8172, <17> 31.2842, <18> 21.0887, <19> 26.6153, <20> 24.1794;
param capacity[MACHINE] := <1> 73.9611, <2> 73.9611, <3> 73.9611, <4> 73.9611, <5> 73.9611, <6> 73.9611, <7> 73.9611;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
