set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 10.9401, <2> 23.2515, <3> 13.9829, <4> 42.6549, <5> 0.9763, <6> 26.8852, <7> 1.5623, <8> 25.9592, <9> 40.2568, <10> 45.3873, <11> 46.9295, <12> 42.1857, <13> 9.5996, <14> 43.5398, <15> 48.1662, <16> 23.6558, <17> 22.1628, <18> 19.8563, <19> 37.9584, <20> 14.4312;
param workload[JOB] := <1> 10.9401, <2> 23.2515, <3> 13.9829, <4> 42.6549, <5> 0.9763, <6> 26.8852, <7> 1.5623, <8> 25.9592, <9> 40.2568, <10> 45.3873, <11> 46.9295, <12> 42.1857, <13> 9.5996, <14> 43.5398, <15> 48.1662, <16> 23.6558, <17> 22.1628, <18> 19.8563, <19> 37.9584, <20> 14.4312;
param capacity[MACHINE] := <1> 77.1917, <2> 77.1917, <3> 77.1917, <4> 77.1917, <5> 77.1917, <6> 77.1917, <7> 77.1917;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
