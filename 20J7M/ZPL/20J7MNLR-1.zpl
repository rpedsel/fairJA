set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.444, <2> 32.9602, <3> 27.1295, <4> 22.0061, <5> 22.9162, <6> 23.2719, <7> 32.7085, <8> 26.8422, <9> 19.3975, <10> 25.3963, <11> 30.6533, <12> 19.1501, <13> 36.8123, <14> 19.1625, <15> 24.333, <16> 21.0169, <17> 32.0252, <18> 25.8966, <19> 17.2136, <20> 31.643;
param workload[JOB] := <1> 5.0564, <2> 42.8554, <3> 10.6612, <4> 23.0381, <5> 28.9456, <6> 12.0505, <7> 43.9433, <8> 21.5028, <9> 6.235, <10> 39.2634, <11> 14.5464, <12> 2.4093, <13> 22.2331, <14> 43.1315, <15> 41.5023, <16> 0.5602, <17> 39.6088, <18> 36.2965, <19> 45.0654, <20> 48.2238;
param capacity[MACHINE] := <1> 75.3041, <2> 75.3041, <3> 75.3041, <4> 75.3041, <5> 75.3041, <6> 75.3041, <7> 75.3041;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
