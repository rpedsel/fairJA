set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.5296, <2> 29.355, <3> 32.5491, <4> 12.5138, <5> 26.0748, <6> 26.573, <7> 28.8721, <8> 24.8244, <9> 22.7687, <10> 27.8149, <11> 20.2805, <12> 25.4181, <13> 29.0038, <14> 20.0098, <15> 32.6901, <16> 28.6832, <17> 28.7214, <18> 23.5458, <19> 27.112, <20> 33.4541;
param workload[JOB] := <1> 651.7605, <2> 861.716, <3> 1059.4439, <4> 156.5952, <5> 679.8952, <6> 706.1243, <7> 833.5982, <8> 616.2508, <9> 518.4137, <10> 773.6687, <11> 411.2987, <12> 646.0798, <13> 841.2204, <14> 400.3921, <15> 1068.6426, <16> 822.726, <17> 824.9188, <18> 554.4047, <19> 735.0605, <20> 1119.1768;
param capacity[MACHINE] := <1> 1530.1486, <2> 1530.1486, <3> 1530.1486, <4> 1530.1486, <5> 1530.1486, <6> 1530.1486, <7> 1530.1486;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
