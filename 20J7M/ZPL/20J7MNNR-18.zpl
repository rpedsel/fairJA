set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 35.4881, <2> 33.947, <3> 26.4454, <4> 30.9146, <5> 19.3861, <6> 23.7648, <7> 22.4782, <8> 24.351, <9> 25.9516, <10> 20.4789, <11> 21.9385, <12> 22.411, <13> 24.552, <14> 20.0625, <15> 24.9275, <16> 30.7224, <17> 28.9237, <18> 21.9843, <19> 24.9236, <20> 30.9503;
param workload[JOB] := <1> 38.858, <2> 4.4628, <3> 38.9591, <4> 40.5901, <5> 9.4618, <6> 39.1859, <7> 3.7572, <8> 7.938, <9> 28.2253, <10> 36.7261, <11> 33.0813, <12> 44.7463, <13> 8.4528, <14> 20.8077, <15> 7.1823, <16> 35.0333, <17> 16.1778, <18> 39.8704, <19> 2.0098, <20> 3.7536;
param capacity[MACHINE] := <1> 459.2796, <2> 459.2796, <3> 459.2796, <4> 459.2796, <5> 459.2796, <6> 459.2796, <7> 459.2796;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
