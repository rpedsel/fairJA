set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 12.4411, <2> 22.0436, <3> 24.3164, <4> 26.9467, <5> 26.3299, <6> 19.6191, <7> 32.5597, <8> 32.4261, <9> 21.2034, <10> 26.6461, <11> 29.9395, <12> 35.4408, <13> 22.8892, <14> 24.938, <15> 23.1552, <16> 23.6488, <17> 24.5039, <18> 29.0438, <19> 32.9107, <20> 20.6954;
param workload[JOB] := <1> 154.781, <2> 485.9203, <3> 591.2873, <4> 726.1246, <5> 693.2636, <6> 384.9091, <7> 1060.1341, <8> 1051.452, <9> 449.5842, <10> 710.0146, <11> 896.3737, <12> 1256.0503, <13> 523.9155, <14> 621.9038, <15> 536.1633, <16> 559.2657, <17> 600.4411, <18> 843.5423, <19> 1083.1142, <20> 428.2996;
param capacity[MACHINE] := <1> 1463.2007, <2> 1463.2007, <3> 1463.2007, <4> 1463.2007, <5> 1463.2007, <6> 1463.2007, <7> 1463.2007;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
