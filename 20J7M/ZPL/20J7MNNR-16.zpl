set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 30.4192, <2> 24.6849, <3> 18.5694, <4> 23.3821, <5> 24.8415, <6> 24.2844, <7> 25.5239, <8> 27.6332, <9> 29.3751, <10> 29.8267, <11> 31.093, <12> 30.1551, <13> 30.1548, <14> 32.1296, <15> 32.4634, <16> 20.6502, <17> 27.8208, <18> 31.9708, <19> 26.4366, <20> 28.4869;
param workload[JOB] := <1> 27.1127, <2> 30.0691, <3> 42.3947, <4> 41.1326, <5> 14.2917, <6> 33.8147, <7> 9.4912, <8> 29.2481, <9> 23.1255, <10> 2.6601, <11> 48.3131, <12> 49.7535, <13> 0.3317, <14> 22.3002, <15> 37.1447, <16> 6.6218, <17> 11.7717, <18> 44.5142, <19> 4.0663, <20> 18.9693;
param capacity[MACHINE] := <1> 497.1269, <2> 497.1269, <3> 497.1269, <4> 497.1269, <5> 497.1269, <6> 497.1269, <7> 497.1269;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
