set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.085, <2> 15.3603, <3> 25.8377, <4> 26.2935, <5> 26.2213, <6> 24.9725, <7> 36.6746, <8> 26.1936, <9> 25.5231, <10> 27.643, <11> 20.2742, <12> 27.1995, <13> 26.8447, <14> 25.1693, <15> 20.7167, <16> 28.1739, <17> 24.6498, <18> 22.3418, <19> 29.1248, <20> 22.9664;
param workload[JOB] := <1> 26.085, <2> 15.3603, <3> 25.8377, <4> 26.2935, <5> 26.2213, <6> 24.9725, <7> 36.6746, <8> 26.1936, <9> 25.5231, <10> 27.643, <11> 20.2742, <12> 27.1995, <13> 26.8447, <14> 25.1693, <15> 20.7167, <16> 28.1739, <17> 24.6498, <18> 22.3418, <19> 29.1248, <20> 22.9664;
param capacity[MACHINE] := <1> 72.6094, <2> 72.6094, <3> 72.6094, <4> 72.6094, <5> 72.6094, <6> 72.6094, <7> 72.6094;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
