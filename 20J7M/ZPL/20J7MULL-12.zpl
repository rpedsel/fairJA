set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 48.5863, <2> 48.5848, <3> 42.1907, <4> 22.7541, <5> 41.1327, <6> 48.9837, <7> 3.628, <8> 13.5935, <9> 32.6676, <10> 40.5726, <11> 47.7541, <12> 42.2362, <13> 38.0429, <14> 33.6159, <15> 32.7967, <16> 14.5738, <17> 16.36, <18> 44.4622, <19> 39.1871, <20> 40.1254;
param workload[JOB] := <1> 48.5863, <2> 48.5848, <3> 42.1907, <4> 22.7541, <5> 41.1327, <6> 48.9837, <7> 3.628, <8> 13.5935, <9> 32.6676, <10> 40.5726, <11> 47.7541, <12> 42.2362, <13> 38.0429, <14> 33.6159, <15> 32.7967, <16> 14.5738, <17> 16.36, <18> 44.4622, <19> 39.1871, <20> 40.1254;
param capacity[MACHINE] := <1> 98.8355, <2> 98.8355, <3> 98.8355, <4> 98.8355, <5> 98.8355, <6> 98.8355, <7> 98.8355;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
