set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.8691, <2> 30.4525, <3> 23.2446, <4> 25.3651, <5> 23.8016, <6> 23.6227, <7> 18.8134, <8> 28.5087, <9> 27.5664, <10> 19.7339, <11> 25.9433, <12> 32.5854, <13> 20.254, <14> 29.972, <15> 17.6631, <16> 27.9508, <17> 24.4043, <18> 35.4466, <19> 12.6126, <20> 26.8888;
param workload[JOB] := <1> 569.7339, <2> 927.3548, <3> 540.3114, <4> 643.3883, <5> 566.5162, <6> 558.032, <7> 353.944, <8> 812.746, <9> 759.9064, <10> 389.4268, <11> 673.0548, <12> 1061.8083, <13> 410.2245, <14> 898.3208, <15> 311.9851, <16> 781.2472, <17> 595.5699, <18> 1256.4615, <19> 159.0777, <20> 723.0076;
param capacity[MACHINE] := <1> 1392.0125, <2> 1392.0125, <3> 1392.0125, <4> 1392.0125, <5> 1392.0125, <6> 1392.0125, <7> 1392.0125;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
