set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.001, <2> 32.0241, <3> 24.7499, <4> 31.9505, <5> 20.8076, <6> 17.1849, <7> 26.9971, <8> 23.2635, <9> 28.0957, <10> 26.5709, <11> 30.5823, <12> 20.257, <13> 24.9257, <14> 26.0446, <15> 26.2685, <16> 24.3589, <17> 24.2124, <18> 26.3773, <19> 17.8754, <20> 27.2986;
param workload[JOB] := <1> 676.052, <2> 1025.543, <3> 612.5576, <4> 1020.8345, <5> 432.9562, <6> 295.3208, <7> 728.8434, <8> 541.1904, <9> 789.3684, <10> 706.0127, <11> 935.2771, <12> 410.346, <13> 621.2905, <14> 678.3212, <15> 690.0341, <16> 593.356, <17> 586.2403, <18> 695.762, <19> 319.5299, <20> 745.2136;
param capacity[MACHINE] := <1> 1872.0071, <2> 1872.0071, <3> 1872.0071, <4> 1872.0071, <5> 1872.0071, <6> 1872.0071, <7> 1872.0071;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
