set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.3828, <2> 20.7638, <3> 18.2874, <4> 28.7718, <5> 18.5693, <6> 37.2666, <7> 22.0947, <8> 24.1166, <9> 25.3791, <10> 30.1505, <11> 21.0362, <12> 23.3983, <13> 38.7552, <14> 26.7586, <15> 20.7716, <16> 29.349, <17> 19.4784, <18> 30.5573, <19> 31.768, <20> 19.5602;
param workload[JOB] := <1> 644.2865, <2> 431.1354, <3> 334.429, <4> 827.8165, <5> 344.8189, <6> 1388.7995, <7> 488.1758, <8> 581.6104, <9> 644.0987, <10> 909.0527, <11> 442.5217, <12> 547.4804, <13> 1501.9655, <14> 716.0227, <15> 431.4594, <16> 861.3638, <17> 379.4081, <18> 933.7486, <19> 1009.2058, <20> 382.6014;
param capacity[MACHINE] := <1> 1971.4287, <2> 1971.4287, <3> 1971.4287, <4> 1971.4287, <5> 1971.4287, <6> 1971.4287, <7> 1971.4287;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
