set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 40.5166, <2> 40.7883, <3> 37.9538, <4> 23.6231, <5> 43.1398, <6> 19.9997, <7> 26.3492, <8> 14.1368, <9> 22.8794, <10> 36.5839, <11> 2.2659, <12> 42.8772, <13> 12.6805, <14> 47.9319, <15> 25.8944, <16> 37.1038, <17> 5.4723, <18> 24.3777, <19> 31.6693, <20> 44.7008;
param workload[JOB] := <1> 40.5166, <2> 40.7883, <3> 37.9538, <4> 23.6231, <5> 43.1398, <6> 19.9997, <7> 26.3492, <8> 14.1368, <9> 22.8794, <10> 36.5839, <11> 2.2659, <12> 42.8772, <13> 12.6805, <14> 47.9319, <15> 25.8944, <16> 37.1038, <17> 5.4723, <18> 24.3777, <19> 31.6693, <20> 44.7008;
param capacity[MACHINE] := <1> 580.9444, <2> 580.9444, <3> 580.9444, <4> 580.9444, <5> 580.9444, <6> 580.9444, <7> 580.9444;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
