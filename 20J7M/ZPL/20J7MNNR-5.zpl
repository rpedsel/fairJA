set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.2067, <2> 29.2395, <3> 31.3087, <4> 19.9024, <5> 19.6794, <6> 20.5056, <7> 17.4064, <8> 19.5122, <9> 17.0758, <10> 28.0888, <11> 26.0898, <12> 23.0149, <13> 21.7632, <14> 21.7758, <15> 28.7861, <16> 33.9069, <17> 36.5544, <18> 26.5175, <19> 26.607, <20> 25.6502;
param workload[JOB] := <1> 20.2997, <2> 12.0706, <3> 42.735, <4> 33.0354, <5> 33.876, <6> 6.2355, <7> 9.2382, <8> 32.4752, <9> 24.9271, <10> 4.6801, <11> 27.2349, <12> 15.7198, <13> 20.2147, <14> 34.2275, <15> 14.0279, <16> 40.2355, <17> 38.1243, <18> 3.139, <19> 19.6581, <20> 16.9396;
param capacity[MACHINE] := <1> 449.0941, <2> 449.0941, <3> 449.0941, <4> 449.0941, <5> 449.0941, <6> 449.0941, <7> 449.0941;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
