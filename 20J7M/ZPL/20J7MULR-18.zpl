set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 19.8454, <2> 32.3975, <3> 23.0796, <4> 13.8124, <5> 15.5221, <6> 1.8502, <7> 39.1902, <8> 24.5868, <9> 27.1991, <10> 13.8343, <11> 42.8101, <12> 22.8882, <13> 35.4806, <14> 27.6666, <15> 11.7444, <16> 30.0333, <17> 12.2813, <18> 19.6427, <19> 43.5956, <20> 23.6484;
param workload[JOB] := <1> 5.4253, <2> 46.9998, <3> 27.0422, <4> 19.8759, <5> 14.5242, <6> 42.2039, <7> 18.9849, <8> 30.9136, <9> 23.6873, <10> 26.197, <11> 36.8948, <12> 40.4188, <13> 8.5032, <14> 23.2157, <15> 41.3781, <16> 42.0758, <17> 4.2739, <18> 18.3566, <19> 21.2051, <20> 39.0361;
param capacity[MACHINE] := <1> 75.8875, <2> 75.8875, <3> 75.8875, <4> 75.8875, <5> 75.8875, <6> 75.8875, <7> 75.8875;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
