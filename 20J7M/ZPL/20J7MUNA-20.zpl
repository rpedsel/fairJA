set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 31.8187, <2> 43.4565, <3> 48.7824, <4> 32.9917, <5> 8.5237, <6> 0.0138, <7> 35.47, <8> 1.8595, <9> 20.5467, <10> 48.9238, <11> 25.9434, <12> 29.4121, <13> 4.8087, <14> 45.7129, <15> 15.0761, <16> 29.7278, <17> 37.2457, <18> 5.4892, <19> 10.8072, <20> 20.4121;
param workload[JOB] := <1> 1012.4297, <2> 1888.4674, <3> 2379.7225, <4> 1088.4523, <5> 72.6535, <6> 0.0002, <7> 1258.1209, <8> 3.4577, <9> 422.1669, <10> 2393.5382, <11> 673.06, <12> 865.0716, <13> 23.1236, <14> 2089.6692, <15> 227.2888, <16> 883.7421, <17> 1387.2422, <18> 30.1313, <19> 116.7956, <20> 416.6538;
param capacity[MACHINE] := <1> 17231.7875, <2> 17231.7875, <3> 17231.7875, <4> 17231.7875, <5> 17231.7875, <6> 17231.7875, <7> 17231.7875;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
