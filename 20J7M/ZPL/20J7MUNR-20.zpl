set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.2375, <2> 44.5088, <3> 3.869, <4> 28.3943, <5> 11.5112, <6> 35.3837, <7> 23.6177, <8> 25.7095, <9> 26.2148, <10> 13.9342, <11> 49.8725, <12> 8.9333, <13> 23.6804, <14> 47.4935, <15> 28.1946, <16> 46.7768, <17> 48.9259, <18> 7.0836, <19> 20.6109, <20> 14.9591;
param workload[JOB] := <1> 3.9711, <2> 32.3842, <3> 23.5913, <4> 14.9321, <5> 21.7341, <6> 42.4936, <7> 11.2884, <8> 43.0935, <9> 37.9499, <10> 36.5463, <11> 0.9372, <12> 5.2679, <13> 33.7517, <14> 7.6845, <15> 5.0817, <16> 35.4861, <17> 8.3902, <18> 15.9376, <19> 39.6554, <20> 3.9731;
param capacity[MACHINE] := <1> 424.1499, <2> 424.1499, <3> 424.1499, <4> 424.1499, <5> 424.1499, <6> 424.1499, <7> 424.1499;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
