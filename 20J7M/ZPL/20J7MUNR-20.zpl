set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 32.7075, <2> 9.5285, <3> 47.4939, <4> 42.0254, <5> 5.9958, <6> 15.4407, <7> 49.3623, <8> 0.9371, <9> 41.6272, <10> 28.9028, <11> 37.0506, <12> 15.1311, <13> 35.1192, <14> 28.8904, <15> 17.4656, <16> 20.8449, <17> 27.1395, <18> 21.6763, <19> 30.8715, <20> 44.0422;
param workload[JOB] := <1> 46.9603, <2> 47.5209, <3> 21.3375, <4> 27.6741, <5> 24.4494, <6> 25.4072, <7> 12.2732, <8> 14.5951, <9> 41.1579, <10> 41.8851, <11> 19.8119, <12> 48.3034, <13> 14.3385, <14> 43.3544, <15> 16.36, <16> 1.7844, <17> 8.9694, <18> 40.1099, <19> 32.034, <20> 40.5286;
param capacity[MACHINE] := <1> 568.8552, <2> 568.8552, <3> 568.8552, <4> 568.8552, <5> 568.8552, <6> 568.8552, <7> 568.8552;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
