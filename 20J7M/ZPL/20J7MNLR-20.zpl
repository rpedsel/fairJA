set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 37.8832, <2> 20.3548, <3> 15.6559, <4> 12.5612, <5> 20.0724, <6> 22.5916, <7> 27.8275, <8> 14.7192, <9> 24.7096, <10> 25.5234, <11> 28.0085, <12> 26.5083, <13> 32.1069, <14> 31.4021, <15> 24.8301, <16> 23.5735, <17> 28.3934, <18> 21.7914, <19> 20.374, <20> 20.1895;
param workload[JOB] := <1> 14.3689, <2> 39.4632, <3> 15.527, <4> 43.053, <5> 1.7981, <6> 30.0726, <7> 36.1346, <8> 16.5924, <9> 43.1079, <10> 20.6058, <11> 25.7278, <12> 33.7726, <13> 46.6631, <14> 28.1604, <15> 31.9049, <16> 9.5832, <17> 22.8575, <18> 2.6737, <19> 12.4048, <20> 32.6209;
param capacity[MACHINE] := <1> 72.4418, <2> 72.4418, <3> 72.4418, <4> 72.4418, <5> 72.4418, <6> 72.4418, <7> 72.4418;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
