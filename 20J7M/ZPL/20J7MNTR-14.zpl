set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.6223, <2> 28.0814, <3> 26.2478, <4> 25.4546, <5> 30.2934, <6> 17.2574, <7> 29.6045, <8> 33.1167, <9> 21.7761, <10> 26.6707, <11> 38.2174, <12> 12.6711, <13> 26.575, <14> 19.9372, <15> 20.1133, <16> 23.8274, <17> 29.1619, <18> 31.5103, <19> 24.1856, <20> 22.8191;
param workload[JOB] := <1> 31.2519, <2> 43.0066, <3> 35.3732, <4> 21.3452, <5> 5.3127, <6> 37.2507, <7> 18.7249, <8> 16.2332, <9> 4.9609, <10> 31.7593, <11> 41.9973, <12> 34.9666, <13> 48.7397, <14> 28.0179, <15> 29.8698, <16> 17.5676, <17> 20.4832, <18> 10.5791, <19> 33.3785, <20> 13.0235;
param capacity[MACHINE] := <1> 56.1259, <2> 56.1259, <3> 56.1259, <4> 56.1259, <5> 56.1259, <6> 56.1259, <7> 56.1259;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
