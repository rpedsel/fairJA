set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.1293, <2> 26.6695, <3> 17.9947, <4> 44.2968, <5> 19.0385, <6> 9.0218, <7> 35.3287, <8> 18.526, <9> 32.232, <10> 10.6944, <11> 39.7184, <12> 20.2706, <13> 16.4836, <14> 31.8718, <15> 30.9632, <16> 33.7402, <17> 29.2481, <18> 37.8818, <19> 6.2228, <20> 47.4511;
param workload[JOB] := <1> 28.1293, <2> 26.6695, <3> 17.9947, <4> 44.2968, <5> 19.0385, <6> 9.0218, <7> 35.3287, <8> 18.526, <9> 32.232, <10> 10.6944, <11> 39.7184, <12> 20.2706, <13> 16.4836, <14> 31.8718, <15> 30.9632, <16> 33.7402, <17> 29.2481, <18> 37.8818, <19> 6.2228, <20> 47.4511;
param capacity[MACHINE] := <1> 535.7833, <2> 535.7833, <3> 535.7833, <4> 535.7833, <5> 535.7833, <6> 535.7833, <7> 535.7833;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
