set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 38.8954, <2> 33.1672, <3> 30.536, <4> 29.0602, <5> 28.5305, <6> 21.6281, <7> 21.3129, <8> 24.4888, <9> 32.068, <10> 34.9408, <11> 18.5512, <12> 29.1151, <13> 22.3538, <14> 26.5605, <15> 18.1391, <16> 22.2383, <17> 25.1358, <18> 32.4422, <19> 27.374, <20> 26.0608;
param workload[JOB] := <1> 24.8572, <2> 3.8089, <3> 26.9125, <4> 36.6048, <5> 43.6539, <6> 48.9414, <7> 6.9878, <8> 29.6037, <9> 22.0793, <10> 19.4264, <11> 45.4612, <12> 9.5797, <13> 23.0888, <14> 32.4778, <15> 35.8911, <16> 10.8437, <17> 17.3484, <18> 44.5646, <19> 16.9753, <20> 26.203;
param capacity[MACHINE] := <1> 525.3095, <2> 525.3095, <3> 525.3095, <4> 525.3095, <5> 525.3095, <6> 525.3095, <7> 525.3095;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
