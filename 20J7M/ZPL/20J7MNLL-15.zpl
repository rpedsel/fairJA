set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.86, <2> 14.3516, <3> 23.4074, <4> 25.1264, <5> 28.4016, <6> 23.3446, <7> 28.9578, <8> 20.3159, <9> 34.1328, <10> 22.4437, <11> 30.0328, <12> 17.7116, <13> 18.9342, <14> 22.3432, <15> 25.0141, <16> 15.8958, <17> 20.7955, <18> 21.4693, <19> 28.5191, <20> 26.5118;
param workload[JOB] := <1> 22.86, <2> 14.3516, <3> 23.4074, <4> 25.1264, <5> 28.4016, <6> 23.3446, <7> 28.9578, <8> 20.3159, <9> 34.1328, <10> 22.4437, <11> 30.0328, <12> 17.7116, <13> 18.9342, <14> 22.3432, <15> 25.0141, <16> 15.8958, <17> 20.7955, <18> 21.4693, <19> 28.5191, <20> 26.5118;
param capacity[MACHINE] := <1> 67.2242, <2> 67.2242, <3> 67.2242, <4> 67.2242, <5> 67.2242, <6> 67.2242, <7> 67.2242;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
