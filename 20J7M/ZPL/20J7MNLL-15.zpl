set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.5506, <2> 24.3168, <3> 22.3104, <4> 16.1196, <5> 27.5483, <6> 24.9948, <7> 27.2147, <8> 25.5642, <9> 22.4968, <10> 25.9142, <11> 38.7819, <12> 26.6333, <13> 23.4894, <14> 26.4809, <15> 32.946, <16> 22.333, <17> 19.288, <18> 27.4714, <19> 26.8045, <20> 24.4603;
param workload[JOB] := <1> 22.5506, <2> 24.3168, <3> 22.3104, <4> 16.1196, <5> 27.5483, <6> 24.9948, <7> 27.2147, <8> 25.5642, <9> 22.4968, <10> 25.9142, <11> 38.7819, <12> 26.6333, <13> 23.4894, <14> 26.4809, <15> 32.946, <16> 22.333, <17> 19.288, <18> 27.4714, <19> 26.8045, <20> 24.4603;
param capacity[MACHINE] := <1> 72.5313, <2> 72.5313, <3> 72.5313, <4> 72.5313, <5> 72.5313, <6> 72.5313, <7> 72.5313;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
