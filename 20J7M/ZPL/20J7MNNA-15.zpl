set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 37.6709, <2> 21.6727, <3> 26.6904, <4> 25.1018, <5> 27.0711, <6> 23.7476, <7> 40.4573, <8> 27.9942, <9> 23.7539, <10> 26.667, <11> 25.9079, <12> 31.9069, <13> 26.9203, <14> 26.6752, <15> 19.4937, <16> 27.1259, <17> 27.1487, <18> 22.9886, <19> 30.0592, <20> 24.931;
param workload[JOB] := <1> 1419.0967, <2> 469.7059, <3> 712.3775, <4> 630.1004, <5> 732.8445, <6> 563.9485, <7> 1636.7931, <8> 783.6752, <9> 564.2478, <10> 711.1289, <11> 671.2193, <12> 1018.0503, <13> 724.7026, <14> 711.5663, <15> 380.0043, <16> 735.8145, <17> 737.0519, <18> 528.4757, <19> 903.5555, <20> 621.5548;
param capacity[MACHINE] := <1> 15255.9137, <2> 15255.9137, <3> 15255.9137, <4> 15255.9137, <5> 15255.9137, <6> 15255.9137, <7> 15255.9137;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
