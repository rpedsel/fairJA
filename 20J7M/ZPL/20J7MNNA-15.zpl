set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.2569, <2> 16.1304, <3> 26.7264, <4> 21.5232, <5> 22.9687, <6> 23.0901, <7> 17.9042, <8> 28.4271, <9> 24.4833, <10> 23.2809, <11> 15.1261, <12> 22.3029, <13> 39.292, <14> 29.0125, <15> 25.6401, <16> 19.8516, <17> 27.7594, <18> 30.1311, <19> 21.7024, <20> 16.9645;
param workload[JOB] := <1> 451.8558, <2> 260.1898, <3> 714.3005, <4> 463.2481, <5> 527.5612, <6> 533.1527, <7> 320.5604, <8> 808.1, <9> 599.432, <10> 542.0003, <11> 228.7989, <12> 497.4193, <13> 1543.8613, <14> 841.7252, <15> 657.4147, <16> 394.086, <17> 770.5843, <18> 907.8832, <19> 470.9942, <20> 287.7943;
param capacity[MACHINE] := <1> 11820.9622, <2> 11820.9622, <3> 11820.9622, <4> 11820.9622, <5> 11820.9622, <6> 11820.9622, <7> 11820.9622;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
