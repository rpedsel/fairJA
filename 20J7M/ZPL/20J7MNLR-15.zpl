set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.3102, <2> 20.1327, <3> 23.8423, <4> 27.2559, <5> 26.4545, <6> 21.4752, <7> 25.2244, <8> 19.4814, <9> 17.2086, <10> 16.8966, <11> 21.0425, <12> 24.3135, <13> 28.5802, <14> 24.693, <15> 20.9717, <16> 35.2201, <17> 27.8068, <18> 34.911, <19> 20.0025, <20> 33.732;
param workload[JOB] := <1> 38.5216, <2> 46.8943, <3> 48.4188, <4> 43.0213, <5> 34.3916, <6> 36.9209, <7> 48.5645, <8> 31.1422, <9> 31.9371, <10> 26.1911, <11> 47.0095, <12> 24.3931, <13> 10.6693, <14> 45.7614, <15> 37.8497, <16> 18.9508, <17> 44.5914, <18> 6.8197, <19> 17.2325, <20> 20.7614;
param capacity[MACHINE] := <1> 94.2917, <2> 94.2917, <3> 94.2917, <4> 94.2917, <5> 94.2917, <6> 94.2917, <7> 94.2917;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
