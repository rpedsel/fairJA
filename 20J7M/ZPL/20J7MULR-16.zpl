set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 12.4771, <2> 47.5116, <3> 45.2297, <4> 27.5597, <5> 43.541, <6> 4.3867, <7> 41.2767, <8> 39.2457, <9> 25.869, <10> 19.8837, <11> 37.2135, <12> 29.7302, <13> 34.0114, <14> 10.8594, <15> 18.0988, <16> 43.0452, <17> 9.1106, <18> 29.4103, <19> 6.3533, <20> 38.3854;
param workload[JOB] := <1> 30.3301, <2> 35.5792, <3> 39.6729, <4> 13.6555, <5> 12.6367, <6> 46.1629, <7> 25.4152, <8> 43.1141, <9> 8.8803, <10> 46.1963, <11> 7.8775, <12> 43.4231, <13> 30.8138, <14> 35.3556, <15> 39.6334, <16> 18.095, <17> 2.8231, <18> 48.1677, <19> 15.5471, <20> 27.1845;
param capacity[MACHINE] := <1> 81.5091, <2> 81.5091, <3> 81.5091, <4> 81.5091, <5> 81.5091, <6> 81.5091, <7> 81.5091;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
