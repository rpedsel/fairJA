set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.5481, <2> 33.1217, <3> 32.4006, <4> 17.9083, <5> 15.0808, <6> 15.8762, <7> 47.9152, <8> 42.3254, <9> 27.8078, <10> 11.8575, <11> 23.1281, <12> 14.3063, <13> 16.8946, <14> 13.8708, <15> 46.0527, <16> 47.5511, <17> 45.8802, <18> 29.1352, <19> 35.4843, <20> 42.0439;
param workload[JOB] := <1> 20.5481, <2> 33.1217, <3> 32.4006, <4> 17.9083, <5> 15.0808, <6> 15.8762, <7> 47.9152, <8> 42.3254, <9> 27.8078, <10> 11.8575, <11> 23.1281, <12> 14.3063, <13> 16.8946, <14> 13.8708, <15> 46.0527, <16> 47.5511, <17> 45.8802, <18> 29.1352, <19> 35.4843, <20> 42.0439;
param capacity[MACHINE] := <1> 62.056, <2> 62.056, <3> 62.056, <4> 62.056, <5> 62.056, <6> 62.056, <7> 62.056;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
