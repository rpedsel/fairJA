set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 40.4043, <2> 20.9654, <3> 34.9386, <4> 9.7468, <5> 4.2063, <6> 22.1116, <7> 12.4616, <8> 31.7396, <9> 29.1732, <10> 17.8735, <11> 37.8448, <12> 14.6726, <13> 24.7064, <14> 17.8177, <15> 32.8619, <16> 49.799, <17> 7.5703, <18> 35.8317, <19> 20.1743, <20> 36.3087;
param workload[JOB] := <1> 13.7433, <2> 18.0602, <3> 8.3408, <4> 21.202, <5> 40.0909, <6> 33.6697, <7> 46.8696, <8> 31.8699, <9> 41.6324, <10> 28.4271, <11> 28.0612, <12> 39.9311, <13> 16.5586, <14> 37.2702, <15> 41.1029, <16> 30.6793, <17> 9.7608, <18> 22.6751, <19> 23.5754, <20> 41.8104;
param capacity[MACHINE] := <1> 61.6426, <2> 61.6426, <3> 61.6426, <4> 61.6426, <5> 61.6426, <6> 61.6426, <7> 61.6426;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
