set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.0734, <2> 25.4974, <3> 17.306, <4> 21.7378, <5> 33.9632, <6> 28.8535, <7> 30.9637, <8> 26.777, <9> 29.8201, <10> 27.8236, <11> 24.7919, <12> 23.298, <13> 22.3644, <14> 25.9775, <15> 41.5426, <16> 27.6473, <17> 15.7532, <18> 29.6765, <19> 31.4748, <20> 27.8728;
param workload[JOB] := <1> 25.0734, <2> 25.4974, <3> 17.306, <4> 21.7378, <5> 33.9632, <6> 28.8535, <7> 30.9637, <8> 26.777, <9> 29.8201, <10> 27.8236, <11> 24.7919, <12> 23.298, <13> 22.3644, <14> 25.9775, <15> 41.5426, <16> 27.6473, <17> 15.7532, <18> 29.6765, <19> 31.4748, <20> 27.8728;
param capacity[MACHINE] := <1> 76.8878, <2> 76.8878, <3> 76.8878, <4> 76.8878, <5> 76.8878, <6> 76.8878, <7> 76.8878;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
