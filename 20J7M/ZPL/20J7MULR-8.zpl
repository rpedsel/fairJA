set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.7015, <2> 49.1764, <3> 12.8363, <4> 12.5839, <5> 26.4618, <6> 11.3276, <7> 22.9206, <8> 22.5787, <9> 45.2451, <10> 10.746, <11> 12.6784, <12> 33.7651, <13> 18.9348, <14> 23.4774, <15> 36.8239, <16> 22.6201, <17> 35.7223, <18> 21.4077, <19> 15.5711, <20> 32.2713;
param workload[JOB] := <1> 27.6038, <2> 29.09, <3> 28.7103, <4> 12.1481, <5> 5.1559, <6> 28.1131, <7> 45.559, <8> 25.1803, <9> 2.0299, <10> 20.2954, <11> 46.3438, <12> 15.3398, <13> 33.2428, <14> 17.6389, <15> 35.3004, <16> 39.2218, <17> 14.6618, <18> 11.3187, <19> 43.3951, <20> 15.8397;
param capacity[MACHINE] := <1> 70.8841, <2> 70.8841, <3> 70.8841, <4> 70.8841, <5> 70.8841, <6> 70.8841, <7> 70.8841;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
