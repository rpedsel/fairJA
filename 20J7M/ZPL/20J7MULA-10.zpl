set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 34.8356, <2> 47.4524, <3> 9.4022, <4> 42.5369, <5> 32.2892, <6> 10.7712, <7> 16.4423, <8> 22.8543, <9> 6.9366, <10> 29.6392, <11> 40.2055, <12> 16.5126, <13> 38.4717, <14> 49.1031, <15> 2.4993, <16> 45.4372, <17> 39.7, <18> 21.6719, <19> 31.0277, <20> 45.7853;
param workload[JOB] := <1> 1213.519, <2> 2251.7303, <3> 88.4014, <4> 1809.3879, <5> 1042.5924, <6> 116.0187, <7> 270.3492, <8> 522.319, <9> 48.1164, <10> 878.4822, <11> 1616.4822, <12> 272.666, <13> 1480.0717, <14> 2411.1144, <15> 6.2465, <16> 2064.5391, <17> 1576.09, <18> 469.6712, <19> 962.7182, <20> 2096.2937;
param capacity[MACHINE] := <1> 3028.1156, <2> 3028.1156, <3> 3028.1156, <4> 3028.1156, <5> 3028.1156, <6> 3028.1156, <7> 3028.1156;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
