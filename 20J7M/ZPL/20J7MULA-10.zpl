set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 46.5702, <2> 47.031, <3> 13.7559, <4> 18.3982, <5> 44.5813, <6> 28.6333, <7> 41.277, <8> 37.4313, <9> 49.1876, <10> 7.3868, <11> 25.615, <12> 21.8333, <13> 38.337, <14> 42.4428, <15> 33.1016, <16> 9.44, <17> 33.8605, <18> 12.5771, <19> 18.0729, <20> 46.8505;
param workload[JOB] := <1> 2168.7835, <2> 2211.915, <3> 189.2248, <4> 338.4938, <5> 1987.4923, <6> 819.8659, <7> 1703.7907, <8> 1401.1022, <9> 2419.42, <10> 54.5648, <11> 656.1282, <12> 476.693, <13> 1469.7256, <14> 1801.3913, <15> 1095.7159, <16> 89.1136, <17> 1146.5335, <18> 158.1834, <19> 326.6297, <20> 2194.9694;
param capacity[MACHINE] := <1> 3244.2481, <2> 3244.2481, <3> 3244.2481, <4> 3244.2481, <5> 3244.2481, <6> 3244.2481, <7> 3244.2481;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
