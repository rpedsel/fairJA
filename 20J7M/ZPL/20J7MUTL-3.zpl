set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 12.8948, <2> 33.1803, <3> 30.1804, <4> 48.1909, <5> 8.9979, <6> 31.5345, <7> 23.3222, <8> 46.7395, <9> 11.7072, <10> 32.7352, <11> 24.9353, <12> 14.5262, <13> 45.0793, <14> 3.7258, <15> 36.5615, <16> 13.8001, <17> 10.7973, <18> 26.148, <19> 44.8303, <20> 41.3289;
param workload[JOB] := <1> 12.8948, <2> 33.1803, <3> 30.1804, <4> 48.1909, <5> 8.9979, <6> 31.5345, <7> 23.3222, <8> 46.7395, <9> 11.7072, <10> 32.7352, <11> 24.9353, <12> 14.5262, <13> 45.0793, <14> 3.7258, <15> 36.5615, <16> 13.8001, <17> 10.7973, <18> 26.148, <19> 44.8303, <20> 41.3289;
param capacity[MACHINE] := <1> 57.9874, <2> 57.9874, <3> 57.9874, <4> 57.9874, <5> 57.9874, <6> 57.9874, <7> 57.9874;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
