set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 34.1186, <2> 16.9588, <3> 21.4836, <4> 19.8779, <5> 22.4761, <6> 16.835, <7> 23.8372, <8> 28.0439, <9> 17.0836, <10> 24.0894, <11> 30.9908, <12> 31.3609, <13> 30.6543, <14> 33.0093, <15> 22.6291, <16> 26.3695, <17> 25.6649, <18> 31.5897, <19> 18.5225, <20> 28.8984;
param workload[JOB] := <1> 34.1186, <2> 16.9588, <3> 21.4836, <4> 19.8779, <5> 22.4761, <6> 16.835, <7> 23.8372, <8> 28.0439, <9> 17.0836, <10> 24.0894, <11> 30.9908, <12> 31.3609, <13> 30.6543, <14> 33.0093, <15> 22.6291, <16> 26.3695, <17> 25.6649, <18> 31.5897, <19> 18.5225, <20> 28.8984;
param capacity[MACHINE] := <1> 504.4935, <2> 504.4935, <3> 504.4935, <4> 504.4935, <5> 504.4935, <6> 504.4935, <7> 504.4935;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
