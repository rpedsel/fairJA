set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.1441, <2> 32.1379, <3> 24.3995, <4> 25.8131, <5> 24.5144, <6> 28.7199, <7> 25.4757, <8> 30.9534, <9> 17.6897, <10> 29.2648, <11> 22.0084, <12> 25.5562, <13> 28.8151, <14> 22.2728, <15> 20.1825, <16> 21.2091, <17> 14.8477, <18> 31.0639, <19> 29.5017, <20> 25.9752;
param workload[JOB] := <1> 3.4132, <2> 16.7062, <3> 27.612, <4> 12.0348, <5> 39.8993, <6> 8.6279, <7> 8.4896, <8> 16.3393, <9> 25.1355, <10> 1.9124, <11> 17.9357, <12> 30.0879, <13> 35.3702, <14> 15.9842, <15> 26.9875, <16> 34.8957, <17> 46.4131, <18> 26.1545, <19> 20.9234, <20> 35.6993;
param capacity[MACHINE] := <1> 48.2809, <2> 48.2809, <3> 48.2809, <4> 48.2809, <5> 48.2809, <6> 48.2809, <7> 48.2809;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
