set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.8609, <2> 37.4262, <3> 9.5965, <4> 45.6706, <5> 25.8152, <6> 46.4404, <7> 39.5799, <8> 41.953, <9> 45.6702, <10> 41.9846, <11> 45.7219, <12> 27.9401, <13> 16.6942, <14> 29.1476, <15> 38.1419, <16> 33.7254, <17> 38.924, <18> 43.6976, <19> 44.308, <20> 48.2229;
param workload[JOB] := <1> 28.8609, <2> 37.4262, <3> 9.5965, <4> 45.6706, <5> 25.8152, <6> 46.4404, <7> 39.5799, <8> 41.953, <9> 45.6702, <10> 41.9846, <11> 45.7219, <12> 27.9401, <13> 16.6942, <14> 29.1476, <15> 38.1419, <16> 33.7254, <17> 38.924, <18> 43.6976, <19> 44.308, <20> 48.2229;
param capacity[MACHINE] := <1> 104.2173, <2> 104.2173, <3> 104.2173, <4> 104.2173, <5> 104.2173, <6> 104.2173, <7> 104.2173;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
