set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 8.1338, <2> 47.7669, <3> 10.4868, <4> 18.2051, <5> 28.3093, <6> 30.2949, <7> 16.2318, <8> 1.0622, <9> 4.1039, <10> 48.1049, <11> 43.627, <12> 20.2053, <13> 17.3244, <14> 37.4054, <15> 40.4968, <16> 20.6446, <17> 33.0664, <18> 38.2239, <19> 29.2829, <20> 34.8182;
param workload[JOB] := <1> 66.1587, <2> 2281.6767, <3> 109.973, <4> 331.4257, <5> 801.4165, <6> 917.781, <7> 263.4713, <8> 1.1283, <9> 16.842, <10> 2314.0814, <11> 1903.3151, <12> 408.2541, <13> 300.1348, <14> 1399.1639, <15> 1639.9908, <16> 426.1995, <17> 1093.3868, <18> 1461.0665, <19> 857.4882, <20> 1212.3071;
param capacity[MACHINE] := <1> 1907.7066, <2> 1907.7066, <3> 1907.7066, <4> 1907.7066, <5> 1907.7066, <6> 1907.7066, <7> 1907.7066;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
