set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.0789, <2> 15.5421, <3> 21.1338, <4> 17.5165, <5> 20.8427, <6> 25.0429, <7> 20.2331, <8> 27.7098, <9> 32.7354, <10> 29.7367, <11> 16.798, <12> 32.5711, <13> 24.7166, <14> 20.8198, <15> 20.3349, <16> 25.0047, <17> 18.8591, <18> 24.4191, <19> 27.3479, <20> 21.2098;
param workload[JOB] := <1> 28.0789, <2> 15.5421, <3> 21.1338, <4> 17.5165, <5> 20.8427, <6> 25.0429, <7> 20.2331, <8> 27.7098, <9> 32.7354, <10> 29.7367, <11> 16.798, <12> 32.5711, <13> 24.7166, <14> 20.8198, <15> 20.3349, <16> 25.0047, <17> 18.8591, <18> 24.4191, <19> 27.3479, <20> 21.2098;
param capacity[MACHINE] := <1> 470.6529, <2> 470.6529, <3> 470.6529, <4> 470.6529, <5> 470.6529, <6> 470.6529, <7> 470.6529;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
