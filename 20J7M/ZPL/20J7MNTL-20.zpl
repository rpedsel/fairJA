set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.8863, <2> 24.3473, <3> 27.4304, <4> 26.2557, <5> 32.9083, <6> 24.4855, <7> 32.2215, <8> 25.8277, <9> 18.4651, <10> 26.4009, <11> 25.7906, <12> 30.7393, <13> 34.0893, <14> 21.4477, <15> 22.7066, <16> 23.0691, <17> 23.9435, <18> 16.0083, <19> 27.2588, <20> 29.8785;
param workload[JOB] := <1> 28.8863, <2> 24.3473, <3> 27.4304, <4> 26.2557, <5> 32.9083, <6> 24.4855, <7> 32.2215, <8> 25.8277, <9> 18.4651, <10> 26.4009, <11> 25.7906, <12> 30.7393, <13> 34.0893, <14> 21.4477, <15> 22.7066, <16> 23.0691, <17> 23.9435, <18> 16.0083, <19> 27.2588, <20> 29.8785;
param capacity[MACHINE] := <1> 55.9457, <2> 55.9457, <3> 55.9457, <4> 55.9457, <5> 55.9457, <6> 55.9457, <7> 55.9457;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
