set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 15.0373, <2> 34.0821, <3> 26.5669, <4> 29.2925, <5> 42.9059, <6> 21.6081, <7> 12.003, <8> 33.7893, <9> 40.3706, <10> 9.4426, <11> 47.2769, <12> 11.001, <13> 22.6376, <14> 37.8276, <15> 12.9433, <16> 22.0021, <17> 4.4248, <18> 7.4822, <19> 21.6983, <20> 3.0745;
param workload[JOB] := <1> 15.0373, <2> 34.0821, <3> 26.5669, <4> 29.2925, <5> 42.9059, <6> 21.6081, <7> 12.003, <8> 33.7893, <9> 40.3706, <10> 9.4426, <11> 47.2769, <12> 11.001, <13> 22.6376, <14> 37.8276, <15> 12.9433, <16> 22.0021, <17> 4.4248, <18> 7.4822, <19> 21.6983, <20> 3.0745;
param capacity[MACHINE] := <1> 455.4666, <2> 455.4666, <3> 455.4666, <4> 455.4666, <5> 455.4666, <6> 455.4666, <7> 455.4666;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
