set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 30.4666, <2> 25.9529, <3> 30.4786, <4> 30.1983, <5> 34.0473, <6> 25.1348, <7> 16.8842, <8> 18.913, <9> 22.2689, <10> 22.8117, <11> 19.5824, <12> 16.6729, <13> 21.5843, <14> 20.9074, <15> 23.7501, <16> 19.1257, <17> 28.0215, <18> 27.7869, <19> 27.5891, <20> 32.275;
param workload[JOB] := <1> 29.6783, <2> 19.2376, <3> 25.2498, <4> 30.1947, <5> 37.5416, <6> 2.6912, <7> 1.7317, <8> 34.3059, <9> 33.4699, <10> 6.2349, <11> 27.1297, <12> 28.6428, <13> 35.6263, <14> 8.5733, <15> 31.1385, <16> 14.4633, <17> 9.2287, <18> 3.9518, <19> 24.1901, <20> 2.9187;
param capacity[MACHINE] := <1> 43.5213, <2> 43.5213, <3> 43.5213, <4> 43.5213, <5> 43.5213, <6> 43.5213, <7> 43.5213;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
