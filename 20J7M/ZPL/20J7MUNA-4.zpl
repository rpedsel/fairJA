set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.4269, <2> 42.2627, <3> 42.2092, <4> 37.6656, <5> 10.079, <6> 44.8869, <7> 41.5674, <8> 38.4177, <9> 19.6295, <10> 41.0374, <11> 38.9432, <12> 15.5259, <13> 47.6818, <14> 40.7771, <15> 14.5138, <16> 34.2136, <17> 23.4376, <18> 44.0857, <19> 32.6564, <20> 14.2516;
param workload[JOB] := <1> 417.2582, <2> 1786.1358, <3> 1781.6166, <4> 1418.6974, <5> 101.5862, <6> 2014.8338, <7> 1727.8487, <8> 1475.9197, <9> 385.3173, <10> 1684.0682, <11> 1516.5728, <12> 241.0536, <13> 2273.5541, <14> 1662.7719, <15> 210.6504, <16> 1170.5704, <17> 549.3211, <18> 1943.5489, <19> 1066.4405, <20> 203.1081;
param capacity[MACHINE] := <1> 23630.8737, <2> 23630.8737, <3> 23630.8737, <4> 23630.8737, <5> 23630.8737, <6> 23630.8737, <7> 23630.8737;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
