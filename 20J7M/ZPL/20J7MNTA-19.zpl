set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.9061, <2> 20.2774, <3> 19.7707, <4> 28.7409, <5> 22.818, <6> 29.9819, <7> 24.7847, <8> 21.7047, <9> 11.4045, <10> 17.9885, <11> 27.5053, <12> 26.967, <13> 24.0481, <14> 16.644, <15> 24.2677, <16> 23.3191, <17> 24.6637, <18> 28.6058, <19> 22.3094, <20> 29.7626;
param workload[JOB] := <1> 835.5626, <2> 411.173, <3> 390.8806, <4> 826.0393, <5> 520.6611, <6> 898.9143, <7> 614.2814, <8> 471.094, <9> 130.0626, <10> 323.5861, <11> 756.5415, <12> 727.2191, <13> 578.3111, <14> 277.0227, <15> 588.9213, <16> 543.7804, <17> 608.2981, <18> 818.2918, <19> 497.7093, <20> 885.8124;
param capacity[MACHINE] := <1> 1254.0174, <2> 1254.0174, <3> 1254.0174, <4> 1254.0174, <5> 1254.0174, <6> 1254.0174, <7> 1254.0174;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
