set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.1934, <2> 43.1198, <3> 26.0625, <4> 27.0287, <5> 32.799, <6> 32.5122, <7> 14.2628, <8> 13.6684, <9> 2.4854, <10> 45.6106, <11> 40.0764, <12> 49.9122, <13> 30.8228, <14> 9.9757, <15> 16.3279, <16> 10.8675, <17> 6.8073, <18> 22.5283, <19> 28.3956, <20> 34.5407;
param workload[JOB] := <1> 262.2262, <2> 1859.3172, <3> 679.2539, <4> 730.5506, <5> 1075.7744, <6> 1057.0431, <7> 203.4275, <8> 186.8252, <9> 6.1772, <10> 2080.3268, <11> 1606.1178, <12> 2491.2277, <13> 950.045, <14> 99.5146, <15> 266.6003, <16> 118.1026, <17> 46.3393, <18> 507.5243, <19> 806.3101, <20> 1193.06;
param capacity[MACHINE] := <1> 2317.9663, <2> 2317.9663, <3> 2317.9663, <4> 2317.9663, <5> 2317.9663, <6> 2317.9663, <7> 2317.9663;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
