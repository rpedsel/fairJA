set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 18.4402, <2> 34.5808, <3> 24.087, <4> 18.2353, <5> 23.6972, <6> 19.6997, <7> 27.6505, <8> 26.8436, <9> 34.2525, <10> 26.2333, <11> 28.1601, <12> 24.216, <13> 17.7037, <14> 26.3297, <15> 21.5776, <16> 27.2068, <17> 31.9119, <18> 16.6763, <19> 22.0188, <20> 19.125;
param workload[JOB] := <1> 9.2714, <2> 46.4881, <3> 22.1094, <4> 47.3951, <5> 4.0232, <6> 42.6248, <7> 16.4354, <8> 0.7904, <9> 35.247, <10> 2.8602, <11> 8.4195, <12> 13.6833, <13> 48.5228, <14> 17.0535, <15> 21.7825, <16> 16.5541, <17> 11.1857, <18> 27.5263, <19> 23.2213, <20> 25.4551;
param capacity[MACHINE] := <1> 47.2124, <2> 47.2124, <3> 47.2124, <4> 47.2124, <5> 47.2124, <6> 47.2124, <7> 47.2124;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
