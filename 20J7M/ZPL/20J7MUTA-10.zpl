set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 38.3726, <2> 27.3589, <3> 45.5242, <4> 46.1809, <5> 22.5674, <6> 10.7449, <7> 21.6993, <8> 25.4185, <9> 7.348, <10> 21.4173, <11> 29.0548, <12> 34.5981, <13> 43.6086, <14> 24.2135, <15> 6.2125, <16> 32.396, <17> 42.7351, <18> 1.5253, <19> 42.4786, <20> 3.0848;
param workload[JOB] := <1> 1472.4564, <2> 748.5094, <3> 2072.4528, <4> 2132.6755, <5> 509.2875, <6> 115.4529, <7> 470.8596, <8> 646.1001, <9> 53.9931, <10> 458.7007, <11> 844.1814, <12> 1197.0285, <13> 1901.71, <14> 586.2936, <15> 38.5952, <16> 1049.5008, <17> 1826.2888, <18> 2.3265, <19> 1804.4315, <20> 9.516;
param capacity[MACHINE] := <1> 1922.1815, <2> 1922.1815, <3> 1922.1815, <4> 1922.1815, <5> 1922.1815, <6> 1922.1815, <7> 1922.1815;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
