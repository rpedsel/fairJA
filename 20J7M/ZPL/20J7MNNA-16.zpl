set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.8984, <2> 36.8594, <3> 26.1291, <4> 26.7482, <5> 27.0669, <6> 21.3939, <7> 23.0104, <8> 32.7422, <9> 26.9289, <10> 21.2749, <11> 26.3154, <12> 28.9872, <13> 32.3763, <14> 17.2847, <15> 21.1884, <16> 23.6495, <17> 24.1185, <18> 27.9435, <19> 29.3624, <20> 28.3299;
param workload[JOB] := <1> 778.3207, <2> 1358.6154, <3> 682.7299, <4> 715.4662, <5> 732.6171, <6> 457.699, <7> 529.4785, <8> 1072.0517, <9> 725.1657, <10> 452.6214, <11> 692.5003, <12> 840.2578, <13> 1048.2248, <14> 298.7609, <15> 448.9483, <16> 559.2989, <17> 581.702, <18> 780.8392, <19> 862.1505, <20> 802.5832;
param capacity[MACHINE] := <1> 14420.0315, <2> 14420.0315, <3> 14420.0315, <4> 14420.0315, <5> 14420.0315, <6> 14420.0315, <7> 14420.0315;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
