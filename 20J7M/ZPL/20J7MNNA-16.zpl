set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.5074, <2> 21.5707, <3> 33.1639, <4> 22.502, <5> 25.6228, <6> 26.6949, <7> 20.5299, <8> 34.0621, <9> 22.0814, <10> 27.18, <11> 26.1177, <12> 28.2983, <13> 23.7533, <14> 26.7188, <15> 21.2527, <16> 23.6698, <17> 19.8404, <18> 25.6078, <19> 26.8115, <20> 23.0449;
param workload[JOB] := <1> 702.6423, <2> 465.2951, <3> 1099.8443, <4> 506.34, <5> 656.5279, <6> 712.6177, <7> 421.4768, <8> 1160.2267, <9> 487.5882, <10> 738.7524, <11> 682.1343, <12> 800.7938, <13> 564.2193, <14> 713.8943, <15> 451.6773, <16> 560.2594, <17> 393.6415, <18> 655.7594, <19> 718.8565, <20> 531.0674;
param capacity[MACHINE] := <1> 13023.6146, <2> 13023.6146, <3> 13023.6146, <4> 13023.6146, <5> 13023.6146, <6> 13023.6146, <7> 13023.6146;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
