set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.6773, <2> 21.1521, <3> 22.7675, <4> 23.6164, <5> 18.8782, <6> 21.1146, <7> 23.8963, <8> 26.8235, <9> 28.0744, <10> 31.7084, <11> 23.3438, <12> 22.6074, <13> 19.3457, <14> 28.7013, <15> 20.4839, <16> 21.3867, <17> 14.433, <18> 32.5695, <19> 25.8349, <20> 23.1663;
param workload[JOB] := <1> 23.6773, <2> 21.1521, <3> 22.7675, <4> 23.6164, <5> 18.8782, <6> 21.1146, <7> 23.8963, <8> 26.8235, <9> 28.0744, <10> 31.7084, <11> 23.3438, <12> 22.6074, <13> 19.3457, <14> 28.7013, <15> 20.4839, <16> 21.3867, <17> 14.433, <18> 32.5695, <19> 25.8349, <20> 23.1663;
param capacity[MACHINE] := <1> 473.5812, <2> 473.5812, <3> 473.5812, <4> 473.5812, <5> 473.5812, <6> 473.5812, <7> 473.5812;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
