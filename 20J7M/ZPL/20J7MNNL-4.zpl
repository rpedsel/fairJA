set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.0486, <2> 21.9927, <3> 22.251, <4> 26.23, <5> 32.6301, <6> 21.3296, <7> 24.4994, <8> 32.0329, <9> 34.5362, <10> 22.957, <11> 31.1466, <12> 18.7458, <13> 23.715, <14> 31.6669, <15> 17.0539, <16> 33.3785, <17> 22.0398, <18> 30.2112, <19> 23.4629, <20> 31.5118;
param workload[JOB] := <1> 26.0486, <2> 21.9927, <3> 22.251, <4> 26.23, <5> 32.6301, <6> 21.3296, <7> 24.4994, <8> 32.0329, <9> 34.5362, <10> 22.957, <11> 31.1466, <12> 18.7458, <13> 23.715, <14> 31.6669, <15> 17.0539, <16> 33.3785, <17> 22.0398, <18> 30.2112, <19> 23.4629, <20> 31.5118;
param capacity[MACHINE] := <1> 527.4399, <2> 527.4399, <3> 527.4399, <4> 527.4399, <5> 527.4399, <6> 527.4399, <7> 527.4399;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
