set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.1408, <2> 19.2365, <3> 27.3871, <4> 24.6172, <5> 22.8523, <6> 22.6388, <7> 26.9386, <8> 31.4729, <9> 18.8132, <10> 24.9237, <11> 29.55, <12> 14.7121, <13> 34.3111, <14> 25.8545, <15> 23.4688, <16> 31.7311, <17> 14.1768, <18> 25.1284, <19> 19.626, <20> 33.1408;
param workload[JOB] := <1> 28.1408, <2> 19.2365, <3> 27.3871, <4> 24.6172, <5> 22.8523, <6> 22.6388, <7> 26.9386, <8> 31.4729, <9> 18.8132, <10> 24.9237, <11> 29.55, <12> 14.7121, <13> 34.3111, <14> 25.8545, <15> 23.4688, <16> 31.7311, <17> 14.1768, <18> 25.1284, <19> 19.626, <20> 33.1408;
param capacity[MACHINE] := <1> 498.7207, <2> 498.7207, <3> 498.7207, <4> 498.7207, <5> 498.7207, <6> 498.7207, <7> 498.7207;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
