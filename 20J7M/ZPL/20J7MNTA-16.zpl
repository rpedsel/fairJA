set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 34.6961, <2> 26.4325, <3> 27.9118, <4> 28.6523, <5> 28.6467, <6> 27.9379, <7> 18.3148, <8> 18.2158, <9> 25.6211, <10> 34.1218, <11> 36.711, <12> 21.1934, <13> 23.3638, <14> 22.0791, <15> 31.8925, <16> 28.3211, <17> 22.2318, <18> 31.4837, <19> 20.3683, <20> 23.6447;
param workload[JOB] := <1> 1203.8194, <2> 698.6771, <3> 779.0686, <4> 820.9543, <5> 820.6334, <6> 780.5263, <7> 335.4319, <8> 331.8154, <9> 656.4408, <10> 1164.2972, <11> 1347.6975, <12> 449.1602, <13> 545.8672, <14> 487.4867, <15> 1017.1316, <16> 802.0847, <17> 494.2529, <18> 991.2234, <19> 414.8676, <20> 559.0718;
param capacity[MACHINE] := <1> 1575.0545, <2> 1575.0545, <3> 1575.0545, <4> 1575.0545, <5> 1575.0545, <6> 1575.0545, <7> 1575.0545;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
