set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 31.5664, <2> 46.8954, <3> 18.8342, <4> 43.5176, <5> 34.5756, <6> 21.4357, <7> 17.8288, <8> 30.2015, <9> 43.4426, <10> 3.4487, <11> 20.4256, <12> 36.0498, <13> 47.8698, <14> 30.4173, <15> 39.3705, <16> 2.1913, <17> 36.3051, <18> 32.3059, <19> 23.2652, <20> 45.1511;
param workload[JOB] := <1> 996.4376, <2> 2199.1785, <3> 354.7271, <4> 1893.7815, <5> 1195.4721, <6> 459.4892, <7> 317.8661, <8> 912.1306, <9> 1887.2595, <10> 11.8935, <11> 417.2051, <12> 1299.5881, <13> 2291.5178, <14> 925.2121, <15> 1550.0363, <16> 4.8018, <17> 1318.0603, <18> 1043.6712, <19> 541.2695, <20> 2038.6218;
param capacity[MACHINE] := <1> 2320.5235, <2> 2320.5235, <3> 2320.5235, <4> 2320.5235, <5> 2320.5235, <6> 2320.5235, <7> 2320.5235;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
