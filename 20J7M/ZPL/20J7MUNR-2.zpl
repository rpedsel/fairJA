set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 1.0942, <2> 21.1887, <3> 20.5388, <4> 23.5105, <5> 16.2302, <6> 36.9768, <7> 11.2238, <8> 48.9133, <9> 40.4895, <10> 22.4725, <11> 37.0358, <12> 2.4541, <13> 1.1135, <14> 8.2828, <15> 27.5987, <16> 32.9082, <17> 1.2538, <18> 49.4482, <19> 22.2923, <20> 47.3548;
param workload[JOB] := <1> 24.2895, <2> 41.6619, <3> 37.2899, <4> 48.2073, <5> 21.5569, <6> 7.0155, <7> 36.7627, <8> 38.9135, <9> 1.5247, <10> 8.0126, <11> 23.9927, <12> 38.3942, <13> 41.9346, <14> 41.8376, <15> 44.0282, <16> 19.9379, <17> 20.5127, <18> 31.0929, <19> 36.2474, <20> 19.1298;
param capacity[MACHINE] := <1> 582.3425, <2> 582.3425, <3> 582.3425, <4> 582.3425, <5> 582.3425, <6> 582.3425, <7> 582.3425;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
