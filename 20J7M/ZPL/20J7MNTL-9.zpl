set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.2132, <2> 21.3718, <3> 14.559, <4> 31.9419, <5> 15.9784, <6> 18.2706, <7> 21.9147, <8> 26.9455, <9> 26.4115, <10> 27.9327, <11> 35.267, <12> 20.391, <13> 25.0965, <14> 19.4213, <15> 30.8692, <16> 25.0768, <17> 14.7744, <18> 29.1601, <19> 28.7062, <20> 22.4918;
param workload[JOB] := <1> 23.2132, <2> 21.3718, <3> 14.559, <4> 31.9419, <5> 15.9784, <6> 18.2706, <7> 21.9147, <8> 26.9455, <9> 26.4115, <10> 27.9327, <11> 35.267, <12> 20.391, <13> 25.0965, <14> 19.4213, <15> 30.8692, <16> 25.0768, <17> 14.7744, <18> 29.1601, <19> 28.7062, <20> 22.4918;
param capacity[MACHINE] := <1> 51.4064, <2> 51.4064, <3> 51.4064, <4> 51.4064, <5> 51.4064, <6> 51.4064, <7> 51.4064;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
