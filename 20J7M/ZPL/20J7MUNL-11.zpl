set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 10.9127, <2> 27.8252, <3> 13.8075, <4> 19.8859, <5> 24.6218, <6> 33.4803, <7> 11.0955, <8> 24.1755, <9> 9.3497, <10> 41.4589, <11> 14.2499, <12> 10.868, <13> 30.2723, <14> 10.7421, <15> 19.2015, <16> 8.1777, <17> 22.6127, <18> 21.0886, <19> 36.0627, <20> 37.3278;
param workload[JOB] := <1> 10.9127, <2> 27.8252, <3> 13.8075, <4> 19.8859, <5> 24.6218, <6> 33.4803, <7> 11.0955, <8> 24.1755, <9> 9.3497, <10> 41.4589, <11> 14.2499, <12> 10.868, <13> 30.2723, <14> 10.7421, <15> 19.2015, <16> 8.1777, <17> 22.6127, <18> 21.0886, <19> 36.0627, <20> 37.3278;
param capacity[MACHINE] := <1> 427.2163, <2> 427.2163, <3> 427.2163, <4> 427.2163, <5> 427.2163, <6> 427.2163, <7> 427.2163;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
