set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.7825, <2> 28.6005, <3> 34.9633, <4> 34.1126, <5> 32.0357, <6> 33.1967, <7> 21.4929, <8> 25.7247, <9> 17.8157, <10> 18.2523, <11> 31.5549, <12> 23.8704, <13> 23.5056, <14> 16.5093, <15> 25.3522, <16> 14.8134, <17> 15.9754, <18> 18.537, <19> 19.2762, <20> 19.3801;
param workload[JOB] := <1> 519.0423, <2> 817.9886, <3> 1222.4323, <4> 1163.6695, <5> 1026.2861, <6> 1102.0209, <7> 461.9448, <8> 661.7602, <9> 317.3992, <10> 333.1465, <11> 995.7117, <12> 569.796, <13> 552.5132, <14> 272.557, <15> 642.734, <16> 219.4368, <17> 255.2134, <18> 343.6204, <19> 371.5719, <20> 375.5883;
param capacity[MACHINE] := <1> 1309.7607, <2> 1309.7607, <3> 1309.7607, <4> 1309.7607, <5> 1309.7607, <6> 1309.7607, <7> 1309.7607;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
