set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.5117, <2> 13.4671, <3> 38.7334, <4> 42.3141, <5> 46.2118, <6> 42.3712, <7> 48.1954, <8> 19.8097, <9> 45.1, <10> 15.4843, <11> 16.8479, <12> 28.4482, <13> 23.8742, <14> 43.7758, <15> 2.494, <16> 23.1567, <17> 49.4254, <18> 35.454, <19> 45.0324, <20> 45.8427;
param workload[JOB] := <1> 272.6362, <2> 181.3628, <3> 1500.2763, <4> 1790.4831, <5> 2135.5305, <6> 1795.3186, <7> 2322.7966, <8> 392.4242, <9> 2034.01, <10> 239.7635, <11> 283.8517, <12> 809.3001, <13> 569.9774, <14> 1916.3207, <15> 6.22, <16> 536.2328, <17> 2442.8702, <18> 1256.9861, <19> 2027.917, <20> 2101.5531;
param capacity[MACHINE] := <1> 24615.8309, <2> 24615.8309, <3> 24615.8309, <4> 24615.8309, <5> 24615.8309, <6> 24615.8309, <7> 24615.8309;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
