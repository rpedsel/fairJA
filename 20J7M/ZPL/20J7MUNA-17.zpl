set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 12.9019, <2> 21.4517, <3> 46.6459, <4> 1.286, <5> 47.2835, <6> 40.429, <7> 36.7239, <8> 47.2032, <9> 49.1876, <10> 24.6137, <11> 14.1835, <12> 48.59, <13> 47.3251, <14> 1.3424, <15> 43.3961, <16> 34.0267, <17> 34.3669, <18> 12.1326, <19> 20.559, <20> 4.5786;
param workload[JOB] := <1> 166.459, <2> 460.1754, <3> 2175.84, <4> 1.6538, <5> 2235.7294, <6> 1634.504, <7> 1348.6448, <8> 2228.1421, <9> 2419.42, <10> 605.8342, <11> 201.1717, <12> 2360.9881, <13> 2239.6651, <14> 1.802, <15> 1883.2215, <16> 1157.8163, <17> 1181.0838, <18> 147.2, <19> 422.6725, <20> 20.9636;
param capacity[MACHINE] := <1> 22892.9873, <2> 22892.9873, <3> 22892.9873, <4> 22892.9873, <5> 22892.9873, <6> 22892.9873, <7> 22892.9873;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
