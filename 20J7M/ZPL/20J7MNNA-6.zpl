set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.0425, <2> 24.3784, <3> 32.286, <4> 22.77, <5> 21.2349, <6> 32.168, <7> 25.0119, <8> 26.6101, <9> 27.5956, <10> 34.8702, <11> 20.8031, <12> 23.9835, <13> 26.1003, <14> 21.5852, <15> 22.8523, <16> 26.3469, <17> 22.3306, <18> 34.166, <19> 20.8484, <20> 21.3275;
param workload[JOB] := <1> 530.9568, <2> 594.3064, <3> 1042.3858, <4> 518.4729, <5> 450.921, <6> 1034.7802, <7> 625.5951, <8> 708.0974, <9> 761.5171, <10> 1215.9308, <11> 432.769, <12> 575.2083, <13> 681.2257, <14> 465.9209, <15> 522.2276, <16> 694.1591, <17> 498.6557, <18> 1167.3156, <19> 434.6558, <20> 454.8623;
param capacity[MACHINE] := <1> 13409.9635, <2> 13409.9635, <3> 13409.9635, <4> 13409.9635, <5> 13409.9635, <6> 13409.9635, <7> 13409.9635;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
