set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.4524, <2> 19.9008, <3> 41.6726, <4> 33.4593, <5> 22.507, <6> 4.3934, <7> 37.1416, <8> 25.4897, <9> 7.9861, <10> 0.5533, <11> 4.7016, <12> 46.8493, <13> 39.3202, <14> 22.0658, <15> 36.0309, <16> 32.3569, <17> 40.5323, <18> 36.0687, <19> 10.564, <20> 20.7696;
param workload[JOB] := <1> 5.2089, <2> 21.8514, <3> 1.583, <4> 16.584, <5> 7.1439, <6> 22.7747, <7> 10.7907, <8> 22.6308, <9> 28.1856, <10> 40.3698, <11> 41.6933, <12> 36.0494, <13> 31.5284, <14> 41.7597, <15> 47.011, <16> 48.7987, <17> 29.8688, <18> 49.8918, <19> 19.9649, <20> 19.7353;
param capacity[MACHINE] := <1> 543.4241, <2> 543.4241, <3> 543.4241, <4> 543.4241, <5> 543.4241, <6> 543.4241, <7> 543.4241;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
