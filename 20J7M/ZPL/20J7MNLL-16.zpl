set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 15.4789, <2> 21.3372, <3> 25.5134, <4> 18.4968, <5> 18.7057, <6> 18.3318, <7> 22.1254, <8> 19.3723, <9> 24.1679, <10> 24.6642, <11> 27.4869, <12> 35.7486, <13> 24.1044, <14> 30.6768, <15> 21.4178, <16> 29.4261, <17> 26.3234, <18> 24.171, <19> 24.5332, <20> 36.5855;
param workload[JOB] := <1> 15.4789, <2> 21.3372, <3> 25.5134, <4> 18.4968, <5> 18.7057, <6> 18.3318, <7> 22.1254, <8> 19.3723, <9> 24.1679, <10> 24.6642, <11> 27.4869, <12> 35.7486, <13> 24.1044, <14> 30.6768, <15> 21.4178, <16> 29.4261, <17> 26.3234, <18> 24.171, <19> 24.5332, <20> 36.5855;
param capacity[MACHINE] := <1> 69.8096, <2> 69.8096, <3> 69.8096, <4> 69.8096, <5> 69.8096, <6> 69.8096, <7> 69.8096;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
