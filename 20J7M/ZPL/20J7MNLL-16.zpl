set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.2564, <2> 30.8748, <3> 26.8822, <4> 33.7179, <5> 31.9253, <6> 28.5423, <7> 19.8685, <8> 30.6701, <9> 27.6107, <10> 25.6397, <11> 27.9135, <12> 18.1658, <13> 19.4942, <14> 30.339, <15> 28.1462, <16> 22.0822, <17> 27.0917, <18> 24.0735, <19> 30.61, <20> 33.2008;
param workload[JOB] := <1> 20.2564, <2> 30.8748, <3> 26.8822, <4> 33.7179, <5> 31.9253, <6> 28.5423, <7> 19.8685, <8> 30.6701, <9> 27.6107, <10> 25.6397, <11> 27.9135, <12> 18.1658, <13> 19.4942, <14> 30.339, <15> 28.1462, <16> 22.0822, <17> 27.0917, <18> 24.0735, <19> 30.61, <20> 33.2008;
param capacity[MACHINE] := <1> 76.7293, <2> 76.7293, <3> 76.7293, <4> 76.7293, <5> 76.7293, <6> 76.7293, <7> 76.7293;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
