set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 14.6198, <2> 19.513, <3> 29.644, <4> 23.9093, <5> 21.8038, <6> 39.1239, <7> 23.566, <8> 33.3258, <9> 19.6474, <10> 28.2516, <11> 21.1423, <12> 20.2441, <13> 10.7046, <14> 31.5024, <15> 28.5373, <16> 24.1338, <17> 21.6387, <18> 26.0291, <19> 32.178, <20> 27.1394;
param workload[JOB] := <1> 36.2482, <2> 27.5105, <3> 18.5747, <4> 40.1394, <5> 6.3236, <6> 14.7472, <7> 40.8603, <8> 38.1789, <9> 21.4619, <10> 14.5425, <11> 36.8651, <12> 11.9177, <13> 1.5037, <14> 22.511, <15> 48.9002, <16> 3.4694, <17> 10.2244, <18> 49.3839, <19> 44.0196, <20> 37.4502;
param capacity[MACHINE] := <1> 524.8324, <2> 524.8324, <3> 524.8324, <4> 524.8324, <5> 524.8324, <6> 524.8324, <7> 524.8324;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
