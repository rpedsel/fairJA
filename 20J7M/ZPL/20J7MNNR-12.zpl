set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.5142, <2> 30.5143, <3> 20.773, <4> 10.9668, <5> 33.2373, <6> 34.8872, <7> 24.354, <8> 23.6878, <9> 26.2945, <10> 29.8606, <11> 22.7535, <12> 22.3788, <13> 28.3298, <14> 17.9915, <15> 26.1963, <16> 31.1946, <17> 24.379, <18> 25.6345, <19> 23.8381, <20> 31.298;
param workload[JOB] := <1> 35.5561, <2> 23.3153, <3> 11.6268, <4> 28.3211, <5> 30.5418, <6> 19.73, <7> 37.1185, <8> 25.7365, <9> 4.9936, <10> 20.2822, <11> 21.9105, <12> 37.0468, <13> 32.44, <14> 46.0122, <15> 9.8355, <16> 1.9891, <17> 4.438, <18> 38.3704, <19> 1.9043, <20> 12.242;
param capacity[MACHINE] := <1> 443.4107, <2> 443.4107, <3> 443.4107, <4> 443.4107, <5> 443.4107, <6> 443.4107, <7> 443.4107;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
