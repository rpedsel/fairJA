set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.3494, <2> 22.5489, <3> 25.6816, <4> 25.2232, <5> 29.9774, <6> 23.9646, <7> 26.8853, <8> 28.6195, <9> 19.1971, <10> 28.1457, <11> 20.3039, <12> 20.2589, <13> 28.3628, <14> 29.5281, <15> 17.3988, <16> 24.6755, <17> 31.0421, <18> 24.5453, <19> 28.6038, <20> 24.3338;
param workload[JOB] := <1> 45.6964, <2> 26.189, <3> 17.0014, <4> 33.6043, <5> 39.3226, <6> 37.1011, <7> 3.9932, <8> 8.9878, <9> 10.5663, <10> 26.8332, <11> 34.3708, <12> 4.5779, <13> 40.3365, <14> 41.6618, <15> 7.7956, <16> 30.9559, <17> 45.6404, <18> 47.7271, <19> 29.5201, <20> 31.07;
param capacity[MACHINE] := <1> 80.4216, <2> 80.4216, <3> 80.4216, <4> 80.4216, <5> 80.4216, <6> 80.4216, <7> 80.4216;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
