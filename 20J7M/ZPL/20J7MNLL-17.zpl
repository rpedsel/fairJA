set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.1812, <2> 27.5148, <3> 30.7236, <4> 33.3447, <5> 18.944, <6> 22.4791, <7> 33.1726, <8> 32.3385, <9> 27.2984, <10> 32.628, <11> 30.3011, <12> 18.2264, <13> 27.7268, <14> 35.1429, <15> 24.5349, <16> 28.3562, <17> 37.2574, <18> 34.0903, <19> 27.1005, <20> 28.4271;
param workload[JOB] := <1> 27.1812, <2> 27.5148, <3> 30.7236, <4> 33.3447, <5> 18.944, <6> 22.4791, <7> 33.1726, <8> 32.3385, <9> 27.2984, <10> 32.628, <11> 30.3011, <12> 18.2264, <13> 27.7268, <14> 35.1429, <15> 24.5349, <16> 28.3562, <17> 37.2574, <18> 34.0903, <19> 27.1005, <20> 28.4271;
param capacity[MACHINE] := <1> 82.3984, <2> 82.3984, <3> 82.3984, <4> 82.3984, <5> 82.3984, <6> 82.3984, <7> 82.3984;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
