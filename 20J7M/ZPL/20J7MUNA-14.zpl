set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 32.295, <2> 17.8565, <3> 45.2288, <4> 17.6237, <5> 9.6274, <6> 48.3197, <7> 0.7136, <8> 1.838, <9> 1.2203, <10> 8.3331, <11> 19.2939, <12> 2.7584, <13> 37.7245, <14> 19.7031, <15> 7.7414, <16> 10.9857, <17> 47.8861, <18> 19.908, <19> 45.4816, <20> 4.7137;
param workload[JOB] := <1> 1042.967, <2> 318.8546, <3> 2045.6443, <4> 310.5948, <5> 92.6868, <6> 2334.7934, <7> 0.5092, <8> 3.3782, <9> 1.4891, <10> 69.4406, <11> 372.2546, <12> 7.6088, <13> 1423.1379, <14> 388.2121, <15> 59.9293, <16> 120.6856, <17> 2293.0786, <18> 396.3285, <19> 2068.5759, <20> 22.219;
param capacity[MACHINE] := <1> 13372.3883, <2> 13372.3883, <3> 13372.3883, <4> 13372.3883, <5> 13372.3883, <6> 13372.3883, <7> 13372.3883;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
