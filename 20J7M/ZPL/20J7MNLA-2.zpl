set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.647, <2> 22.3214, <3> 25.4541, <4> 25.0595, <5> 20.7631, <6> 29.2908, <7> 35.2161, <8> 31.2318, <9> 28.8976, <10> 22.5129, <11> 23.0866, <12> 29.0085, <13> 35.9153, <14> 33.1166, <15> 26.6758, <16> 29.9663, <17> 29.0984, <18> 26.8262, <19> 28.5572, <20> 20.5046;
param workload[JOB] := <1> 878.9446, <2> 498.2449, <3> 647.9112, <4> 627.9785, <5> 431.1063, <6> 857.951, <7> 1240.1737, <8> 975.4253, <9> 835.0713, <10> 506.8307, <11> 532.9911, <12> 841.4931, <13> 1289.9088, <14> 1096.7092, <15> 711.5983, <16> 897.9791, <17> 846.7169, <18> 719.645, <19> 815.5137, <20> 420.4386;
param capacity[MACHINE] := <1> 2238.9473, <2> 2238.9473, <3> 2238.9473, <4> 2238.9473, <5> 2238.9473, <6> 2238.9473, <7> 2238.9473;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
