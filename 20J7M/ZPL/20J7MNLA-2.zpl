set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.422, <2> 29.2803, <3> 22.4747, <4> 22.3239, <5> 9.2851, <6> 30.865, <7> 32.3993, <8> 24.3029, <9> 20.2203, <10> 26.9818, <11> 19.2352, <12> 34.8929, <13> 25.6869, <14> 24.8901, <15> 28.2737, <16> 16.4874, <17> 25.58, <18> 17.3311, <19> 29.2009, <20> 20.2211;
param workload[JOB] := <1> 698.1221, <2> 857.336, <3> 505.1121, <4> 498.3565, <5> 86.2131, <6> 952.6482, <7> 1049.7146, <8> 590.6309, <9> 408.8605, <10> 728.0175, <11> 369.9929, <12> 1217.5145, <13> 659.8168, <14> 619.5171, <15> 799.4021, <16> 271.8344, <17> 654.3364, <18> 300.367, <19> 852.6926, <20> 408.8929;
param capacity[MACHINE] := <1> 1789.9112, <2> 1789.9112, <3> 1789.9112, <4> 1789.9112, <5> 1789.9112, <6> 1789.9112, <7> 1789.9112;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
