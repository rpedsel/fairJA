set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.8112, <2> 24.6836, <3> 28.0098, <4> 25.885, <5> 32.441, <6> 21.3695, <7> 25.0246, <8> 18.1728, <9> 23.1996, <10> 24.8847, <11> 29.5856, <12> 22.0616, <13> 26.8627, <14> 24.6326, <15> 27.3582, <16> 19.7966, <17> 20.9591, <18> 22.687, <19> 30.0325, <20> 17.7254;
param workload[JOB] := <1> 21.8613, <2> 37.7649, <3> 3.9916, <4> 26.8195, <5> 36.5622, <6> 29.2792, <7> 39.6332, <8> 20.1367, <9> 40.9063, <10> 42.3878, <11> 44.049, <12> 8.024, <13> 16.8628, <14> 13.0113, <15> 28.2495, <16> 38.8116, <17> 21.9354, <18> 32.4856, <19> 13.0289, <20> 35.2244;
param capacity[MACHINE] := <1> 551.0252, <2> 551.0252, <3> 551.0252, <4> 551.0252, <5> 551.0252, <6> 551.0252, <7> 551.0252;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
