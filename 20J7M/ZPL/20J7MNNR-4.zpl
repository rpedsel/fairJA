set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.5477, <2> 32.452, <3> 26.6189, <4> 35.228, <5> 22.3924, <6> 19.1433, <7> 31.8665, <8> 16.1832, <9> 24.2425, <10> 18.2002, <11> 26.8665, <12> 28.981, <13> 21.9465, <14> 21.3906, <15> 24.9172, <16> 25.3171, <17> 27.9518, <18> 17.668, <19> 23.4549, <20> 20.965;
param workload[JOB] := <1> 11.6138, <2> 36.043, <3> 25.0468, <4> 2.7359, <5> 15.4526, <6> 8.1909, <7> 22.9622, <8> 40.9425, <9> 26.0718, <10> 2.3163, <11> 38.2599, <12> 42.8499, <13> 24.6639, <14> 12.0248, <15> 33.0362, <16> 29.9018, <17> 37.3126, <18> 47.4644, <19> 11.5991, <20> 12.9224;
param capacity[MACHINE] := <1> 481.4108, <2> 481.4108, <3> 481.4108, <4> 481.4108, <5> 481.4108, <6> 481.4108, <7> 481.4108;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
