set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.2884, <2> 22.756, <3> 29.8325, <4> 34.7133, <5> 24.1224, <6> 23.4015, <7> 22.0249, <8> 17.2646, <9> 30.1407, <10> 23.2038, <11> 30.7326, <12> 22.036, <13> 22.5509, <14> 25.8879, <15> 23.7254, <16> 23.7666, <17> 18.6759, <18> 30.7405, <19> 13.7728, <20> 23.8956;
param workload[JOB] := <1> 22.7799, <2> 46.0207, <3> 11.9092, <4> 47.0984, <5> 43.6616, <6> 13.0516, <7> 8.2117, <8> 39.4845, <9> 46.8546, <10> 48.7994, <11> 39.0157, <12> 39.644, <13> 19.3688, <14> 5.4636, <15> 35.9305, <16> 7.3625, <17> 36.997, <18> 26.6306, <19> 9.3723, <20> 45.9462;
param capacity[MACHINE] := <1> 593.6028, <2> 593.6028, <3> 593.6028, <4> 593.6028, <5> 593.6028, <6> 593.6028, <7> 593.6028;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
