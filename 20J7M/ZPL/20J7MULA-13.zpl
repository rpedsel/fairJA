set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 36.9186, <2> 35.2908, <3> 0.819, <4> 36.1671, <5> 35.3879, <6> 2.4055, <7> 12.966, <8> 29.6394, <9> 32.1655, <10> 3.7188, <11> 36.4461, <12> 32.0883, <13> 31.1623, <14> 32.682, <15> 33.7624, <16> 5.1867, <17> 48.9165, <18> 12.7042, <19> 16.3801, <20> 47.4984;
param workload[JOB] := <1> 1362.983, <2> 1245.4406, <3> 0.6708, <4> 1308.0591, <5> 1252.3035, <6> 5.7864, <7> 168.1172, <8> 878.494, <9> 1034.6194, <10> 13.8295, <11> 1328.3182, <12> 1029.659, <13> 971.0889, <14> 1068.1131, <15> 1139.8997, <16> 26.9019, <17> 2392.824, <18> 161.3967, <19> 268.3077, <20> 2256.098;
param capacity[MACHINE] := <1> 2558.9872, <2> 2558.9872, <3> 2558.9872, <4> 2558.9872, <5> 2558.9872, <6> 2558.9872, <7> 2558.9872;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
