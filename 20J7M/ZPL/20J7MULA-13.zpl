set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 11.9634, <2> 15.7505, <3> 15.4294, <4> 46.894, <5> 10.809, <6> 8.3758, <7> 5.0753, <8> 24.149, <9> 20.1209, <10> 12.5945, <11> 36.5625, <12> 22.5326, <13> 12.1438, <14> 44.612, <15> 18.7796, <16> 35.3895, <17> 16.3715, <18> 20.9904, <19> 34.8166, <20> 11.6193;
param workload[JOB] := <1> 143.1229, <2> 248.0783, <3> 238.0664, <4> 2199.0472, <5> 116.8345, <6> 70.154, <7> 25.7587, <8> 583.1742, <9> 404.8506, <10> 158.6214, <11> 1336.8164, <12> 507.7181, <13> 147.4719, <14> 1990.2305, <15> 352.6734, <16> 1252.4167, <17> 268.026, <18> 440.5969, <19> 1212.1956, <20> 135.0081;
param capacity[MACHINE] := <1> 1690.1231, <2> 1690.1231, <3> 1690.1231, <4> 1690.1231, <5> 1690.1231, <6> 1690.1231, <7> 1690.1231;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
