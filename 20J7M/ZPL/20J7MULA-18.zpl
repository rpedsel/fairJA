set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 36.1233, <2> 46.4748, <3> 34.6695, <4> 30.2417, <5> 26.6885, <6> 3.5662, <7> 30.2355, <8> 29.8163, <9> 44.5637, <10> 41.1192, <11> 27.8541, <12> 14.1036, <13> 12.9978, <14> 28.8816, <15> 14.6595, <16> 12.6014, <17> 19.9214, <18> 30.6401, <19> 36.8321, <20> 31.8185;
param workload[JOB] := <1> 1304.8928, <2> 2159.907, <3> 1201.9742, <4> 914.5604, <5> 712.276, <6> 12.7178, <7> 914.1855, <8> 889.0117, <9> 1985.9234, <10> 1690.7886, <11> 775.8509, <12> 198.9115, <13> 168.9428, <14> 834.1468, <15> 214.9009, <16> 158.7953, <17> 396.8622, <18> 938.8157, <19> 1356.6036, <20> 1012.4169;
param capacity[MACHINE] := <1> 2548.9263, <2> 2548.9263, <3> 2548.9263, <4> 2548.9263, <5> 2548.9263, <6> 2548.9263, <7> 2548.9263;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
