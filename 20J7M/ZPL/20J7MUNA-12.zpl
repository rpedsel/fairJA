set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 9.1216, <2> 38.8037, <3> 46.909, <4> 24.8893, <5> 10.5403, <6> 45.9481, <7> 28.5838, <8> 9.6129, <9> 33.5361, <10> 28.8856, <11> 46.2783, <12> 22.6008, <13> 41.9502, <14> 48.6935, <15> 37.1317, <16> 49.4362, <17> 31.5329, <18> 21.7644, <19> 19.5666, <20> 34.2672;
param workload[JOB] := <1> 83.2036, <2> 1505.7271, <3> 2200.4543, <4> 619.4773, <5> 111.0979, <6> 2111.2279, <7> 817.0336, <8> 92.4078, <9> 1124.67, <10> 834.3779, <11> 2141.6811, <12> 510.7962, <13> 1759.8193, <14> 2371.0569, <15> 1378.7631, <16> 2443.9379, <17> 994.3238, <18> 473.6891, <19> 382.8518, <20> 1174.241;
param capacity[MACHINE] := <1> 23130.8376, <2> 23130.8376, <3> 23130.8376, <4> 23130.8376, <5> 23130.8376, <6> 23130.8376, <7> 23130.8376;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
