set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 9.1036, <2> 47.6647, <3> 17.3882, <4> 32.958, <5> 11.984, <6> 48.1411, <7> 25.5989, <8> 22.4687, <9> 24.7046, <10> 46.5779, <11> 20.8696, <12> 3.5933, <13> 48.779, <14> 16.8611, <15> 10.4658, <16> 22.2775, <17> 10.4069, <18> 42.4031, <19> 33.68, <20> 34.9964;
param workload[JOB] := <1> 82.8755, <2> 2271.9236, <3> 302.3495, <4> 1086.2298, <5> 143.6163, <6> 2317.5655, <7> 655.3037, <8> 504.8425, <9> 610.3173, <10> 2169.5008, <11> 435.5402, <12> 12.9118, <13> 2379.3908, <14> 284.2967, <15> 109.533, <16> 496.287, <17> 108.3036, <18> 1798.0229, <19> 1134.3424, <20> 1224.748;
param capacity[MACHINE] := <1> 18127.9009, <2> 18127.9009, <3> 18127.9009, <4> 18127.9009, <5> 18127.9009, <6> 18127.9009, <7> 18127.9009;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
