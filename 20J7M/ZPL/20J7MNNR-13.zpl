set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.125, <2> 22.9078, <3> 19.6111, <4> 20.807, <5> 21.7634, <6> 19.9399, <7> 23.5498, <8> 16.0, <9> 20.9221, <10> 27.0828, <11> 25.3631, <12> 22.6196, <13> 21.6625, <14> 23.8379, <15> 26.8856, <16> 26.9615, <17> 22.5432, <18> 18.8997, <19> 22.67, <20> 19.648;
param workload[JOB] := <1> 2.8468, <2> 36.2534, <3> 16.7271, <4> 1.2547, <5> 31.3653, <6> 46.4159, <7> 28.1593, <8> 27.6503, <9> 12.0805, <10> 45.8235, <11> 20.4606, <12> 13.5239, <13> 34.8079, <14> 28.6476, <15> 5.7005, <16> 37.1909, <17> 2.3655, <18> 12.5356, <19> 17.7285, <20> 24.7723;
param capacity[MACHINE] := <1> 446.3101, <2> 446.3101, <3> 446.3101, <4> 446.3101, <5> 446.3101, <6> 446.3101, <7> 446.3101;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
