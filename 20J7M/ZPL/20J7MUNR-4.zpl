set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.1132, <2> 22.9512, <3> 21.994, <4> 5.4335, <5> 46.8193, <6> 47.0541, <7> 21.9227, <8> 47.9836, <9> 27.769, <10> 27.2715, <11> 35.0143, <12> 38.5058, <13> 48.4139, <14> 18.4721, <15> 43.7873, <16> 44.2727, <17> 35.468, <18> 34.1345, <19> 0.0191, <20> 14.1373;
param workload[JOB] := <1> 8.5279, <2> 32.2179, <3> 39.0547, <4> 5.431, <5> 49.0159, <6> 47.6369, <7> 3.6931, <8> 22.4558, <9> 26.1372, <10> 17.9185, <11> 31.2624, <12> 20.7522, <13> 49.213, <14> 19.056, <15> 2.0432, <16> 4.4351, <17> 45.8159, <18> 18.6587, <19> 40.4699, <20> 17.432;
param capacity[MACHINE] := <1> 501.2273, <2> 501.2273, <3> 501.2273, <4> 501.2273, <5> 501.2273, <6> 501.2273, <7> 501.2273;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
