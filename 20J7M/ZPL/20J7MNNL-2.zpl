set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.2373, <2> 25.3362, <3> 26.8191, <4> 26.3867, <5> 24.0243, <6> 18.5735, <7> 29.0094, <8> 29.5217, <9> 18.336, <10> 31.8519, <11> 17.3072, <12> 32.5293, <13> 27.7789, <14> 23.2565, <15> 32.6798, <16> 21.5411, <17> 29.6604, <18> 31.4312, <19> 29.6144, <20> 32.2703;
param workload[JOB] := <1> 26.2373, <2> 25.3362, <3> 26.8191, <4> 26.3867, <5> 24.0243, <6> 18.5735, <7> 29.0094, <8> 29.5217, <9> 18.336, <10> 31.8519, <11> 17.3072, <12> 32.5293, <13> 27.7789, <14> 23.2565, <15> 32.6798, <16> 21.5411, <17> 29.6604, <18> 31.4312, <19> 29.6144, <20> 32.2703;
param capacity[MACHINE] := <1> 534.1652, <2> 534.1652, <3> 534.1652, <4> 534.1652, <5> 534.1652, <6> 534.1652, <7> 534.1652;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
