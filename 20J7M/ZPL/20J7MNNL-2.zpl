set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 18.8904, <2> 30.7028, <3> 22.1797, <4> 32.4771, <5> 29.8299, <6> 26.8773, <7> 32.9448, <8> 27.3969, <9> 28.1143, <10> 21.8196, <11> 32.0309, <12> 23.6498, <13> 31.8485, <14> 28.5013, <15> 23.4047, <16> 24.8327, <17> 26.685, <18> 23.5342, <19> 21.6666, <20> 23.8556;
param workload[JOB] := <1> 18.8904, <2> 30.7028, <3> 22.1797, <4> 32.4771, <5> 29.8299, <6> 26.8773, <7> 32.9448, <8> 27.3969, <9> 28.1143, <10> 21.8196, <11> 32.0309, <12> 23.6498, <13> 31.8485, <14> 28.5013, <15> 23.4047, <16> 24.8327, <17> 26.685, <18> 23.5342, <19> 21.6666, <20> 23.8556;
param capacity[MACHINE] := <1> 531.2421, <2> 531.2421, <3> 531.2421, <4> 531.2421, <5> 531.2421, <6> 531.2421, <7> 531.2421;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
