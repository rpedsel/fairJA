set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.3415, <2> 21.0014, <3> 23.3178, <4> 31.9257, <5> 22.2023, <6> 25.4718, <7> 17.2384, <8> 21.9043, <9> 27.3471, <10> 32.2296, <11> 22.1649, <12> 30.4096, <13> 20.236, <14> 24.1169, <15> 23.9848, <16> 28.8723, <17> 21.7335, <18> 25.5827, <19> 25.646, <20> 27.3063;
param workload[JOB] := <1> 36.6182, <2> 24.9199, <3> 36.2228, <4> 9.0881, <5> 46.3779, <6> 29.3875, <7> 1.4038, <8> 25.7428, <9> 45.6749, <10> 18.5895, <11> 12.5528, <12> 4.079, <13> 45.7976, <14> 49.2825, <15> 29.6589, <16> 31.4356, <17> 40.1915, <18> 46.7674, <19> 13.4262, <20> 46.4203;
param capacity[MACHINE] := <1> 84.8053, <2> 84.8053, <3> 84.8053, <4> 84.8053, <5> 84.8053, <6> 84.8053, <7> 84.8053;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
