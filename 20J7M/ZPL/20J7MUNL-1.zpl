set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 11.9518, <2> 38.3419, <3> 23.5316, <4> 24.5492, <5> 24.2814, <6> 41.1267, <7> 7.41, <8> 11.5659, <9> 0.4026, <10> 31.5839, <11> 48.4554, <12> 48.246, <13> 48.4971, <14> 11.7264, <15> 7.0205, <16> 33.4819, <17> 36.7202, <18> 42.8878, <19> 0.3523, <20> 11.2223;
param workload[JOB] := <1> 11.9518, <2> 38.3419, <3> 23.5316, <4> 24.5492, <5> 24.2814, <6> 41.1267, <7> 7.41, <8> 11.5659, <9> 0.4026, <10> 31.5839, <11> 48.4554, <12> 48.246, <13> 48.4971, <14> 11.7264, <15> 7.0205, <16> 33.4819, <17> 36.7202, <18> 42.8878, <19> 0.3523, <20> 11.2223;
param capacity[MACHINE] := <1> 503.3549, <2> 503.3549, <3> 503.3549, <4> 503.3549, <5> 503.3549, <6> 503.3549, <7> 503.3549;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
