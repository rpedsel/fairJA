set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.9695, <2> 39.1701, <3> 26.5474, <4> 29.1396, <5> 32.7298, <6> 23.6798, <7> 27.3064, <8> 32.081, <9> 22.8323, <10> 34.3196, <11> 18.337, <12> 25.9002, <13> 24.7692, <14> 20.1892, <15> 23.7918, <16> 24.8158, <17> 22.2449, <18> 21.2117, <19> 15.3322, <20> 17.4186;
param workload[JOB] := <1> 28.9695, <2> 39.1701, <3> 26.5474, <4> 29.1396, <5> 32.7298, <6> 23.6798, <7> 27.3064, <8> 32.081, <9> 22.8323, <10> 34.3196, <11> 18.337, <12> 25.9002, <13> 24.7692, <14> 20.1892, <15> 23.7918, <16> 24.8158, <17> 22.2449, <18> 21.2117, <19> 15.3322, <20> 17.4186;
param capacity[MACHINE] := <1> 510.7861, <2> 510.7861, <3> 510.7861, <4> 510.7861, <5> 510.7861, <6> 510.7861, <7> 510.7861;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
