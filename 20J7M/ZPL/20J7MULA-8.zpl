set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 47.9704, <2> 30.3343, <3> 29.5984, <4> 43.232, <5> 45.63, <6> 5.2631, <7> 22.517, <8> 24.8544, <9> 23.5193, <10> 41.1893, <11> 18.4648, <12> 38.8224, <13> 5.3038, <14> 33.9583, <15> 4.909, <16> 20.9335, <17> 33.3485, <18> 25.3296, <19> 5.9095, <20> 19.3108;
param workload[JOB] := <1> 2301.1593, <2> 920.1698, <3> 876.0653, <4> 1869.0058, <5> 2082.0969, <6> 27.7002, <7> 507.0153, <8> 617.7412, <9> 553.1575, <10> 1696.5584, <11> 340.9488, <12> 1507.1787, <13> 28.1303, <14> 1153.1661, <15> 24.0983, <16> 438.2114, <17> 1112.1225, <18> 641.5886, <19> 34.9222, <20> 372.907;
param capacity[MACHINE] := <1> 2443.4205, <2> 2443.4205, <3> 2443.4205, <4> 2443.4205, <5> 2443.4205, <6> 2443.4205, <7> 2443.4205;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
