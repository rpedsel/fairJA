set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.8441, <2> 39.2527, <3> 35.1918, <4> 24.9246, <5> 12.0463, <6> 7.9134, <7> 24.9048, <8> 4.4071, <9> 10.3461, <10> 10.5709, <11> 12.7104, <12> 47.612, <13> 30.0278, <14> 29.9368, <15> 7.7481, <16> 29.602, <17> 35.0425, <18> 13.9962, <19> 46.8188, <20> 21.9058;
param workload[JOB] := <1> 28.8441, <2> 39.2527, <3> 35.1918, <4> 24.9246, <5> 12.0463, <6> 7.9134, <7> 24.9048, <8> 4.4071, <9> 10.3461, <10> 10.5709, <11> 12.7104, <12> 47.612, <13> 30.0278, <14> 29.9368, <15> 7.7481, <16> 29.602, <17> 35.0425, <18> 13.9962, <19> 46.8188, <20> 21.9058;
param capacity[MACHINE] := <1> 473.8022, <2> 473.8022, <3> 473.8022, <4> 473.8022, <5> 473.8022, <6> 473.8022, <7> 473.8022;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
