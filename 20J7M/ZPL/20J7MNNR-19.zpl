set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.3919, <2> 23.2332, <3> 20.7961, <4> 17.2271, <5> 22.3479, <6> 29.3313, <7> 29.3746, <8> 18.5772, <9> 13.0041, <10> 16.5514, <11> 28.1615, <12> 29.4778, <13> 26.053, <14> 31.7188, <15> 35.5425, <16> 32.0271, <17> 22.2446, <18> 24.2727, <19> 30.1142, <20> 29.4215;
param workload[JOB] := <1> 25.3002, <2> 14.546, <3> 45.3426, <4> 32.6373, <5> 11.1621, <6> 45.3705, <7> 26.6376, <8> 47.8995, <9> 38.9509, <10> 28.2775, <11> 12.3143, <12> 30.2189, <13> 23.0739, <14> 43.7062, <15> 18.2303, <16> 1.3029, <17> 35.5297, <18> 0.0499, <19> 12.2088, <20> 16.5903;
param capacity[MACHINE] := <1> 509.3494, <2> 509.3494, <3> 509.3494, <4> 509.3494, <5> 509.3494, <6> 509.3494, <7> 509.3494;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
