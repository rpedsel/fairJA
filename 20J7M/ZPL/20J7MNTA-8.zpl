set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 19.5065, <2> 21.0823, <3> 24.4657, <4> 20.5169, <5> 23.0914, <6> 17.9166, <7> 18.9426, <8> 26.071, <9> 26.7315, <10> 19.6527, <11> 22.059, <12> 20.0525, <13> 18.5483, <14> 28.2954, <15> 29.8615, <16> 26.1426, <17> 25.6123, <18> 26.3597, <19> 25.0906, <20> 20.0049;
param workload[JOB] := <1> 380.5035, <2> 444.4634, <3> 598.5705, <4> 420.9432, <5> 533.2128, <6> 321.0046, <7> 358.8221, <8> 679.697, <9> 714.5731, <10> 386.2286, <11> 486.5995, <12> 402.1028, <13> 344.0394, <14> 800.6297, <15> 891.7092, <16> 683.4355, <17> 655.9899, <18> 694.8338, <19> 629.5382, <20> 400.196;
param capacity[MACHINE] := <1> 1160.0456, <2> 1160.0456, <3> 1160.0456, <4> 1160.0456, <5> 1160.0456, <6> 1160.0456, <7> 1160.0456;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
