set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.3716, <2> 29.741, <3> 18.236, <4> 19.1511, <5> 25.7159, <6> 24.2969, <7> 28.4296, <8> 32.5459, <9> 28.5243, <10> 28.5906, <11> 26.3754, <12> 14.8801, <13> 26.9229, <14> 25.4006, <15> 27.6754, <16> 30.6873, <17> 28.0891, <18> 29.4611, <19> 22.3247, <20> 27.897;
param workload[JOB] := <1> 500.4885, <2> 884.5271, <3> 332.5517, <4> 366.7646, <5> 661.3075, <6> 590.3393, <7> 808.2422, <8> 1059.2356, <9> 813.6357, <10> 817.4224, <11> 695.6617, <12> 221.4174, <13> 724.8425, <14> 645.1905, <15> 765.9278, <16> 941.7104, <17> 788.9975, <18> 867.9564, <19> 498.3922, <20> 778.2426;
param capacity[MACHINE] := <1> 13762.8536, <2> 13762.8536, <3> 13762.8536, <4> 13762.8536, <5> 13762.8536, <6> 13762.8536, <7> 13762.8536;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
