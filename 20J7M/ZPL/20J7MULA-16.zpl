set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 15.855, <2> 5.5124, <3> 6.4081, <4> 0.3607, <5> 21.5191, <6> 19.8784, <7> 18.1359, <8> 22.5238, <9> 23.9698, <10> 24.8363, <11> 45.3974, <12> 40.6991, <13> 1.0072, <14> 41.2486, <15> 18.9553, <16> 12.549, <17> 5.3036, <18> 32.806, <19> 48.4602, <20> 4.3607;
param workload[JOB] := <1> 251.381, <2> 30.3866, <3> 41.0637, <4> 0.1301, <5> 463.0717, <6> 395.1508, <7> 328.9109, <8> 507.3216, <9> 574.5513, <10> 616.8418, <11> 2060.9239, <12> 1656.4167, <13> 1.0145, <14> 1701.447, <15> 359.3034, <16> 157.4774, <17> 28.1282, <18> 1076.2336, <19> 2348.391, <20> 19.0157;
param capacity[MACHINE] := <1> 1802.4516, <2> 1802.4516, <3> 1802.4516, <4> 1802.4516, <5> 1802.4516, <6> 1802.4516, <7> 1802.4516;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
