set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 18.0475, <2> 18.0133, <3> 30.1225, <4> 30.2545, <5> 34.8318, <6> 24.944, <7> 28.4329, <8> 32.8997, <9> 28.3741, <10> 28.3697, <11> 26.4319, <12> 17.383, <13> 22.9872, <14> 30.4136, <15> 31.5536, <16> 33.6544, <17> 21.3811, <18> 20.2227, <19> 33.7654, <20> 21.5721;
param workload[JOB] := <1> 18.0475, <2> 18.0133, <3> 30.1225, <4> 30.2545, <5> 34.8318, <6> 24.944, <7> 28.4329, <8> 32.8997, <9> 28.3741, <10> 28.3697, <11> 26.4319, <12> 17.383, <13> 22.9872, <14> 30.4136, <15> 31.5536, <16> 33.6544, <17> 21.3811, <18> 20.2227, <19> 33.7654, <20> 21.5721;
param capacity[MACHINE] := <1> 57.1773, <2> 57.1773, <3> 57.1773, <4> 57.1773, <5> 57.1773, <6> 57.1773, <7> 57.1773;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
