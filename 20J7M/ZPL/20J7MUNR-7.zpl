set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 32.7087, <2> 33.4685, <3> 12.1598, <4> 35.3378, <5> 45.1219, <6> 10.7058, <7> 39.6231, <8> 34.4236, <9> 22.006, <10> 36.0291, <11> 23.9152, <12> 42.3756, <13> 35.3931, <14> 31.7444, <15> 15.5136, <16> 32.0917, <17> 39.3156, <18> 27.0129, <19> 14.4194, <20> 46.1766;
param workload[JOB] := <1> 5.0332, <2> 9.24, <3> 48.983, <4> 6.5655, <5> 39.6745, <6> 43.9394, <7> 12.5124, <8> 48.2514, <9> 22.8316, <10> 34.7364, <11> 47.4943, <12> 12.3486, <13> 14.0518, <14> 20.7132, <15> 47.3012, <16> 17.4022, <17> 30.4934, <18> 35.5097, <19> 42.8612, <20> 49.4973;
param capacity[MACHINE] := <1> 589.4403, <2> 589.4403, <3> 589.4403, <4> 589.4403, <5> 589.4403, <6> 589.4403, <7> 589.4403;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
