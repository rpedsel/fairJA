set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 40.7623, <2> 38.4582, <3> 44.6771, <4> 46.0915, <5> 2.3815, <6> 20.4287, <7> 28.0447, <8> 41.6004, <9> 23.7037, <10> 10.0896, <11> 38.5913, <12> 22.2283, <13> 10.0419, <14> 32.9532, <15> 42.6964, <16> 30.0739, <17> 8.7131, <18> 39.7802, <19> 1.0695, <20> 20.5755;
param workload[JOB] := <1> 40.7623, <2> 38.4582, <3> 44.6771, <4> 46.0915, <5> 2.3815, <6> 20.4287, <7> 28.0447, <8> 41.6004, <9> 23.7037, <10> 10.0896, <11> 38.5913, <12> 22.2283, <13> 10.0419, <14> 32.9532, <15> 42.6964, <16> 30.0739, <17> 8.7131, <18> 39.7802, <19> 1.0695, <20> 20.5755;
param capacity[MACHINE] := <1> 58.1744, <2> 58.1744, <3> 58.1744, <4> 58.1744, <5> 58.1744, <6> 58.1744, <7> 58.1744;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
