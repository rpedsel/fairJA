set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.2329, <2> 13.3492, <3> 0.3446, <4> 9.7243, <5> 37.0563, <6> 6.4964, <7> 37.3245, <8> 18.1146, <9> 33.8794, <10> 45.7031, <11> 2.3037, <12> 3.7479, <13> 13.2024, <14> 49.7891, <15> 3.5624, <16> 16.0307, <17> 1.6617, <18> 37.9293, <19> 40.7672, <20> 27.2638;
param workload[JOB] := <1> 587.2334, <2> 178.2011, <3> 0.1187, <4> 94.562, <5> 1373.1694, <6> 42.2032, <7> 1393.1183, <8> 328.1387, <9> 1147.8137, <10> 2088.7733, <11> 5.307, <12> 14.0468, <13> 174.3034, <14> 2478.9545, <15> 12.6907, <16> 256.9833, <17> 2.7612, <18> 1438.6318, <19> 1661.9646, <20> 743.3148;
param capacity[MACHINE] := <1> 14022.2899, <2> 14022.2899, <3> 14022.2899, <4> 14022.2899, <5> 14022.2899, <6> 14022.2899, <7> 14022.2899;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
