set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 35.3284, <2> 22.2748, <3> 30.5187, <4> 12.9729, <5> 33.9661, <6> 25.7313, <7> 31.4819, <8> 29.8664, <9> 18.0311, <10> 23.4631, <11> 27.563, <12> 24.8906, <13> 28.3101, <14> 18.3774, <15> 18.2985, <16> 26.5672, <17> 19.8579, <18> 23.3798, <19> 21.3518, <20> 17.1802;
param workload[JOB] := <1> 39.0705, <2> 41.7572, <3> 0.6309, <4> 19.4464, <5> 29.8047, <6> 49.9095, <7> 21.9144, <8> 38.3222, <9> 32.5819, <10> 19.966, <11> 4.8639, <12> 18.6503, <13> 42.0028, <14> 26.9343, <15> 38.0004, <16> 42.7475, <17> 42.2599, <18> 29.2858, <19> 33.356, <20> 5.9796;
param capacity[MACHINE] := <1> 61.8733, <2> 61.8733, <3> 61.8733, <4> 61.8733, <5> 61.8733, <6> 61.8733, <7> 61.8733;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
