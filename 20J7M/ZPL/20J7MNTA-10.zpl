set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.3208, <2> 26.5689, <3> 27.85, <4> 28.9247, <5> 28.777, <6> 22.4871, <7> 20.2689, <8> 28.6701, <9> 29.7054, <10> 21.3854, <11> 28.2832, <12> 24.0347, <13> 18.0955, <14> 15.4221, <15> 25.1273, <16> 30.7533, <17> 26.6872, <18> 30.2954, <19> 24.3091, <20> 34.0751;
param workload[JOB] := <1> 692.7845, <2> 705.9064, <3> 775.6225, <4> 836.6383, <5> 828.1157, <6> 505.6697, <7> 410.8283, <8> 821.9746, <9> 882.4108, <10> 457.3353, <11> 799.9394, <12> 577.6668, <13> 327.4471, <14> 237.8412, <15> 631.3812, <16> 945.7655, <17> 712.2066, <18> 917.8113, <19> 590.9323, <20> 1161.1124;
param capacity[MACHINE] := <1> 1480.649, <2> 1480.649, <3> 1480.649, <4> 1480.649, <5> 1480.649, <6> 1480.649, <7> 1480.649;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
