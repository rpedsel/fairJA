set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.966, <2> 22.4483, <3> 40.9254, <4> 45.9257, <5> 31.371, <6> 44.6535, <7> 41.1394, <8> 17.6023, <9> 42.8707, <10> 9.6978, <11> 13.3146, <12> 37.5139, <13> 17.6894, <14> 44.6068, <15> 16.1611, <16> 36.6134, <17> 7.0893, <18> 42.2223, <19> 8.949, <20> 39.0729;
param workload[JOB] := <1> 287.8452, <2> 503.9262, <3> 1674.8884, <4> 2109.1699, <5> 984.1396, <6> 1993.9351, <7> 1692.4502, <8> 309.841, <9> 1837.8969, <10> 94.0473, <11> 177.2786, <12> 1407.2927, <13> 312.9149, <14> 1989.7666, <15> 261.1812, <16> 1340.5411, <17> 50.2582, <18> 1782.7226, <19> 80.0846, <20> 1526.6915;
param capacity[MACHINE] := <1> 2187.522, <2> 2187.522, <3> 2187.522, <4> 2187.522, <5> 2187.522, <6> 2187.522, <7> 2187.522;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
