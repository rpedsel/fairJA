set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.565, <2> 19.3222, <3> 10.6494, <4> 44.4005, <5> 46.951, <6> 19.4924, <7> 6.0522, <8> 23.1234, <9> 39.2717, <10> 3.0841, <11> 5.6981, <12> 34.9461, <13> 10.5862, <14> 5.3498, <15> 19.2435, <16> 19.6534, <17> 45.054, <18> 34.1384, <19> 37.5937, <20> 44.1822;
param workload[JOB] := <1> 422.9192, <2> 373.3474, <3> 113.4097, <4> 1971.4044, <5> 2204.3964, <6> 379.9537, <7> 36.6291, <8> 534.6916, <9> 1542.2664, <10> 9.5117, <11> 32.4683, <12> 1221.2299, <13> 112.0676, <14> 28.6204, <15> 370.3123, <16> 386.2561, <17> 2029.8629, <18> 1165.4304, <19> 1413.2863, <20> 1952.0668;
param capacity[MACHINE] := <1> 1746.4426, <2> 1746.4426, <3> 1746.4426, <4> 1746.4426, <5> 1746.4426, <6> 1746.4426, <7> 1746.4426;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
