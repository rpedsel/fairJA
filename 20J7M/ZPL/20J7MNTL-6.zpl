set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.2597, <2> 39.5271, <3> 27.3051, <4> 20.6047, <5> 17.8456, <6> 22.2511, <7> 31.5401, <8> 32.413, <9> 26.2781, <10> 30.8104, <11> 21.729, <12> 21.6086, <13> 20.5459, <14> 31.1793, <15> 19.1578, <16> 23.8215, <17> 26.9484, <18> 26.2547, <19> 27.0636, <20> 21.3463;
param workload[JOB] := <1> 22.2597, <2> 39.5271, <3> 27.3051, <4> 20.6047, <5> 17.8456, <6> 22.2511, <7> 31.5401, <8> 32.413, <9> 26.2781, <10> 30.8104, <11> 21.729, <12> 21.6086, <13> 20.5459, <14> 31.1793, <15> 19.1578, <16> 23.8215, <17> 26.9484, <18> 26.2547, <19> 27.0636, <20> 21.3463;
param capacity[MACHINE] := <1> 54.6953, <2> 54.6953, <3> 54.6953, <4> 54.6953, <5> 54.6953, <6> 54.6953, <7> 54.6953;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
