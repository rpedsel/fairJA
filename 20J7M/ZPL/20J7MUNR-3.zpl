set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 42.4041, <2> 16.0501, <3> 46.6814, <4> 48.2452, <5> 30.9265, <6> 26.7999, <7> 37.5788, <8> 20.3965, <9> 1.0023, <10> 7.4437, <11> 18.6288, <12> 46.415, <13> 38.5307, <14> 29.7555, <15> 8.4799, <16> 35.6775, <17> 16.563, <18> 1.4909, <19> 43.0497, <20> 9.4141;
param workload[JOB] := <1> 39.8889, <2> 7.1767, <3> 42.3415, <4> 28.7882, <5> 41.2377, <6> 42.2122, <7> 4.3222, <8> 47.1815, <9> 12.2746, <10> 27.7537, <11> 12.3997, <12> 0.6688, <13> 23.9348, <14> 30.1634, <15> 39.4979, <16> 32.3441, <17> 12.6162, <18> 21.7997, <19> 45.4705, <20> 47.7083;
param capacity[MACHINE] := <1> 559.7806, <2> 559.7806, <3> 559.7806, <4> 559.7806, <5> 559.7806, <6> 559.7806, <7> 559.7806;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
