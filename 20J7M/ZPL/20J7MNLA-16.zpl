set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.2102, <2> 25.021, <3> 16.679, <4> 24.946, <5> 28.1107, <6> 30.3653, <7> 29.6664, <8> 28.9926, <9> 26.785, <10> 19.9597, <11> 35.8664, <12> 19.8487, <13> 18.1629, <14> 23.6347, <15> 28.2699, <16> 25.1288, <17> 23.4659, <18> 29.7593, <19> 20.5271, <20> 29.3984;
param workload[JOB] := <1> 449.8726, <2> 626.0504, <3> 278.189, <4> 622.3029, <5> 790.2115, <6> 922.0514, <7> 880.0953, <8> 840.5709, <9> 717.4362, <10> 398.3896, <11> 1286.3986, <12> 393.9709, <13> 329.8909, <14> 558.599, <15> 799.1872, <16> 631.4566, <17> 550.6485, <18> 885.6159, <19> 421.3618, <20> 864.2659;
param capacity[MACHINE] := <1> 1892.3664, <2> 1892.3664, <3> 1892.3664, <4> 1892.3664, <5> 1892.3664, <6> 1892.3664, <7> 1892.3664;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
