set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.3064, <2> 20.1918, <3> 21.7575, <4> 28.247, <5> 15.3419, <6> 29.0545, <7> 19.4576, <8> 18.7124, <9> 25.8365, <10> 20.1165, <11> 18.3043, <12> 18.8288, <13> 17.4394, <14> 24.2479, <15> 27.8739, <16> 25.1948, <17> 18.124, <18> 22.6399, <19> 18.6012, <20> 28.3806;
param workload[JOB] := <1> 497.5755, <2> 407.7088, <3> 473.3888, <4> 797.893, <5> 235.3739, <6> 844.164, <7> 378.5982, <8> 350.1539, <9> 667.5247, <10> 404.6736, <11> 335.0474, <12> 354.5237, <13> 304.1327, <14> 587.9607, <15> 776.9543, <16> 634.7779, <17> 328.4794, <18> 512.5651, <19> 346.0046, <20> 805.4585;
param capacity[MACHINE] := <1> 10042.9587, <2> 10042.9587, <3> 10042.9587, <4> 10042.9587, <5> 10042.9587, <6> 10042.9587, <7> 10042.9587;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
