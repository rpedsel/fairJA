set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 9.3118, <2> 27.5406, <3> 37.7658, <4> 35.6236, <5> 40.0922, <6> 19.0578, <7> 4.4579, <8> 7.5834, <9> 25.6091, <10> 15.7843, <11> 29.1592, <12> 28.1298, <13> 35.1213, <14> 30.6902, <15> 17.1658, <16> 35.2144, <17> 11.4433, <18> 5.6396, <19> 21.6116, <20> 4.1655;
param workload[JOB] := <1> 45.4768, <2> 18.5255, <3> 2.2939, <4> 24.1783, <5> 39.0721, <6> 45.408, <7> 22.0983, <8> 7.2253, <9> 37.2779, <10> 40.2912, <11> 32.2604, <12> 16.1682, <13> 27.7437, <14> 20.2603, <15> 26.2434, <16> 34.5149, <17> 20.5449, <18> 6.0741, <19> 14.6776, <20> 14.5752;
param capacity[MACHINE] := <1> 70.7014, <2> 70.7014, <3> 70.7014, <4> 70.7014, <5> 70.7014, <6> 70.7014, <7> 70.7014;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
