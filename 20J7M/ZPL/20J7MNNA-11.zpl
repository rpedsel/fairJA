set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 18.0619, <2> 19.4535, <3> 31.3614, <4> 9.5707, <5> 20.7946, <6> 28.1075, <7> 23.1273, <8> 34.7949, <9> 22.4709, <10> 35.4291, <11> 26.9448, <12> 22.9807, <13> 29.5645, <14> 28.4731, <15> 26.7802, <16> 28.3731, <17> 23.9569, <18> 19.3864, <19> 24.7908, <20> 26.4283;
param workload[JOB] := <1> 326.2322, <2> 378.4387, <3> 983.5374, <4> 91.5983, <5> 432.4154, <6> 790.0316, <7> 534.872, <8> 1210.6851, <9> 504.9413, <10> 1255.2211, <11> 726.0222, <12> 528.1126, <13> 874.0597, <14> 810.7174, <15> 717.1791, <16> 805.0328, <17> 573.9331, <18> 375.8325, <19> 614.5838, <20> 698.455;
param capacity[MACHINE] := <1> 13231.9013, <2> 13231.9013, <3> 13231.9013, <4> 13231.9013, <5> 13231.9013, <6> 13231.9013, <7> 13231.9013;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
