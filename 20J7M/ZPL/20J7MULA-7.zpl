set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.8785, <2> 33.2819, <3> 19.5519, <4> 17.4534, <5> 23.4729, <6> 43.2705, <7> 33.0886, <8> 16.2598, <9> 26.3492, <10> 33.2343, <11> 5.5105, <12> 3.6866, <13> 44.3929, <14> 44.084, <15> 31.1472, <16> 7.3685, <17> 37.0023, <18> 11.381, <19> 44.5004, <20> 0.657;
param workload[JOB] := <1> 284.8838, <2> 1107.6849, <3> 382.2768, <4> 304.6212, <5> 550.977, <6> 1872.3362, <7> 1094.8554, <8> 264.3811, <9> 694.2803, <10> 1104.5187, <11> 30.3656, <12> 13.591, <13> 1970.7296, <14> 1943.3991, <15> 970.1481, <16> 54.2948, <17> 1369.1702, <18> 129.5272, <19> 1980.2856, <20> 0.4316;
param capacity[MACHINE] := <1> 2303.2512, <2> 2303.2512, <3> 2303.2512, <4> 2303.2512, <5> 2303.2512, <6> 2303.2512, <7> 2303.2512;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
