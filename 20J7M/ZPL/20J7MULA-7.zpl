set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.7091, <2> 12.7387, <3> 46.6265, <4> 17.0359, <5> 21.5712, <6> 20.0002, <7> 32.0616, <8> 45.5116, <9> 47.0621, <10> 11.6246, <11> 43.2127, <12> 0.7604, <13> 36.8186, <14> 18.3384, <15> 10.9435, <16> 7.2593, <17> 3.1562, <18> 41.4628, <19> 42.9619, <20> 39.635;
param workload[JOB] := <1> 515.7032, <2> 162.2745, <3> 2174.0305, <4> 290.2219, <5> 465.3167, <6> 400.008, <7> 1027.9462, <8> 2071.3057, <9> 2214.8413, <10> 135.1313, <11> 1867.3374, <12> 0.5782, <13> 1355.6093, <14> 336.2969, <15> 119.7602, <16> 52.6974, <17> 9.9616, <18> 1719.1638, <19> 1845.7249, <20> 1570.9332;
param capacity[MACHINE] := <1> 2619.2632, <2> 2619.2632, <3> 2619.2632, <4> 2619.2632, <5> 2619.2632, <6> 2619.2632, <7> 2619.2632;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
