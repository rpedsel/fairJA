set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.1682, <2> 27.9315, <3> 30.8925, <4> 28.7198, <5> 24.9621, <6> 17.9295, <7> 21.3667, <8> 20.555, <9> 21.6763, <10> 22.8629, <11> 28.3952, <12> 26.1872, <13> 12.6389, <14> 29.7693, <15> 26.8739, <16> 25.7124, <17> 23.6234, <18> 19.1651, <19> 29.9611, <20> 29.0641;
param workload[JOB] := <1> 27.1682, <2> 27.9315, <3> 30.8925, <4> 28.7198, <5> 24.9621, <6> 17.9295, <7> 21.3667, <8> 20.555, <9> 21.6763, <10> 22.8629, <11> 28.3952, <12> 26.1872, <13> 12.6389, <14> 29.7693, <15> 26.8739, <16> 25.7124, <17> 23.6234, <18> 19.1651, <19> 29.9611, <20> 29.0641;
param capacity[MACHINE] := <1> 70.7793, <2> 70.7793, <3> 70.7793, <4> 70.7793, <5> 70.7793, <6> 70.7793, <7> 70.7793;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
