set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.6613, <2> 25.8287, <3> 27.7582, <4> 29.3944, <5> 19.6862, <6> 17.0627, <7> 26.0206, <8> 12.1175, <9> 23.6145, <10> 28.1185, <11> 27.8492, <12> 23.4436, <13> 34.8739, <14> 19.0229, <15> 30.9851, <16> 14.8346, <17> 26.3492, <18> 23.8998, <19> 18.7527, <20> 20.4281;
param workload[JOB] := <1> 20.6613, <2> 25.8287, <3> 27.7582, <4> 29.3944, <5> 19.6862, <6> 17.0627, <7> 26.0206, <8> 12.1175, <9> 23.6145, <10> 28.1185, <11> 27.8492, <12> 23.4436, <13> 34.8739, <14> 19.0229, <15> 30.9851, <16> 14.8346, <17> 26.3492, <18> 23.8998, <19> 18.7527, <20> 20.4281;
param capacity[MACHINE] := <1> 67.2431, <2> 67.2431, <3> 67.2431, <4> 67.2431, <5> 67.2431, <6> 67.2431, <7> 67.2431;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
