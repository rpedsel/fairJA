set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 35.0665, <2> 24.9549, <3> 18.8892, <4> 29.204, <5> 28.8397, <6> 22.3499, <7> 19.7113, <8> 24.6508, <9> 27.1535, <10> 18.4108, <11> 17.9848, <12> 20.7122, <13> 32.2961, <14> 32.9489, <15> 25.26, <16> 22.1183, <17> 20.1625, <18> 21.6693, <19> 28.1651, <20> 15.582;
param workload[JOB] := <1> 35.0665, <2> 24.9549, <3> 18.8892, <4> 29.204, <5> 28.8397, <6> 22.3499, <7> 19.7113, <8> 24.6508, <9> 27.1535, <10> 18.4108, <11> 17.9848, <12> 20.7122, <13> 32.2961, <14> 32.9489, <15> 25.26, <16> 22.1183, <17> 20.1625, <18> 21.6693, <19> 28.1651, <20> 15.582;
param capacity[MACHINE] := <1> 486.1298, <2> 486.1298, <3> 486.1298, <4> 486.1298, <5> 486.1298, <6> 486.1298, <7> 486.1298;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
