set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 5.3598, <2> 47.5791, <3> 34.9932, <4> 27.7997, <5> 47.7587, <6> 24.4441, <7> 39.8703, <8> 46.4321, <9> 43.2419, <10> 4.8513, <11> 34.5164, <12> 18.197, <13> 45.7561, <14> 23.2559, <15> 11.5181, <16> 38.4357, <17> 12.9926, <18> 16.584, <19> 18.6332, <20> 40.7471;
param workload[JOB] := <1> 5.3598, <2> 47.5791, <3> 34.9932, <4> 27.7997, <5> 47.7587, <6> 24.4441, <7> 39.8703, <8> 46.4321, <9> 43.2419, <10> 4.8513, <11> 34.5164, <12> 18.197, <13> 45.7561, <14> 23.2559, <15> 11.5181, <16> 38.4357, <17> 12.9926, <18> 16.584, <19> 18.6332, <20> 40.7471;
param capacity[MACHINE] := <1> 62.4607, <2> 62.4607, <3> 62.4607, <4> 62.4607, <5> 62.4607, <6> 62.4607, <7> 62.4607;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
