set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 36.6434, <2> 17.0664, <3> 25.9628, <4> 23.2924, <5> 23.1722, <6> 20.6986, <7> 25.2898, <8> 22.4518, <9> 25.2835, <10> 33.777, <11> 25.6528, <12> 30.4909, <13> 30.4622, <14> 28.7725, <15> 19.7874, <16> 18.0406, <17> 11.2498, <18> 16.9306, <19> 26.7804, <20> 20.023;
param workload[JOB] := <1> 1342.7388, <2> 291.262, <3> 674.067, <4> 542.5359, <5> 536.9509, <6> 428.432, <7> 639.574, <8> 504.0833, <9> 639.2554, <10> 1140.8857, <11> 658.0661, <12> 929.695, <13> 927.9456, <14> 827.8568, <15> 391.5412, <16> 325.4632, <17> 126.558, <18> 286.6452, <19> 717.1898, <20> 400.9205;
param capacity[MACHINE] := <1> 1465.7398, <2> 1465.7398, <3> 1465.7398, <4> 1465.7398, <5> 1465.7398, <6> 1465.7398, <7> 1465.7398;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
