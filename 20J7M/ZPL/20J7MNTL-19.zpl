set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.122, <2> 21.6941, <3> 23.4632, <4> 25.3118, <5> 28.6462, <6> 20.0561, <7> 29.4759, <8> 23.8357, <9> 17.9703, <10> 24.8963, <11> 17.1303, <12> 10.6562, <13> 19.9405, <14> 17.215, <15> 28.9107, <16> 24.0425, <17> 31.519, <18> 29.8183, <19> 28.1027, <20> 32.2051;
param workload[JOB] := <1> 25.122, <2> 21.6941, <3> 23.4632, <4> 25.3118, <5> 28.6462, <6> 20.0561, <7> 29.4759, <8> 23.8357, <9> 17.9703, <10> 24.8963, <11> 17.1303, <12> 10.6562, <13> 19.9405, <14> 17.215, <15> 28.9107, <16> 24.0425, <17> 31.519, <18> 29.8183, <19> 28.1027, <20> 32.2051;
param capacity[MACHINE] := <1> 51.4298, <2> 51.4298, <3> 51.4298, <4> 51.4298, <5> 51.4298, <6> 51.4298, <7> 51.4298;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
