set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 14.5622, <2> 33.6905, <3> 22.2909, <4> 29.4137, <5> 30.023, <6> 31.9538, <7> 19.7385, <8> 27.3229, <9> 14.6141, <10> 19.8283, <11> 25.8657, <12> 16.9447, <13> 25.83, <14> 29.7284, <15> 23.0505, <16> 26.685, <17> 23.4287, <18> 21.8598, <19> 22.6816, <20> 36.2427;
param workload[JOB] := <1> 14.5622, <2> 33.6905, <3> 22.2909, <4> 29.4137, <5> 30.023, <6> 31.9538, <7> 19.7385, <8> 27.3229, <9> 14.6141, <10> 19.8283, <11> 25.8657, <12> 16.9447, <13> 25.83, <14> 29.7284, <15> 23.0505, <16> 26.685, <17> 23.4287, <18> 21.8598, <19> 22.6816, <20> 36.2427;
param capacity[MACHINE] := <1> 53.1166, <2> 53.1166, <3> 53.1166, <4> 53.1166, <5> 53.1166, <6> 53.1166, <7> 53.1166;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
