set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.4685, <2> 27.2334, <3> 22.3646, <4> 26.9992, <5> 19.6445, <6> 14.1019, <7> 20.3886, <8> 20.5306, <9> 22.0485, <10> 18.8659, <11> 20.1945, <12> 26.9428, <13> 19.7725, <14> 22.6927, <15> 32.8055, <16> 24.3726, <17> 19.4891, <18> 30.4729, <19> 31.2454, <20> 28.4571;
param workload[JOB] := <1> 42.8901, <2> 29.474, <3> 43.4575, <4> 40.6557, <5> 42.8173, <6> 1.5769, <7> 25.4336, <8> 30.0121, <9> 48.5795, <10> 38.7657, <11> 31.339, <12> 9.4652, <13> 28.7076, <14> 33.599, <15> 40.3989, <16> 8.6656, <17> 18.5264, <18> 35.1268, <19> 32.6514, <20> 15.4369;
param capacity[MACHINE] := <1> 85.3685, <2> 85.3685, <3> 85.3685, <4> 85.3685, <5> 85.3685, <6> 85.3685, <7> 85.3685;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
