set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 12.2921, <2> 9.2481, <3> 8.279, <4> 29.8799, <5> 8.3643, <6> 33.3449, <7> 38.2372, <8> 10.6796, <9> 11.7595, <10> 10.384, <11> 18.3396, <12> 27.5612, <13> 29.9132, <14> 13.5844, <15> 22.3958, <16> 1.7728, <17> 6.9215, <18> 4.5125, <19> 13.5876, <20> 15.8673;
param workload[JOB] := <1> 151.0957, <2> 85.5274, <3> 68.5418, <4> 892.8084, <5> 69.9615, <6> 1111.8824, <7> 1462.0835, <8> 114.0539, <9> 138.2858, <10> 107.8275, <11> 336.3409, <12> 759.6197, <13> 894.7995, <14> 184.5359, <15> 501.5719, <16> 3.1428, <17> 47.9072, <18> 20.3627, <19> 184.6229, <20> 251.7712;
param capacity[MACHINE] := <1> 791.4367, <2> 791.4367, <3> 791.4367, <4> 791.4367, <5> 791.4367, <6> 791.4367, <7> 791.4367;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
