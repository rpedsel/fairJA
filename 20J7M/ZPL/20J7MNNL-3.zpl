set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.0966, <2> 26.3303, <3> 35.0692, <4> 19.8297, <5> 19.0754, <6> 34.1816, <7> 20.5792, <8> 21.5196, <9> 31.4836, <10> 27.1221, <11> 31.9591, <12> 19.2593, <13> 23.4793, <14> 26.0776, <15> 21.0481, <16> 30.0548, <17> 25.1892, <18> 17.9497, <19> 12.6019, <20> 20.4035;
param workload[JOB] := <1> 21.0966, <2> 26.3303, <3> 35.0692, <4> 19.8297, <5> 19.0754, <6> 34.1816, <7> 20.5792, <8> 21.5196, <9> 31.4836, <10> 27.1221, <11> 31.9591, <12> 19.2593, <13> 23.4793, <14> 26.0776, <15> 21.0481, <16> 30.0548, <17> 25.1892, <18> 17.9497, <19> 12.6019, <20> 20.4035;
param capacity[MACHINE] := <1> 484.3098, <2> 484.3098, <3> 484.3098, <4> 484.3098, <5> 484.3098, <6> 484.3098, <7> 484.3098;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
