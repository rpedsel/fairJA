set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.5332, <2> 19.5957, <3> 27.8252, <4> 27.2492, <5> 20.1908, <6> 32.8701, <7> 18.4966, <8> 29.1772, <9> 22.7064, <10> 12.0871, <11> 19.8847, <12> 27.2603, <13> 27.3323, <14> 24.4717, <15> 19.1036, <16> 29.231, <17> 20.8435, <18> 24.1479, <19> 25.1009, <20> 22.3684;
param workload[JOB] := <1> 463.6787, <2> 383.9915, <3> 774.2418, <4> 742.5189, <5> 407.6684, <6> 1080.4435, <7> 342.1242, <8> 851.309, <9> 515.5806, <10> 146.098, <11> 395.4013, <12> 743.124, <13> 747.0546, <14> 598.8641, <15> 364.9475, <16> 854.4514, <17> 434.4515, <18> 583.1211, <19> 630.0552, <20> 500.3453;
param capacity[MACHINE] := <1> 1651.3529, <2> 1651.3529, <3> 1651.3529, <4> 1651.3529, <5> 1651.3529, <6> 1651.3529, <7> 1651.3529;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
