set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 18.5495, <2> 31.0561, <3> 26.0951, <4> 29.7011, <5> 33.9985, <6> 21.9954, <7> 34.2181, <8> 29.5337, <9> 23.9975, <10> 22.5292, <11> 11.9925, <12> 25.7974, <13> 31.5411, <14> 20.3312, <15> 13.9855, <16> 17.6311, <17> 15.0382, <18> 21.6904, <19> 25.0775, <20> 32.5115;
param workload[JOB] := <1> 344.084, <2> 964.4813, <3> 680.9542, <4> 882.1553, <5> 1155.898, <6> 483.7976, <7> 1170.8784, <8> 872.2394, <9> 575.88, <10> 507.5649, <11> 143.8201, <12> 665.5058, <13> 994.841, <14> 413.3577, <15> 195.5942, <16> 310.8557, <17> 226.1475, <18> 470.4735, <19> 628.881, <20> 1056.9976;
param capacity[MACHINE] := <1> 1820.6296, <2> 1820.6296, <3> 1820.6296, <4> 1820.6296, <5> 1820.6296, <6> 1820.6296, <7> 1820.6296;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
