set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.0922, <2> 22.4731, <3> 25.8252, <4> 22.5436, <5> 19.3122, <6> 23.4057, <7> 26.5846, <8> 25.5484, <9> 20.617, <10> 15.8305, <11> 21.5149, <12> 17.9068, <13> 21.5989, <14> 27.9126, <15> 22.5079, <16> 11.9363, <17> 21.075, <18> 30.9834, <19> 32.5702, <20> 24.8508;
param workload[JOB] := <1> 11.4818, <2> 45.6848, <3> 15.3707, <4> 38.1812, <5> 35.5992, <6> 31.74, <7> 22.9162, <8> 33.0938, <9> 14.1398, <10> 22.1422, <11> 29.4193, <12> 43.0426, <13> 12.1046, <14> 24.8181, <15> 25.262, <16> 15.2561, <17> 11.9895, <18> 1.7317, <19> 9.857, <20> 3.4781;
param capacity[MACHINE] := <1> 63.9012, <2> 63.9012, <3> 63.9012, <4> 63.9012, <5> 63.9012, <6> 63.9012, <7> 63.9012;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
