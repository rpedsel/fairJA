set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.1086, <2> 28.7675, <3> 22.428, <4> 29.4729, <5> 19.0699, <6> 24.3485, <7> 22.4652, <8> 21.3027, <9> 25.7488, <10> 36.4109, <11> 29.681, <12> 24.7592, <13> 22.4995, <14> 19.3368, <15> 27.803, <16> 31.6815, <17> 33.6096, <18> 28.0793, <19> 20.118, <20> 22.0868;
param workload[JOB] := <1> 26.1086, <2> 28.7675, <3> 22.428, <4> 29.4729, <5> 19.0699, <6> 24.3485, <7> 22.4652, <8> 21.3027, <9> 25.7488, <10> 36.4109, <11> 29.681, <12> 24.7592, <13> 22.4995, <14> 19.3368, <15> 27.803, <16> 31.6815, <17> 33.6096, <18> 28.0793, <19> 20.118, <20> 22.0868;
param capacity[MACHINE] := <1> 55.2619, <2> 55.2619, <3> 55.2619, <4> 55.2619, <5> 55.2619, <6> 55.2619, <7> 55.2619;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
