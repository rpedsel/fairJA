set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 19.7079, <2> 23.8886, <3> 48.6403, <4> 31.6999, <5> 2.5432, <6> 43.8045, <7> 46.6685, <8> 31.9513, <9> 22.361, <10> 35.1917, <11> 14.924, <12> 16.6162, <13> 34.4803, <14> 5.4406, <15> 7.3552, <16> 44.93, <17> 17.1871, <18> 9.8017, <19> 43.68, <20> 20.1477;
param workload[JOB] := <1> 388.4013, <2> 570.6652, <3> 2365.8788, <4> 1004.8837, <5> 6.4679, <6> 1918.8342, <7> 2177.9489, <8> 1020.8856, <9> 500.0143, <10> 1238.4557, <11> 222.7258, <12> 276.0981, <13> 1188.8911, <14> 29.6001, <15> 54.099, <16> 2018.7049, <17> 295.3964, <18> 96.0733, <19> 1907.9424, <20> 405.9298;
param capacity[MACHINE] := <1> 1895.1318, <2> 1895.1318, <3> 1895.1318, <4> 1895.1318, <5> 1895.1318, <6> 1895.1318, <7> 1895.1318;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
