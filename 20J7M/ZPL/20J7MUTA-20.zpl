set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.3985, <2> 42.3756, <3> 5.1142, <4> 1.3202, <5> 33.8174, <6> 23.8351, <7> 16.4142, <8> 38.2228, <9> 18.3903, <10> 5.6402, <11> 7.8261, <12> 37.5858, <13> 27.6197, <14> 24.1843, <15> 47.2256, <16> 25.3471, <17> 35.8861, <18> 14.563, <19> 4.9695, <20> 38.8845;
param workload[JOB] := <1> 696.8808, <2> 1795.6915, <3> 26.155, <4> 1.7429, <5> 1143.6165, <6> 568.112, <7> 269.426, <8> 1460.9824, <9> 338.2031, <10> 31.8119, <11> 61.2478, <12> 1412.6924, <13> 762.8478, <14> 584.8804, <15> 2230.2573, <16> 642.4755, <17> 1287.8122, <18> 212.081, <19> 24.6959, <20> 1512.0043;
param capacity[MACHINE] := <1> 2592.1533, <2> 2592.1533, <3> 2592.1533, <4> 2592.1533, <5> 2592.1533, <6> 2592.1533, <7> 2592.1533;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
