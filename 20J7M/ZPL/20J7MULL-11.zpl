set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 13.1089, <2> 45.6441, <3> 35.6539, <4> 48.9134, <5> 2.2036, <6> 33.5223, <7> 22.9049, <8> 26.3287, <9> 6.5772, <10> 15.1533, <11> 32.5688, <12> 34.712, <13> 19.787, <14> 47.6625, <15> 29.3453, <16> 17.6735, <17> 27.5682, <18> 12.2596, <19> 37.6262, <20> 10.0487;
param workload[JOB] := <1> 13.1089, <2> 45.6441, <3> 35.6539, <4> 48.9134, <5> 2.2036, <6> 33.5223, <7> 22.9049, <8> 26.3287, <9> 6.5772, <10> 15.1533, <11> 32.5688, <12> 34.712, <13> 19.787, <14> 47.6625, <15> 29.3453, <16> 17.6735, <17> 27.5682, <18> 12.2596, <19> 37.6262, <20> 10.0487;
param capacity[MACHINE] := <1> 74.1803, <2> 74.1803, <3> 74.1803, <4> 74.1803, <5> 74.1803, <6> 74.1803, <7> 74.1803;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
