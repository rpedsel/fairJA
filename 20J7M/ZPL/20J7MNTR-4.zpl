set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.1497, <2> 20.3317, <3> 28.0907, <4> 24.5622, <5> 28.8422, <6> 23.0861, <7> 22.9108, <8> 26.645, <9> 25.3596, <10> 24.5529, <11> 23.8214, <12> 17.2639, <13> 25.7326, <14> 22.6639, <15> 25.2524, <16> 28.5058, <17> 26.2983, <18> 23.1184, <19> 25.7261, <20> 27.0869;
param workload[JOB] := <1> 38.4319, <2> 47.9325, <3> 48.7689, <4> 48.5241, <5> 31.6004, <6> 48.4643, <7> 40.0048, <8> 8.711, <9> 18.9951, <10> 40.5354, <11> 5.6091, <12> 22.1957, <13> 19.1363, <14> 8.925, <15> 30.7257, <16> 23.3029, <17> 26.7037, <18> 8.8259, <19> 40.152, <20> 45.227;
param capacity[MACHINE] := <1> 64.5827, <2> 64.5827, <3> 64.5827, <4> 64.5827, <5> 64.5827, <6> 64.5827, <7> 64.5827;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
