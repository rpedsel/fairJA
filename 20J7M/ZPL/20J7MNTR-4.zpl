set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.2419, <2> 25.1199, <3> 27.9141, <4> 34.1631, <5> 31.4092, <6> 22.6096, <7> 22.8962, <8> 26.516, <9> 23.0252, <10> 24.3418, <11> 17.8718, <12> 31.2209, <13> 24.9445, <14> 23.3786, <15> 32.9345, <16> 26.7145, <17> 26.9682, <18> 26.601, <19> 28.2691, <20> 22.1161;
param workload[JOB] := <1> 21.9099, <2> 29.7182, <3> 4.8785, <4> 34.4552, <5> 25.6961, <6> 49.438, <7> 13.2758, <8> 46.4687, <9> 0.8873, <10> 3.2582, <11> 12.6474, <12> 31.4794, <13> 13.9002, <14> 48.1922, <15> 10.9488, <16> 0.2484, <17> 0.1672, <18> 16.6253, <19> 38.3593, <20> 16.6502;
param capacity[MACHINE] := <1> 56.9878, <2> 56.9878, <3> 56.9878, <4> 56.9878, <5> 56.9878, <6> 56.9878, <7> 56.9878;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
