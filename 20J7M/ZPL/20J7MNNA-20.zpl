set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.2394, <2> 29.6296, <3> 22.5829, <4> 34.5274, <5> 26.1048, <6> 23.4455, <7> 27.3442, <8> 27.3878, <9> 17.1344, <10> 24.1314, <11> 22.3248, <12> 26.8066, <13> 14.3205, <14> 24.8647, <15> 25.3712, <16> 13.7468, <17> 15.7991, <18> 21.358, <19> 25.6134, <20> 17.25;
param workload[JOB] := <1> 263.7181, <2> 877.9132, <3> 509.9874, <4> 1192.1414, <5> 681.4606, <6> 549.6915, <7> 747.7053, <8> 750.0916, <9> 293.5877, <10> 582.3245, <11> 498.3967, <12> 718.5938, <13> 205.0767, <14> 618.2533, <15> 643.6978, <16> 188.9745, <17> 249.6116, <18> 456.1642, <19> 656.0463, <20> 297.5625;
param capacity[MACHINE] := <1> 10980.9987, <2> 10980.9987, <3> 10980.9987, <4> 10980.9987, <5> 10980.9987, <6> 10980.9987, <7> 10980.9987;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
