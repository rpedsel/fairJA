set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.2991, <2> 47.1717, <3> 2.4965, <4> 28.8988, <5> 37.3686, <6> 43.1022, <7> 4.0034, <8> 33.0944, <9> 7.2522, <10> 31.5798, <11> 5.137, <12> 5.5316, <13> 30.203, <14> 46.5639, <15> 43.0072, <16> 31.2808, <17> 27.1012, <18> 2.5319, <19> 39.6918, <20> 23.8379;
param workload[JOB] := <1> 453.6517, <2> 2225.1693, <3> 6.2325, <4> 835.1406, <5> 1396.4123, <6> 1857.7996, <7> 16.0272, <8> 1095.2393, <9> 52.5944, <10> 997.2838, <11> 26.3888, <12> 30.5986, <13> 912.2212, <14> 2168.1968, <15> 1849.6193, <16> 978.4884, <17> 734.475, <18> 6.4105, <19> 1575.439, <20> 568.2455;
param capacity[MACHINE] := <1> 17785.6338, <2> 17785.6338, <3> 17785.6338, <4> 17785.6338, <5> 17785.6338, <6> 17785.6338, <7> 17785.6338;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
