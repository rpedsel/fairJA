set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 35.9504, <2> 25.3028, <3> 26.1044, <4> 19.9064, <5> 16.9837, <6> 26.0936, <7> 31.0035, <8> 30.4462, <9> 25.4399, <10> 16.4487, <11> 28.4156, <12> 27.7291, <13> 26.96, <14> 26.6788, <15> 35.8688, <16> 29.0221, <17> 23.5818, <18> 21.5117, <19> 23.7302, <20> 22.6483;
param workload[JOB] := <1> 7.2388, <2> 47.3709, <3> 39.6445, <4> 45.781, <5> 43.4514, <6> 19.0095, <7> 40.0721, <8> 6.7382, <9> 48.1868, <10> 31.3886, <11> 45.5145, <12> 26.7881, <13> 12.515, <14> 16.9383, <15> 14.2789, <16> 11.5294, <17> 39.2047, <18> 47.1201, <19> 42.3542, <20> 37.7105;
param capacity[MACHINE] := <1> 66.7324, <2> 66.7324, <3> 66.7324, <4> 66.7324, <5> 66.7324, <6> 66.7324, <7> 66.7324;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
