set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.5842, <2> 23.8431, <3> 20.4551, <4> 27.5769, <5> 24.6874, <6> 16.9353, <7> 19.9428, <8> 23.2683, <9> 25.7783, <10> 27.7558, <11> 29.2324, <12> 24.8467, <13> 22.8567, <14> 29.1379, <15> 28.4393, <16> 29.8483, <17> 30.1962, <18> 17.0812, <19> 24.8054, <20> 23.109;
param workload[JOB] := <1> 16.5842, <2> 23.8431, <3> 20.4551, <4> 27.5769, <5> 24.6874, <6> 16.9353, <7> 19.9428, <8> 23.2683, <9> 25.7783, <10> 27.7558, <11> 29.2324, <12> 24.8467, <13> 22.8567, <14> 29.1379, <15> 28.4393, <16> 29.8483, <17> 30.1962, <18> 17.0812, <19> 24.8054, <20> 23.109;
param capacity[MACHINE] := <1> 486.3803, <2> 486.3803, <3> 486.3803, <4> 486.3803, <5> 486.3803, <6> 486.3803, <7> 486.3803;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
