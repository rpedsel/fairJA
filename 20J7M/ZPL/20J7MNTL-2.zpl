set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.9088, <2> 15.4324, <3> 27.5775, <4> 29.3076, <5> 28.569, <6> 24.2483, <7> 27.2964, <8> 22.5152, <9> 38.925, <10> 17.3863, <11> 28.5808, <12> 27.4935, <13> 18.6954, <14> 25.9894, <15> 26.5173, <16> 24.2154, <17> 22.8718, <18> 21.1657, <19> 29.4185, <20> 27.1618;
param workload[JOB] := <1> 24.9088, <2> 15.4324, <3> 27.5775, <4> 29.3076, <5> 28.569, <6> 24.2483, <7> 27.2964, <8> 22.5152, <9> 38.925, <10> 17.3863, <11> 28.5808, <12> 27.4935, <13> 18.6954, <14> 25.9894, <15> 26.5173, <16> 24.2154, <17> 22.8718, <18> 21.1657, <19> 29.4185, <20> 27.1618;
param capacity[MACHINE] := <1> 54.4582, <2> 54.4582, <3> 54.4582, <4> 54.4582, <5> 54.4582, <6> 54.4582, <7> 54.4582;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
