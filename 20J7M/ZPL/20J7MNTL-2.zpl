set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.0193, <2> 20.1156, <3> 22.0039, <4> 35.5783, <5> 27.1028, <6> 25.6829, <7> 27.1077, <8> 28.7025, <9> 22.6781, <10> 29.8688, <11> 16.0962, <12> 28.3634, <13> 18.9489, <14> 18.1321, <15> 23.4307, <16> 20.8759, <17> 22.7556, <18> 22.0011, <19> 27.5731, <20> 24.1854;
param workload[JOB] := <1> 29.0193, <2> 20.1156, <3> 22.0039, <4> 35.5783, <5> 27.1028, <6> 25.6829, <7> 27.1077, <8> 28.7025, <9> 22.6781, <10> 29.8688, <11> 16.0962, <12> 28.3634, <13> 18.9489, <14> 18.1321, <15> 23.4307, <16> 20.8759, <17> 22.7556, <18> 22.0011, <19> 27.5731, <20> 24.1854;
param capacity[MACHINE] := <1> 52.5239, <2> 52.5239, <3> 52.5239, <4> 52.5239, <5> 52.5239, <6> 52.5239, <7> 52.5239;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
