set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 4.7748, <2> 10.6039, <3> 42.9977, <4> 30.9186, <5> 30.8535, <6> 31.6143, <7> 25.6028, <8> 46.1064, <9> 36.2559, <10> 48.3104, <11> 28.0285, <12> 43.1226, <13> 31.3689, <14> 18.3502, <15> 0.7494, <16> 31.3935, <17> 21.2867, <18> 18.1571, <19> 18.2397, <20> 32.712;
param workload[JOB] := <1> 4.7748, <2> 10.6039, <3> 42.9977, <4> 30.9186, <5> 30.8535, <6> 31.6143, <7> 25.6028, <8> 46.1064, <9> 36.2559, <10> 48.3104, <11> 28.0285, <12> 43.1226, <13> 31.3689, <14> 18.3502, <15> 0.7494, <16> 31.3935, <17> 21.2867, <18> 18.1571, <19> 18.2397, <20> 32.712;
param capacity[MACHINE] := <1> 551.4469, <2> 551.4469, <3> 551.4469, <4> 551.4469, <5> 551.4469, <6> 551.4469, <7> 551.4469;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
