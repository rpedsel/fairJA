set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.7516, <2> 24.9653, <3> 24.7047, <4> 26.27, <5> 23.2301, <6> 26.0026, <7> 13.2752, <8> 25.278, <9> 29.0586, <10> 23.9076, <11> 21.4169, <12> 25.7222, <13> 26.5923, <14> 22.3484, <15> 27.0645, <16> 21.2403, <17> 29.3215, <18> 16.7549, <19> 16.2977, <20> 21.4822;
param workload[JOB] := <1> 885.1577, <2> 623.2662, <3> 610.3222, <4> 690.1129, <5> 539.6375, <6> 676.1352, <7> 176.2309, <8> 638.9773, <9> 844.4022, <10> 571.5733, <11> 458.6836, <12> 661.6316, <13> 707.1504, <14> 499.451, <15> 732.4872, <16> 451.1503, <17> 859.7504, <18> 280.7267, <19> 265.615, <20> 461.4849;
param capacity[MACHINE] := <1> 11633.9465, <2> 11633.9465, <3> 11633.9465, <4> 11633.9465, <5> 11633.9465, <6> 11633.9465, <7> 11633.9465;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
