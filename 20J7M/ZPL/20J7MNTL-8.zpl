set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 33.5321, <2> 24.8821, <3> 25.9359, <4> 24.2796, <5> 31.9755, <6> 19.1475, <7> 25.3315, <8> 29.2995, <9> 31.0105, <10> 27.4986, <11> 20.6092, <12> 27.4884, <13> 27.7526, <14> 22.9638, <15> 26.6017, <16> 29.8484, <17> 22.4482, <18> 28.4742, <19> 21.5843, <20> 30.2652;
param workload[JOB] := <1> 33.5321, <2> 24.8821, <3> 25.9359, <4> 24.2796, <5> 31.9755, <6> 19.1475, <7> 25.3315, <8> 29.2995, <9> 31.0105, <10> 27.4986, <11> 20.6092, <12> 27.4884, <13> 27.7526, <14> 22.9638, <15> 26.6017, <16> 29.8484, <17> 22.4482, <18> 28.4742, <19> 21.5843, <20> 30.2652;
param capacity[MACHINE] := <1> 56.8852, <2> 56.8852, <3> 56.8852, <4> 56.8852, <5> 56.8852, <6> 56.8852, <7> 56.8852;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
