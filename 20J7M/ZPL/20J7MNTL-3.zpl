set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.2525, <2> 21.0759, <3> 19.3893, <4> 12.4378, <5> 21.8507, <6> 24.3022, <7> 28.6107, <8> 19.7579, <9> 28.8273, <10> 28.0077, <11> 20.3746, <12> 30.9096, <13> 28.9823, <14> 26.9204, <15> 25.7402, <16> 27.9332, <17> 30.0998, <18> 30.2687, <19> 34.5936, <20> 27.1344;
param workload[JOB] := <1> 23.2525, <2> 21.0759, <3> 19.3893, <4> 12.4378, <5> 21.8507, <6> 24.3022, <7> 28.6107, <8> 19.7579, <9> 28.8273, <10> 28.0077, <11> 20.3746, <12> 30.9096, <13> 28.9823, <14> 26.9204, <15> 25.7402, <16> 27.9332, <17> 30.0998, <18> 30.2687, <19> 34.5936, <20> 27.1344;
param capacity[MACHINE] := <1> 54.6931, <2> 54.6931, <3> 54.6931, <4> 54.6931, <5> 54.6931, <6> 54.6931, <7> 54.6931;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
