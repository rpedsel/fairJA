set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 30.8163, <2> 33.4113, <3> 27.8968, <4> 26.6626, <5> 41.7435, <6> 8.0816, <7> 15.3524, <8> 0.0325, <9> 0.2675, <10> 8.7006, <11> 13.4169, <12> 40.027, <13> 3.1129, <14> 47.6452, <15> 18.9173, <16> 7.0935, <17> 20.5717, <18> 6.7835, <19> 15.6838, <20> 26.6687;
param workload[JOB] := <1> 949.6443, <2> 1116.315, <3> 778.2315, <4> 710.8942, <5> 1742.5198, <6> 65.3123, <7> 235.6962, <8> 0.0011, <9> 0.0716, <10> 75.7004, <11> 180.0132, <12> 1602.1607, <13> 9.6901, <14> 2270.0651, <15> 357.8642, <16> 50.3177, <17> 423.1948, <18> 46.0159, <19> 245.9816, <20> 711.2196;
param capacity[MACHINE] := <1> 1652.987, <2> 1652.987, <3> 1652.987, <4> 1652.987, <5> 1652.987, <6> 1652.987, <7> 1652.987;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
