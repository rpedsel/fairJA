set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.7253, <2> 25.5815, <3> 20.4911, <4> 21.323, <5> 21.9352, <6> 19.4341, <7> 23.5242, <8> 17.9146, <9> 21.5587, <10> 18.8465, <11> 16.0061, <12> 26.0409, <13> 25.7918, <14> 25.2689, <15> 28.9577, <16> 22.9834, <17> 23.8636, <18> 23.6634, <19> 29.0239, <20> 25.1536;
param workload[JOB] := <1> 471.9887, <2> 654.4131, <3> 419.8852, <4> 454.6703, <5> 481.153, <6> 377.6842, <7> 553.388, <8> 320.9329, <9> 464.7775, <10> 355.1906, <11> 256.1952, <12> 678.1285, <13> 665.2169, <14> 638.5173, <15> 838.5484, <16> 528.2367, <17> 569.4714, <18> 559.9565, <19> 842.3868, <20> 632.7036;
param capacity[MACHINE] := <1> 1153.2262, <2> 1153.2262, <3> 1153.2262, <4> 1153.2262, <5> 1153.2262, <6> 1153.2262, <7> 1153.2262;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
