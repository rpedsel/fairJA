set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.7759, <2> 21.5175, <3> 21.035, <4> 22.7199, <5> 25.4766, <6> 16.9151, <7> 16.0784, <8> 21.6095, <9> 27.8175, <10> 18.1924, <11> 28.3756, <12> 30.4617, <13> 26.6928, <14> 28.7524, <15> 24.239, <16> 28.8571, <17> 24.0738, <18> 32.2922, <19> 24.2496, <20> 21.0698;
param workload[JOB] := <1> 23.7977, <2> 34.7426, <3> 42.4972, <4> 12.3878, <5> 48.1406, <6> 16.9426, <7> 43.6086, <8> 48.8678, <9> 44.5555, <10> 28.1618, <11> 29.7452, <12> 9.4562, <13> 2.1237, <14> 0.3098, <15> 41.8214, <16> 43.9549, <17> 19.4095, <18> 45.9895, <19> 38.4563, <20> 21.6758;
param capacity[MACHINE] := <1> 63.9262, <2> 63.9262, <3> 63.9262, <4> 63.9262, <5> 63.9262, <6> 63.9262, <7> 63.9262;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
