set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.6755, <2> 25.9343, <3> 19.71, <4> 31.7984, <5> 22.9826, <6> 21.8456, <7> 27.1357, <8> 23.3273, <9> 27.4661, <10> 27.6892, <11> 19.7375, <12> 30.1728, <13> 28.202, <14> 25.1618, <15> 28.2639, <16> 26.8327, <17> 36.1538, <18> 32.8282, <19> 34.7111, <20> 23.684;
param workload[JOB] := <1> 28.6755, <2> 25.9343, <3> 19.71, <4> 31.7984, <5> 22.9826, <6> 21.8456, <7> 27.1357, <8> 23.3273, <9> 27.4661, <10> 27.6892, <11> 19.7375, <12> 30.1728, <13> 28.202, <14> 25.1618, <15> 28.2639, <16> 26.8327, <17> 36.1538, <18> 32.8282, <19> 34.7111, <20> 23.684;
param capacity[MACHINE] := <1> 542.3125, <2> 542.3125, <3> 542.3125, <4> 542.3125, <5> 542.3125, <6> 542.3125, <7> 542.3125;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
