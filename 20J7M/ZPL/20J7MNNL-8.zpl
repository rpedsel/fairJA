set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.6973, <2> 28.4738, <3> 31.0258, <4> 25.3553, <5> 16.9829, <6> 22.097, <7> 25.9542, <8> 20.0617, <9> 33.1176, <10> 22.6327, <11> 27.1352, <12> 31.6072, <13> 11.0828, <14> 21.1904, <15> 25.9998, <16> 20.6989, <17> 20.4456, <18> 22.2464, <19> 25.787, <20> 23.2915;
param workload[JOB] := <1> 20.6973, <2> 28.4738, <3> 31.0258, <4> 25.3553, <5> 16.9829, <6> 22.097, <7> 25.9542, <8> 20.0617, <9> 33.1176, <10> 22.6327, <11> 27.1352, <12> 31.6072, <13> 11.0828, <14> 21.1904, <15> 25.9998, <16> 20.6989, <17> 20.4456, <18> 22.2464, <19> 25.787, <20> 23.2915;
param capacity[MACHINE] := <1> 475.8831, <2> 475.8831, <3> 475.8831, <4> 475.8831, <5> 475.8831, <6> 475.8831, <7> 475.8831;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
