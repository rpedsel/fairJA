set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 20.8105, <2> 30.3641, <3> 28.0708, <4> 33.2965, <5> 25.0863, <6> 23.688, <7> 23.3665, <8> 27.1805, <9> 24.6275, <10> 18.3244, <11> 16.8312, <12> 21.8998, <13> 27.6433, <14> 24.8906, <15> 20.5258, <16> 15.7465, <17> 27.0617, <18> 21.2714, <19> 22.1819, <20> 23.997;
param workload[JOB] := <1> 20.8105, <2> 30.3641, <3> 28.0708, <4> 33.2965, <5> 25.0863, <6> 23.688, <7> 23.3665, <8> 27.1805, <9> 24.6275, <10> 18.3244, <11> 16.8312, <12> 21.8998, <13> 27.6433, <14> 24.8906, <15> 20.5258, <16> 15.7465, <17> 27.0617, <18> 21.2714, <19> 22.1819, <20> 23.997;
param capacity[MACHINE] := <1> 51.0926, <2> 51.0926, <3> 51.0926, <4> 51.0926, <5> 51.0926, <6> 51.0926, <7> 51.0926;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
