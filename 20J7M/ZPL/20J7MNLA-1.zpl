set JOB := {1 .. 20};
set MACHINE := {1 .. 7};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.0701, <2> 23.1133, <3> 21.836, <4> 28.6491, <5> 28.3197, <6> 33.7083, <7> 32.7976, <8> 31.7318, <9> 27.1, <10> 24.2808, <11> 16.8484, <12> 25.5395, <13> 32.0493, <14> 18.8489, <15> 31.7387, <16> 25.9143, <17> 24.8539, <18> 26.2515, <19> 25.8824, <20> 15.6287;
param workload[JOB] := <1> 443.9491, <2> 534.2246, <3> 476.8109, <4> 820.7709, <5> 802.0054, <6> 1136.2495, <7> 1075.6826, <8> 1006.9071, <9> 734.41, <10> 589.5572, <11> 283.8686, <12> 652.2661, <13> 1027.1576, <14> 355.281, <15> 1007.3451, <16> 671.5509, <17> 617.7163, <18> 689.1413, <19> 669.8986, <20> 244.2563;
param capacity[MACHINE] := <1> 1977.007, <2> 1977.007, <3> 1977.007, <4> 1977.007, <5> 1977.007, <6> 1977.007, <7> 1977.007;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
