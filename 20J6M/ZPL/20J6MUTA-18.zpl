set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 43.9553, <2> 38.3272, <3> 14.7109, <4> 34.7903, <5> 1.5371, <6> 26.3736, <7> 45.2718, <8> 27.1846, <9> 27.8601, <10> 28.1083, <11> 23.5044, <12> 44.0425, <13> 27.2014, <14> 10.1092, <15> 37.4182, <16> 14.3134, <17> 40.5366, <18> 37.4004, <19> 25.0617, <20> 23.0239;
param workload[JOB] := <1> 1932.0684, <2> 1468.9743, <3> 216.4106, <4> 1210.365, <5> 2.3627, <6> 695.5668, <7> 2049.5359, <8> 739.0025, <9> 776.1852, <10> 790.0765, <11> 552.4568, <12> 1939.7418, <13> 739.9162, <14> 102.1959, <15> 1400.1217, <16> 204.8734, <17> 1643.2159, <18> 1398.7899, <19> 628.0888, <20> 530.1;
param capacity[MACHINE] := <1> 2377.506, <2> 2377.506, <3> 2377.506, <4> 2377.506, <5> 2377.506, <6> 2377.506;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
