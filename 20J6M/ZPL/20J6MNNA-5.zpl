set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.8842, <2> 18.0363, <3> 24.7007, <4> 24.9326, <5> 26.6484, <6> 28.4936, <7> 32.6574, <8> 18.3021, <9> 22.4357, <10> 29.8689, <11> 27.2273, <12> 17.4868, <13> 25.7998, <14> 19.3881, <15> 17.2809, <16> 25.5231, <17> 16.7113, <18> 25.7539, <19> 23.2033, <20> 15.6632;
param workload[JOB] := <1> 619.2234, <2> 325.3081, <3> 610.1246, <4> 621.6345, <5> 710.1372, <6> 811.8852, <7> 1066.5058, <8> 334.9669, <9> 503.3606, <10> 892.1512, <11> 741.3259, <12> 305.7882, <13> 665.6297, <14> 375.8984, <15> 298.6295, <16> 651.4286, <17> 279.2675, <18> 663.2634, <19> 538.3931, <20> 245.3358;
param capacity[MACHINE] := <1> 11260.2576, <2> 11260.2576, <3> 11260.2576, <4> 11260.2576, <5> 11260.2576, <6> 11260.2576;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
