set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.402, <2> 29.8954, <3> 19.5862, <4> 24.0465, <5> 30.4626, <6> 22.5313, <7> 32.0767, <8> 25.2592, <9> 25.5783, <10> 30.4021, <11> 26.5756, <12> 23.4568, <13> 23.2973, <14> 18.5288, <15> 25.5189, <16> 30.4541, <17> 24.3128, <18> 15.0916, <19> 26.5521, <20> 17.3534;
param workload[JOB] := <1> 29.402, <2> 29.8954, <3> 19.5862, <4> 24.0465, <5> 30.4626, <6> 22.5313, <7> 32.0767, <8> 25.2592, <9> 25.5783, <10> 30.4021, <11> 26.5756, <12> 23.4568, <13> 23.2973, <14> 18.5288, <15> 25.5189, <16> 30.4541, <17> 24.3128, <18> 15.0916, <19> 26.5521, <20> 17.3534;
param capacity[MACHINE] := <1> 500.3817, <2> 500.3817, <3> 500.3817, <4> 500.3817, <5> 500.3817, <6> 500.3817;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
