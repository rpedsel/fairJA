set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.5094, <2> 11.5312, <3> 10.0157, <4> 32.2577, <5> 0.9999, <6> 36.1079, <7> 46.6232, <8> 9.1948, <9> 38.7916, <10> 39.4624, <11> 18.2404, <12> 11.1211, <13> 8.9202, <14> 47.6943, <15> 41.5406, <16> 32.054, <17> 2.4594, <18> 11.2937, <19> 30.832, <20> 8.9088;
param workload[JOB] := <1> 552.6919, <2> 132.9686, <3> 100.3142, <4> 1040.5592, <5> 0.9998, <6> 1303.7804, <7> 2173.7228, <8> 84.5443, <9> 1504.7882, <10> 1557.281, <11> 332.7122, <12> 123.6789, <13> 79.57, <14> 2274.7463, <15> 1725.6214, <16> 1027.4589, <17> 6.0486, <18> 127.5477, <19> 950.6122, <20> 79.3667;
param capacity[MACHINE] := <1> 2529.8355, <2> 2529.8355, <3> 2529.8355, <4> 2529.8355, <5> 2529.8355, <6> 2529.8355;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
