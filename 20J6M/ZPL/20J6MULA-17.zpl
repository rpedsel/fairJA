set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 37.8265, <2> 32.0872, <3> 49.8534, <4> 9.6176, <5> 22.1298, <6> 46.3599, <7> 38.2692, <8> 33.8429, <9> 3.3692, <10> 18.2595, <11> 8.4738, <12> 12.5907, <13> 47.2476, <14> 6.4884, <15> 40.7081, <16> 37.6808, <17> 14.6724, <18> 26.902, <19> 45.0561, <20> 15.7412;
param workload[JOB] := <1> 1430.8441, <2> 1029.5884, <3> 2485.3615, <4> 92.4982, <5> 489.728, <6> 2149.2403, <7> 1464.5317, <8> 1145.3419, <9> 11.3515, <10> 333.4093, <11> 71.8053, <12> 158.5257, <13> 2232.3357, <14> 42.0993, <15> 1657.1494, <16> 1419.8427, <17> 215.2793, <18> 723.7176, <19> 2030.0521, <20> 247.7854;
param capacity[MACHINE] := <1> 3238.4146, <2> 3238.4146, <3> 3238.4146, <4> 3238.4146, <5> 3238.4146, <6> 3238.4146;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
