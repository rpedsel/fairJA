set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.0492, <2> 22.3147, <3> 27.0344, <4> 24.1444, <5> 31.2834, <6> 25.701, <7> 24.5591, <8> 19.0714, <9> 25.4172, <10> 27.2136, <11> 24.414, <12> 28.7211, <13> 27.6122, <14> 22.2829, <15> 18.3404, <16> 33.6681, <17> 24.9352, <18> 31.5163, <19> 30.4817, <20> 30.7312;
param workload[JOB] := <1> 531.2656, <2> 497.9458, <3> 730.8588, <4> 582.9521, <5> 978.6511, <6> 660.5414, <7> 603.1494, <8> 363.7183, <9> 646.0341, <10> 740.58, <11> 596.0434, <12> 824.9016, <13> 762.4336, <14> 496.5276, <15> 336.3703, <16> 1133.541, <17> 621.7642, <18> 993.2772, <19> 929.134, <20> 944.4067;
param capacity[MACHINE] := <1> 13974.0962, <2> 13974.0962, <3> 13974.0962, <4> 13974.0962, <5> 13974.0962, <6> 13974.0962;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
