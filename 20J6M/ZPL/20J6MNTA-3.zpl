set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 24.6755, <2> 24.7837, <3> 27.4, <4> 28.7213, <5> 17.6204, <6> 18.6514, <7> 26.0635, <8> 26.6136, <9> 23.2339, <10> 23.2506, <11> 22.208, <12> 26.9561, <13> 25.7333, <14> 19.6825, <15> 27.0341, <16> 34.1635, <17> 31.4712, <18> 28.1679, <19> 22.5635, <20> 26.9013;
param workload[JOB] := <1> 608.8803, <2> 614.2318, <3> 750.76, <4> 824.9131, <5> 310.4785, <6> 347.8747, <7> 679.306, <8> 708.2837, <9> 539.8141, <10> 540.5904, <11> 493.1953, <12> 726.6313, <13> 662.2027, <14> 387.4008, <15> 730.8426, <16> 1167.1447, <17> 990.4364, <18> 793.4306, <19> 509.1115, <20> 723.6799;
param capacity[MACHINE] := <1> 1638.6511, <2> 1638.6511, <3> 1638.6511, <4> 1638.6511, <5> 1638.6511, <6> 1638.6511;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
