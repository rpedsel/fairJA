set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.056, <2> 29.6042, <3> 21.132, <4> 33.8844, <5> 23.8338, <6> 23.7949, <7> 27.2154, <8> 21.6336, <9> 20.5269, <10> 23.7963, <11> 30.3614, <12> 26.2978, <13> 27.0238, <14> 27.2961, <15> 28.5537, <16> 18.5918, <17> 26.7544, <18> 15.9871, <19> 25.0084, <20> 26.99;
param workload[JOB] := <1> 732.0271, <2> 876.4087, <3> 446.5614, <4> 1148.1526, <5> 568.05, <6> 566.1973, <7> 740.678, <8> 468.0126, <9> 421.3536, <10> 566.2639, <11> 921.8146, <12> 691.5743, <13> 730.2858, <14> 745.0771, <15> 815.3138, <16> 345.655, <17> 715.7979, <18> 255.5874, <19> 625.4201, <20> 728.4601;
param capacity[MACHINE] := <1> 1638.5864, <2> 1638.5864, <3> 1638.5864, <4> 1638.5864, <5> 1638.5864, <6> 1638.5864;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
