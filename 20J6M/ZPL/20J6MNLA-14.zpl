set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 13.6775, <2> 23.2995, <3> 21.7734, <4> 24.5336, <5> 22.8263, <6> 28.5503, <7> 32.7946, <8> 24.3284, <9> 19.1382, <10> 29.4334, <11> 22.8734, <12> 34.3309, <13> 27.4412, <14> 26.7234, <15> 24.787, <16> 31.9642, <17> 19.8376, <18> 24.9387, <19> 20.5509, <20> 28.2769;
param workload[JOB] := <1> 187.074, <2> 542.8667, <3> 474.0809, <4> 601.8975, <5> 521.04, <6> 815.1196, <7> 1075.4858, <8> 591.871, <9> 366.2707, <10> 866.325, <11> 523.1924, <12> 1178.6107, <13> 753.0195, <14> 714.1401, <15> 614.3954, <16> 1021.7101, <17> 393.5304, <18> 621.9388, <19> 422.3395, <20> 799.5831;
param capacity[MACHINE] := <1> 2180.7485, <2> 2180.7485, <3> 2180.7485, <4> 2180.7485, <5> 2180.7485, <6> 2180.7485;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
