set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.4535, <2> 23.6015, <3> 16.4678, <4> 23.768, <5> 31.0236, <6> 23.1105, <7> 37.045, <8> 28.1638, <9> 27.5022, <10> 32.6251, <11> 11.0987, <12> 23.8538, <13> 22.5878, <14> 18.9921, <15> 35.4969, <16> 18.6443, <17> 27.9735, <18> 30.7189, <19> 17.3616, <20> 26.5935;
param workload[JOB] := <1> 647.8807, <2> 557.0308, <3> 271.1884, <4> 564.9178, <5> 962.4638, <6> 534.0952, <7> 1372.332, <8> 793.1996, <9> 756.371, <10> 1064.3972, <11> 123.1811, <12> 569.0038, <13> 510.2087, <14> 360.6999, <15> 1260.0299, <16> 347.6099, <17> 782.5167, <18> 943.6508, <19> 301.4252, <20> 707.2142;
param capacity[MACHINE] := <1> 13429.4167, <2> 13429.4167, <3> 13429.4167, <4> 13429.4167, <5> 13429.4167, <6> 13429.4167;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
