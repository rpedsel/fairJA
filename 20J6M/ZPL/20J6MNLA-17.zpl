set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 31.6009, <2> 22.0546, <3> 23.7509, <4> 20.373, <5> 27.237, <6> 27.8117, <7> 23.6924, <8> 23.7691, <9> 26.802, <10> 20.527, <11> 26.1505, <12> 28.5026, <13> 31.5964, <14> 23.3909, <15> 25.6098, <16> 30.1565, <17> 25.544, <18> 28.3272, <19> 30.2266, <20> 18.7362;
param workload[JOB] := <1> 998.6169, <2> 486.4054, <3> 564.1053, <4> 415.0591, <5> 741.8542, <6> 773.4907, <7> 561.3298, <8> 564.9701, <9> 718.3472, <10> 421.3577, <11> 683.8487, <12> 812.3982, <13> 998.3325, <14> 547.1342, <15> 655.8619, <16> 909.4145, <17> 652.4959, <18> 802.4303, <19> 913.6473, <20> 351.0452;
param capacity[MACHINE] := <1> 2262.0242, <2> 2262.0242, <3> 2262.0242, <4> 2262.0242, <5> 2262.0242, <6> 2262.0242;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
