set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 14.3741, <2> 37.6737, <3> 20.1288, <4> 42.6428, <5> 6.5593, <6> 47.0876, <7> 36.1922, <8> 9.5335, <9> 19.9383, <10> 9.1652, <11> 45.6545, <12> 7.8987, <13> 9.9952, <14> 34.3507, <15> 34.6247, <16> 12.6758, <17> 34.7778, <18> 21.4745, <19> 37.6565, <20> 7.4253;
param workload[JOB] := <1> 206.6148, <2> 1419.3077, <3> 405.1686, <4> 1818.4084, <5> 43.0244, <6> 2217.2421, <7> 1309.8753, <8> 90.8876, <9> 397.5358, <10> 84.0009, <11> 2084.3334, <12> 62.3895, <13> 99.904, <14> 1179.9706, <15> 1198.8699, <16> 160.6759, <17> 1209.4954, <18> 461.1542, <19> 1418.012, <20> 55.1351;
param capacity[MACHINE] := <1> 1990.2507, <2> 1990.2507, <3> 1990.2507, <4> 1990.2507, <5> 1990.2507, <6> 1990.2507;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
