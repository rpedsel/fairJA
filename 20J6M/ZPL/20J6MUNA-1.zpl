set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.1561, <2> 23.5372, <3> 39.1089, <4> 7.4789, <5> 4.8615, <6> 18.3662, <7> 49.9991, <8> 29.5395, <9> 21.1487, <10> 28.7522, <11> 34.6189, <12> 0.1932, <13> 20.8896, <14> 10.5704, <15> 9.4288, <16> 39.8832, <17> 29.07, <18> 10.9431, <19> 23.1457, <20> 11.2006;
param workload[JOB] := <1> 632.8294, <2> 553.9998, <3> 1529.5061, <4> 55.9339, <5> 23.6342, <6> 337.3173, <7> 2499.91, <8> 872.5821, <9> 447.2675, <10> 826.689, <11> 1198.4682, <12> 0.0373, <13> 436.3754, <14> 111.7334, <15> 88.9023, <16> 1590.6696, <17> 845.0649, <18> 119.7514, <19> 535.7234, <20> 125.4534;
param capacity[MACHINE] := <1> 12831.8486, <2> 12831.8486, <3> 12831.8486, <4> 12831.8486, <5> 12831.8486, <6> 12831.8486;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
