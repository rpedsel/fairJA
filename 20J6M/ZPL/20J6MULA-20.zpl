set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 6.8857, <2> 2.0877, <3> 12.4962, <4> 29.113, <5> 40.2078, <6> 26.2737, <7> 38.6184, <8> 16.3481, <9> 12.2232, <10> 30.2093, <11> 47.7898, <12> 8.7571, <13> 8.8197, <14> 33.5608, <15> 42.3004, <16> 22.8433, <17> 23.1535, <18> 37.3595, <19> 41.5509, <20> 33.0053;
param workload[JOB] := <1> 47.4129, <2> 4.3585, <3> 156.155, <4> 847.5668, <5> 1616.6672, <6> 690.3073, <7> 1491.3808, <8> 267.2604, <9> 149.4066, <10> 912.6018, <11> 2283.865, <12> 76.6868, <13> 77.7871, <14> 1126.3273, <15> 1789.3238, <16> 521.8164, <17> 536.0846, <18> 1395.7322, <19> 1726.4773, <20> 1089.3498;
param capacity[MACHINE] := <1> 2801.0946, <2> 2801.0946, <3> 2801.0946, <4> 2801.0946, <5> 2801.0946, <6> 2801.0946;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
