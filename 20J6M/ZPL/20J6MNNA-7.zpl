set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.0015, <2> 28.3817, <3> 20.3488, <4> 22.2706, <5> 28.107, <6> 13.3052, <7> 33.0552, <8> 24.4206, <9> 21.3129, <10> 16.4362, <11> 34.4788, <12> 24.1805, <13> 32.0087, <14> 25.8769, <15> 25.2094, <16> 27.4947, <17> 23.3282, <18> 21.1751, <19> 23.6746, <20> 23.2191;
param workload[JOB] := <1> 625.075, <2> 805.5209, <3> 414.0737, <4> 495.9796, <5> 790.0034, <6> 177.0283, <7> 1092.6462, <8> 596.3657, <9> 454.2397, <10> 270.1487, <11> 1188.7876, <12> 584.6966, <13> 1024.5569, <14> 669.614, <15> 635.5138, <16> 755.9585, <17> 544.2049, <18> 448.3849, <19> 560.4867, <20> 539.1266;
param capacity[MACHINE] := <1> 12672.4117, <2> 12672.4117, <3> 12672.4117, <4> 12672.4117, <5> 12672.4117, <6> 12672.4117;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
