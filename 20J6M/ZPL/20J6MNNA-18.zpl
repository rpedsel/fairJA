set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.299, <2> 25.1477, <3> 20.3324, <4> 19.2314, <5> 29.868, <6> 24.5428, <7> 31.8345, <8> 27.3693, <9> 22.3968, <10> 33.3664, <11> 18.4797, <12> 28.0658, <13> 27.108, <14> 30.4948, <15> 23.0898, <16> 20.9477, <17> 22.1598, <18> 28.2606, <19> 22.396, <20> 24.2763;
param workload[JOB] := <1> 453.6474, <2> 632.4068, <3> 413.4065, <4> 369.8467, <5> 892.0974, <6> 602.349, <7> 1013.4354, <8> 749.0786, <9> 501.6167, <10> 1113.3166, <11> 341.4993, <12> 787.6891, <13> 734.8437, <14> 929.9328, <15> 533.1389, <16> 438.8061, <17> 491.0567, <18> 798.6615, <19> 501.5808, <20> 589.3387;
param capacity[MACHINE] := <1> 12887.7487, <2> 12887.7487, <3> 12887.7487, <4> 12887.7487, <5> 12887.7487, <6> 12887.7487;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
