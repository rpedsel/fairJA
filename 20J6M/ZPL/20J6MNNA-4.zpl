set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.6022, <2> 30.2222, <3> 13.1967, <4> 22.3375, <5> 23.9011, <6> 25.8193, <7> 20.8142, <8> 27.5851, <9> 30.4087, <10> 26.4026, <11> 32.9564, <12> 22.0541, <13> 24.9887, <14> 23.6941, <15> 24.7237, <16> 22.6774, <17> 21.2625, <18> 23.8843, <19> 13.4741, <20> 22.1207;
param workload[JOB] := <1> 761.8814, <2> 913.3814, <3> 174.1529, <4> 498.9639, <5> 571.2626, <6> 666.6363, <7> 433.2309, <8> 760.9377, <9> 924.689, <10> 697.0973, <11> 1086.1243, <12> 486.3833, <13> 624.4351, <14> 561.4104, <15> 611.2613, <16> 514.2645, <17> 452.0939, <18> 570.4598, <19> 181.5514, <20> 489.3254;
param capacity[MACHINE] := <1> 11979.5428, <2> 11979.5428, <3> 11979.5428, <4> 11979.5428, <5> 11979.5428, <6> 11979.5428;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
