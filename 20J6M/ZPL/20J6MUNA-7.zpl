set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 0.6361, <2> 15.8761, <3> 33.3077, <4> 23.7257, <5> 6.5391, <6> 21.1128, <7> 6.6209, <8> 43.3226, <9> 5.2897, <10> 40.8516, <11> 29.896, <12> 24.7695, <13> 3.6458, <14> 40.631, <15> 12.6848, <16> 14.3082, <17> 14.4952, <18> 12.2563, <19> 28.8678, <20> 38.2311;
param workload[JOB] := <1> 0.4046, <2> 252.0506, <3> 1109.4029, <4> 562.9088, <5> 42.7598, <6> 445.7503, <7> 43.8363, <8> 1876.8477, <9> 27.9809, <10> 1668.8532, <11> 893.7708, <12> 613.5281, <13> 13.2919, <14> 1650.8782, <15> 160.9042, <16> 204.7246, <17> 210.1108, <18> 150.2169, <19> 833.3499, <20> 1461.617;
param capacity[MACHINE] := <1> 12223.1875, <2> 12223.1875, <3> 12223.1875, <4> 12223.1875, <5> 12223.1875, <6> 12223.1875;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
