set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.0494, <2> 22.9654, <3> 29.0308, <4> 26.4646, <5> 25.2685, <6> 31.3643, <7> 25.7412, <8> 20.2414, <9> 25.5816, <10> 26.1175, <11> 22.9559, <12> 31.2692, <13> 28.6097, <14> 30.0089, <15> 24.083, <16> 30.1646, <17> 28.853, <18> 19.4298, <19> 28.7589, <20> 30.2075;
param workload[JOB] := <1> 627.4724, <2> 527.4096, <3> 842.7873, <4> 700.3751, <5> 638.4971, <6> 983.7193, <7> 662.6094, <8> 409.7143, <9> 654.4183, <10> 682.1238, <11> 526.9733, <12> 977.7629, <13> 818.5149, <14> 900.5341, <15> 579.9909, <16> 909.9031, <17> 832.4956, <18> 377.5171, <19> 827.0743, <20> 912.4931;
param capacity[MACHINE] := <1> 14392.3859, <2> 14392.3859, <3> 14392.3859, <4> 14392.3859, <5> 14392.3859, <6> 14392.3859;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
