set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 19.3875, <2> 22.0607, <3> 18.2509, <4> 28.3514, <5> 27.7841, <6> 19.2616, <7> 29.0922, <8> 31.9138, <9> 14.9893, <10> 25.0328, <11> 24.615, <12> 26.5343, <13> 22.7023, <14> 28.9264, <15> 37.9111, <16> 28.8862, <17> 27.1058, <18> 30.5036, <19> 26.2435, <20> 25.4557;
param workload[JOB] := <1> 375.8752, <2> 486.6745, <3> 333.0954, <4> 803.8019, <5> 771.9562, <6> 371.0092, <7> 846.3561, <8> 1018.4906, <9> 224.6791, <10> 626.6411, <11> 605.8982, <12> 704.0691, <13> 515.3944, <14> 836.7366, <15> 1437.2515, <16> 834.4126, <17> 734.7244, <18> 930.4696, <19> 688.7213, <20> 647.9927;
param capacity[MACHINE] := <1> 1724.2812, <2> 1724.2812, <3> 1724.2812, <4> 1724.2812, <5> 1724.2812, <6> 1724.2812;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
