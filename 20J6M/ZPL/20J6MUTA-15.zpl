set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.8986, <2> 18.2673, <3> 38.7034, <4> 12.5682, <5> 15.2066, <6> 26.5092, <7> 9.9079, <8> 27.4927, <9> 11.4141, <10> 12.8843, <11> 46.3349, <12> 40.9193, <13> 2.0959, <14> 32.088, <15> 35.4355, <16> 23.5076, <17> 37.4121, <18> 7.7781, <19> 20.8866, <20> 23.5786;
param workload[JOB] := <1> 670.7375, <2> 333.6942, <3> 1497.9532, <4> 157.9597, <5> 231.2407, <6> 702.7377, <7> 98.1665, <8> 755.8486, <9> 130.2817, <10> 166.0052, <11> 2146.923, <12> 1674.3891, <13> 4.3928, <14> 1029.6397, <15> 1255.6747, <16> 552.6073, <17> 1399.6652, <18> 60.4988, <19> 436.2501, <20> 555.9504;
param capacity[MACHINE] := <1> 1732.577, <2> 1732.577, <3> 1732.577, <4> 1732.577, <5> 1732.577, <6> 1732.577;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
