set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.6398, <2> 22.4292, <3> 33.5392, <4> 28.5777, <5> 26.1159, <6> 33.1588, <7> 18.1797, <8> 30.6079, <9> 31.9815, <10> 33.5348, <11> 30.7883, <12> 13.6654, <13> 11.901, <14> 28.4027, <15> 28.5704, <16> 26.921, <17> 35.9436, <18> 23.4932, <19> 35.8215, <20> 19.5256;
param workload[JOB] := <1> 878.5177, <2> 503.069, <3> 1124.8779, <4> 816.6849, <5> 682.0402, <6> 1099.506, <7> 330.5015, <8> 936.8435, <9> 1022.8163, <10> 1124.5828, <11> 947.9194, <12> 186.7432, <13> 141.6338, <14> 806.7134, <15> 816.2678, <16> 724.7402, <17> 1291.9424, <18> 551.9304, <19> 1283.1799, <20> 381.2491;
param capacity[MACHINE] := <1> 2608.6266, <2> 2608.6266, <3> 2608.6266, <4> 2608.6266, <5> 2608.6266, <6> 2608.6266;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
