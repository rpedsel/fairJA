set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 38.2778, <2> 30.0496, <3> 20.611, <4> 42.2684, <5> 32.0665, <6> 24.4139, <7> 9.935, <8> 17.2468, <9> 34.3494, <10> 44.6647, <11> 6.7062, <12> 45.5281, <13> 32.298, <14> 1.8606, <15> 20.18, <16> 25.6002, <17> 46.1378, <18> 34.9641, <19> 42.3701, <20> 21.1148;
param workload[JOB] := <1> 1465.19, <2> 902.9785, <3> 424.8133, <4> 1786.6176, <5> 1028.2604, <6> 596.0385, <7> 98.7042, <8> 297.4521, <9> 1179.8813, <10> 1994.9354, <11> 44.9731, <12> 2072.8079, <13> 1043.1608, <14> 3.4618, <15> 407.2324, <16> 655.3702, <17> 2128.6966, <18> 1222.4883, <19> 1795.2254, <20> 445.8348;
param capacity[MACHINE] := <1> 3265.6871, <2> 3265.6871, <3> 3265.6871, <4> 3265.6871, <5> 3265.6871, <6> 3265.6871;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
