set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 45.9279, <2> 1.0332, <3> 29.0275, <4> 14.1943, <5> 21.5833, <6> 1.0018, <7> 28.4454, <8> 37.1713, <9> 31.6556, <10> 43.2169, <11> 2.2886, <12> 12.2031, <13> 41.639, <14> 26.3855, <15> 42.3563, <16> 23.6679, <17> 40.2144, <18> 8.6797, <19> 28.6344, <20> 38.2457;
param workload[JOB] := <1> 2109.372, <2> 1.0675, <3> 842.5958, <4> 201.4782, <5> 465.8388, <6> 1.0036, <7> 809.1408, <8> 1381.7055, <9> 1002.077, <10> 1867.7004, <11> 5.2377, <12> 148.9156, <13> 1733.8063, <14> 696.1946, <15> 1794.0561, <16> 560.1695, <17> 1617.198, <18> 75.3372, <19> 819.9289, <20> 1462.7336;
param capacity[MACHINE] := <1> 2932.5929, <2> 2932.5929, <3> 2932.5929, <4> 2932.5929, <5> 2932.5929, <6> 2932.5929;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
