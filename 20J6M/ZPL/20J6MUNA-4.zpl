set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 44.508, <2> 32.3109, <3> 11.0091, <4> 17.945, <5> 33.3857, <6> 3.0721, <7> 20.9605, <8> 22.6138, <9> 37.9253, <10> 39.2498, <11> 36.3403, <12> 14.5803, <13> 21.699, <14> 25.8594, <15> 17.4738, <16> 1.0765, <17> 45.5898, <18> 30.1065, <19> 22.9941, <20> 7.3602;
param workload[JOB] := <1> 1980.9621, <2> 1043.9943, <3> 121.2003, <4> 322.023, <5> 1114.605, <6> 9.4378, <7> 439.3426, <8> 511.384, <9> 1438.3284, <10> 1540.5468, <11> 1320.6174, <12> 212.5851, <13> 470.8466, <14> 668.7086, <15> 305.3337, <16> 1.1589, <17> 2078.4299, <18> 906.4013, <19> 528.7286, <20> 54.1725;
param capacity[MACHINE] := <1> 15068.8069, <2> 15068.8069, <3> 15068.8069, <4> 15068.8069, <5> 15068.8069, <6> 15068.8069;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
