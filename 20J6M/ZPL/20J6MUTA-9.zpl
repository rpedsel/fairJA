set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 44.4079, <2> 42.3881, <3> 22.4422, <4> 36.3056, <5> 0.1228, <6> 25.934, <7> 30.3374, <8> 4.5123, <9> 11.7718, <10> 20.9931, <11> 11.0125, <12> 8.8893, <13> 25.7545, <14> 15.1306, <15> 19.1927, <16> 16.9221, <17> 20.8125, <18> 40.2503, <19> 18.3647, <20> 21.7978;
param workload[JOB] := <1> 1972.0616, <2> 1796.751, <3> 503.6523, <4> 1318.0966, <5> 0.0151, <6> 672.5724, <7> 920.3578, <8> 20.3609, <9> 138.5753, <10> 440.7102, <11> 121.2752, <12> 79.0197, <13> 663.2943, <14> 228.9351, <15> 368.3597, <16> 286.3575, <17> 433.1602, <18> 1620.0867, <19> 337.2622, <20> 475.1441;
param capacity[MACHINE] := <1> 1549.506, <2> 1549.506, <3> 1549.506, <4> 1549.506, <5> 1549.506, <6> 1549.506;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
