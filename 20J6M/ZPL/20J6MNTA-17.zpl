set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 22.3273, <2> 28.1796, <3> 25.3482, <4> 26.5833, <5> 24.9562, <6> 28.9467, <7> 27.5549, <8> 22.1675, <9> 13.7034, <10> 19.2579, <11> 26.1217, <12> 16.3228, <13> 30.2481, <14> 16.5958, <15> 29.9868, <16> 21.6015, <17> 29.2232, <18> 28.6498, <19> 24.0039, <20> 15.4879;
param workload[JOB] := <1> 498.5083, <2> 794.0899, <3> 642.5312, <4> 706.6718, <5> 622.8119, <6> 837.9114, <7> 759.2725, <8> 491.3981, <9> 187.7832, <10> 370.8667, <11> 682.3432, <12> 266.4338, <13> 914.9476, <14> 275.4206, <15> 899.2082, <16> 466.6248, <17> 853.9954, <18> 820.811, <19> 576.1872, <20> 239.875;
param capacity[MACHINE] := <1> 1488.4615, <2> 1488.4615, <3> 1488.4615, <4> 1488.4615, <5> 1488.4615, <6> 1488.4615;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
