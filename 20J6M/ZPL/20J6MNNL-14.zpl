set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.3337, <2> 22.0962, <3> 25.2696, <4> 25.7441, <5> 31.7399, <6> 27.1323, <7> 17.0579, <8> 21.4956, <9> 29.5838, <10> 25.6495, <11> 25.7851, <12> 24.7634, <13> 26.0395, <14> 28.2631, <15> 28.9743, <16> 28.3962, <17> 21.2173, <18> 27.7348, <19> 28.2579, <20> 27.2263;
param workload[JOB] := <1> 29.3337, <2> 22.0962, <3> 25.2696, <4> 25.7441, <5> 31.7399, <6> 27.1323, <7> 17.0579, <8> 21.4956, <9> 29.5838, <10> 25.6495, <11> 25.7851, <12> 24.7634, <13> 26.0395, <14> 28.2631, <15> 28.9743, <16> 28.3962, <17> 21.2173, <18> 27.7348, <19> 28.2579, <20> 27.2263;
param capacity[MACHINE] := <1> 521.7605, <2> 521.7605, <3> 521.7605, <4> 521.7605, <5> 521.7605, <6> 521.7605;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
