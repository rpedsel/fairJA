set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 35.4442, <2> 11.0609, <3> 17.3569, <4> 5.9741, <5> 15.4373, <6> 2.357, <7> 43.4328, <8> 32.9157, <9> 39.0524, <10> 31.3535, <11> 32.6342, <12> 25.7267, <13> 27.8005, <14> 19.2588, <15> 0.7513, <16> 20.2741, <17> 13.5433, <18> 32.8683, <19> 10.5607, <20> 19.5637;
param workload[JOB] := <1> 1256.2913, <2> 122.3435, <3> 301.262, <4> 35.6899, <5> 238.3102, <6> 5.5554, <7> 1886.4081, <8> 1083.4433, <9> 1525.0899, <10> 983.042, <11> 1064.991, <12> 661.8631, <13> 772.8678, <14> 370.9014, <15> 0.5645, <16> 411.0391, <17> 183.421, <18> 1080.3251, <19> 111.5284, <20> 382.7384;
param capacity[MACHINE] := <1> 12477.6754, <2> 12477.6754, <3> 12477.6754, <4> 12477.6754, <5> 12477.6754, <6> 12477.6754;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
