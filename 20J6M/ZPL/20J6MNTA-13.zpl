set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 19.1554, <2> 20.9246, <3> 20.222, <4> 16.9045, <5> 21.2234, <6> 22.495, <7> 18.1412, <8> 19.3623, <9> 32.8062, <10> 21.3703, <11> 28.0325, <12> 24.9874, <13> 20.2823, <14> 23.9553, <15> 21.0877, <16> 25.6332, <17> 22.8987, <18> 19.163, <19> 26.1508, <20> 22.4558;
param workload[JOB] := <1> 366.9293, <2> 437.8389, <3> 408.9293, <4> 285.7621, <5> 450.4327, <6> 506.025, <7> 329.1031, <8> 374.8987, <9> 1076.2468, <10> 456.6897, <11> 785.8211, <12> 624.3702, <13> 411.3717, <14> 573.8564, <15> 444.6911, <16> 657.0609, <17> 524.3505, <18> 367.2206, <19> 683.8643, <20> 504.263;
param capacity[MACHINE] := <1> 1283.7157, <2> 1283.7157, <3> 1283.7157, <4> 1283.7157, <5> 1283.7157, <6> 1283.7157;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
