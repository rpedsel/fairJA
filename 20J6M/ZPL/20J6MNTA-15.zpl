set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.7114, <2> 31.408, <3> 30.0675, <4> 24.0861, <5> 23.118, <6> 26.2905, <7> 18.3068, <8> 26.5995, <9> 28.6195, <10> 25.5649, <11> 26.7369, <12> 17.9634, <13> 26.1935, <14> 21.4717, <15> 27.2749, <16> 22.2216, <17> 18.8885, <18> 34.6812, <19> 30.0295, <20> 25.8506;
param workload[JOB] := <1> 661.0761, <2> 986.4625, <3> 904.0546, <4> 580.1402, <5> 534.4419, <6> 691.1904, <7> 335.1389, <8> 707.5334, <9> 819.0758, <10> 653.5641, <11> 714.8618, <12> 322.6837, <13> 686.0994, <14> 461.0339, <15> 743.9202, <16> 493.7995, <17> 356.7754, <18> 1202.7856, <19> 901.7709, <20> 668.2535;
param capacity[MACHINE] := <1> 1678.0827, <2> 1678.0827, <3> 1678.0827, <4> 1678.0827, <5> 1678.0827, <6> 1678.0827;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
