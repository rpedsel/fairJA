set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 42.863, <2> 2.4252, <3> 49.9895, <4> 20.9045, <5> 8.5474, <6> 48.3684, <7> 7.0498, <8> 15.227, <9> 48.111, <10> 5.6025, <11> 1.1114, <12> 35.8263, <13> 5.7133, <14> 14.2467, <15> 1.8443, <16> 25.975, <17> 34.4744, <18> 16.5868, <19> 34.0192, <20> 31.8778;
param workload[JOB] := <1> 1837.2368, <2> 5.8816, <3> 2498.9501, <4> 436.9981, <5> 73.058, <6> 2339.5021, <7> 49.6997, <8> 231.8615, <9> 2314.6683, <10> 31.388, <11> 1.2352, <12> 1283.5238, <13> 32.6418, <14> 202.9685, <15> 3.4014, <16> 674.7006, <17> 1188.4843, <18> 275.1219, <19> 1157.306, <20> 1016.1941;
param capacity[MACHINE] := <1> 1956.8528, <2> 1956.8528, <3> 1956.8528, <4> 1956.8528, <5> 1956.8528, <6> 1956.8528;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
