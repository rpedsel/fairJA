set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 31.1281, <2> 20.1711, <3> 24.5437, <4> 29.4375, <5> 19.4047, <6> 20.1553, <7> 19.8538, <8> 23.1409, <9> 29.0786, <10> 21.0375, <11> 23.0486, <12> 27.8549, <13> 15.1945, <14> 31.5504, <15> 28.6444, <16> 24.0835, <17> 21.3105, <18> 23.9077, <19> 22.3338, <20> 26.2179;
param workload[JOB] := <1> 31.1281, <2> 20.1711, <3> 24.5437, <4> 29.4375, <5> 19.4047, <6> 20.1553, <7> 19.8538, <8> 23.1409, <9> 29.0786, <10> 21.0375, <11> 23.0486, <12> 27.8549, <13> 15.1945, <14> 31.5504, <15> 28.6444, <16> 24.0835, <17> 21.3105, <18> 23.9077, <19> 22.3338, <20> 26.2179;
param capacity[MACHINE] := <1> 482.0974, <2> 482.0974, <3> 482.0974, <4> 482.0974, <5> 482.0974, <6> 482.0974;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
