set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.414, <2> 21.5247, <3> 27.9093, <4> 19.737, <5> 16.2974, <6> 4.1595, <7> 37.7839, <8> 39.8473, <9> 14.2876, <10> 17.9571, <11> 45.347, <12> 7.3212, <13> 42.7397, <14> 31.1754, <15> 10.0476, <16> 20.479, <17> 34.9239, <18> 38.2891, <19> 22.1386, <20> 2.0513;
param workload[JOB] := <1> 865.1834, <2> 463.3127, <3> 778.929, <4> 389.5492, <5> 265.6052, <6> 17.3014, <7> 1427.6231, <8> 1587.8073, <9> 204.1355, <10> 322.4574, <11> 2056.3504, <12> 53.6, <13> 1826.682, <14> 971.9056, <15> 100.9543, <16> 419.3894, <17> 1219.6788, <18> 1466.0552, <19> 490.1176, <20> 4.2078;
param capacity[MACHINE] := <1> 14930.8453, <2> 14930.8453, <3> 14930.8453, <4> 14930.8453, <5> 14930.8453, <6> 14930.8453;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
