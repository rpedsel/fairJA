set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 13.1858, <2> 22.0457, <3> 24.8294, <4> 19.6788, <5> 28.856, <6> 26.2225, <7> 26.0601, <8> 20.9628, <9> 34.672, <10> 29.7849, <11> 20.8108, <12> 29.7403, <13> 10.8601, <14> 30.0207, <15> 22.1246, <16> 23.633, <17> 33.1959, <18> 17.8803, <19> 20.0175, <20> 28.1091;
param workload[JOB] := <1> 173.8653, <2> 486.0129, <3> 616.4991, <4> 387.2552, <5> 832.6687, <6> 687.6195, <7> 679.1288, <8> 439.439, <9> 1202.1476, <10> 887.1403, <11> 433.0894, <12> 884.4854, <13> 117.9418, <14> 901.2424, <15> 489.4979, <16> 558.5187, <17> 1101.9678, <18> 319.7051, <19> 400.7003, <20> 790.1215;
param capacity[MACHINE] := <1> 12389.0467, <2> 12389.0467, <3> 12389.0467, <4> 12389.0467, <5> 12389.0467, <6> 12389.0467;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
