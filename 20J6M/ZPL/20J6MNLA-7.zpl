set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 26.9602, <2> 25.9808, <3> 27.4343, <4> 25.9965, <5> 26.2859, <6> 23.5568, <7> 24.8406, <8> 24.406, <9> 26.3212, <10> 22.7057, <11> 35.4725, <12> 30.8466, <13> 18.7851, <14> 28.8423, <15> 22.0094, <16> 33.4212, <17> 23.3155, <18> 28.7385, <19> 31.8962, <20> 25.9372;
param workload[JOB] := <1> 726.8524, <2> 675.002, <3> 752.6408, <4> 675.818, <5> 690.9485, <6> 554.9228, <7> 617.0554, <8> 595.6528, <9> 692.8056, <10> 515.5488, <11> 1258.2983, <12> 951.5127, <13> 352.88, <14> 831.8783, <15> 484.4137, <16> 1116.9766, <17> 543.6125, <18> 825.9014, <19> 1017.3676, <20> 672.7383;
param capacity[MACHINE] := <1> 2425.4711, <2> 2425.4711, <3> 2425.4711, <4> 2425.4711, <5> 2425.4711, <6> 2425.4711;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
