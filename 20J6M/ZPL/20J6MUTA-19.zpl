set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 18.7978, <2> 23.318, <3> 11.3659, <4> 43.3569, <5> 47.3319, <6> 3.1583, <7> 15.106, <8> 36.117, <9> 42.736, <10> 42.0209, <11> 43.9287, <12> 13.7954, <13> 36.546, <14> 4.7691, <15> 18.614, <16> 18.7855, <17> 23.2911, <18> 47.166, <19> 36.4507, <20> 6.4708;
param workload[JOB] := <1> 353.3573, <2> 543.7291, <3> 129.1837, <4> 1879.8208, <5> 2240.3088, <6> 9.9749, <7> 228.1912, <8> 1304.4377, <9> 1826.3657, <10> 1765.756, <11> 1929.7307, <12> 190.3131, <13> 1335.6101, <14> 22.7443, <15> 346.481, <16> 352.895, <17> 542.4753, <18> 2224.6316, <19> 1328.6535, <20> 41.8713;
param capacity[MACHINE] := <1> 2324.5664, <2> 2324.5664, <3> 2324.5664, <4> 2324.5664, <5> 2324.5664, <6> 2324.5664;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
