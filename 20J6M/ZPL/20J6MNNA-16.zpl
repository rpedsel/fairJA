set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.2341, <2> 29.179, <3> 22.9173, <4> 29.6633, <5> 36.1197, <6> 32.0063, <7> 26.0046, <8> 29.9239, <9> 23.4888, <10> 21.9109, <11> 22.1349, <12> 20.2619, <13> 31.674, <14> 25.4571, <15> 25.3471, <16> 21.1962, <17> 27.8174, <18> 26.1565, <19> 25.6285, <20> 40.3101;
param workload[JOB] := <1> 539.8234, <2> 851.414, <3> 525.2026, <4> 879.9114, <5> 1304.6327, <6> 1024.4032, <7> 676.2392, <8> 895.4398, <9> 551.7237, <10> 480.0875, <11> 489.9538, <12> 410.5446, <13> 1003.2423, <14> 648.0639, <15> 642.4755, <16> 449.2789, <17> 773.8077, <18> 684.1625, <19> 656.82, <20> 1624.9042;
param capacity[MACHINE] := <1> 15112.1309, <2> 15112.1309, <3> 15112.1309, <4> 15112.1309, <5> 15112.1309, <6> 15112.1309;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
