set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 23.5948, <2> 20.2299, <3> 19.4171, <4> 17.5666, <5> 25.7998, <6> 19.5702, <7> 31.0828, <8> 16.8827, <9> 31.9774, <10> 26.0328, <11> 23.7393, <12> 23.2416, <13> 15.9536, <14> 21.2089, <15> 26.1882, <16> 32.9717, <17> 25.0452, <18> 20.7141, <19> 26.5059, <20> 19.9335;
param workload[JOB] := <1> 43.5318, <2> 21.965, <3> 10.8317, <4> 21.2304, <5> 20.5316, <6> 13.5256, <7> 22.7845, <8> 17.4413, <9> 47.5702, <10> 33.9195, <11> 13.7159, <12> 12.4161, <13> 42.9149, <14> 18.0635, <15> 19.4628, <16> 42.5488, <17> 18.6962, <18> 36.8812, <19> 11.7237, <20> 25.9019;
param capacity[MACHINE] := <1> 495.6566, <2> 495.6566, <3> 495.6566, <4> 495.6566, <5> 495.6566, <6> 495.6566;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
