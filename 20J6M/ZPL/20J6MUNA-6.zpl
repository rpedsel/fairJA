set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 8.4085, <2> 20.6606, <3> 31.648, <4> 31.2438, <5> 44.6471, <6> 4.6919, <7> 45.7085, <8> 14.1726, <9> 49.7153, <10> 45.2565, <11> 22.8877, <12> 5.3451, <13> 49.8622, <14> 29.3705, <15> 37.1396, <16> 39.6241, <17> 15.4755, <18> 26.3268, <19> 21.1614, <20> 8.5552;
param workload[JOB] := <1> 70.7029, <2> 426.8604, <3> 1001.5959, <4> 976.175, <5> 1993.3635, <6> 22.0139, <7> 2089.267, <8> 200.8626, <9> 2471.6111, <10> 2048.1508, <11> 523.8468, <12> 28.5701, <13> 2486.239, <14> 862.6263, <15> 1379.3499, <16> 1570.0693, <17> 239.4911, <18> 693.1004, <19> 447.8048, <20> 73.1914;
param capacity[MACHINE] := <1> 19604.8922, <2> 19604.8922, <3> 19604.8922, <4> 19604.8922, <5> 19604.8922, <6> 19604.8922;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
