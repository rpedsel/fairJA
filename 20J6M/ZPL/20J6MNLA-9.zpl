set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.7308, <2> 20.3733, <3> 26.7512, <4> 29.0894, <5> 15.5343, <6> 26.0619, <7> 27.9981, <8> 29.1885, <9> 23.1105, <10> 25.4181, <11> 27.3553, <12> 24.1262, <13> 23.1144, <14> 18.3528, <15> 29.6398, <16> 23.1739, <17> 17.238, <18> 26.0928, <19> 20.5702, <20> 22.4415;
param workload[JOB] := <1> 883.9205, <2> 415.0714, <3> 715.6267, <4> 846.1932, <5> 241.3145, <6> 679.2226, <7> 783.8936, <8> 851.9685, <9> 534.0952, <10> 646.0798, <11> 748.3124, <12> 582.0735, <13> 534.2755, <14> 336.8253, <15> 878.5177, <16> 537.0296, <17> 297.1486, <18> 680.8342, <19> 423.1331, <20> 503.6209;
param capacity[MACHINE] := <1> 2019.8595, <2> 2019.8595, <3> 2019.8595, <4> 2019.8595, <5> 2019.8595, <6> 2019.8595;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
