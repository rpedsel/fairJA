set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 29.6401, <2> 7.2637, <3> 18.8744, <4> 15.2065, <5> 11.98, <6> 3.8449, <7> 14.915, <8> 26.4671, <9> 38.3959, <10> 25.2082, <11> 6.2618, <12> 48.4517, <13> 6.1694, <14> 10.7141, <15> 10.1842, <16> 24.3546, <17> 48.5436, <18> 6.3601, <19> 22.6384, <20> 43.9702;
param workload[JOB] := <1> 878.5355, <2> 52.7613, <3> 356.243, <4> 231.2376, <5> 143.5204, <6> 14.7833, <7> 222.4572, <8> 700.5074, <9> 1474.2451, <10> 635.4533, <11> 39.2101, <12> 2347.5672, <13> 38.0615, <14> 114.7919, <15> 103.7179, <16> 593.1465, <17> 2356.4811, <18> 40.4509, <19> 512.4972, <20> 1933.3785;
param capacity[MACHINE] := <1> 1598.6309, <2> 1598.6309, <3> 1598.6309, <4> 1598.6309, <5> 1598.6309, <6> 1598.6309;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
