set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 14.4361, <2> 26.2846, <3> 46.6389, <4> 16.8298, <5> 47.0397, <6> 10.713, <7> 33.6685, <8> 9.616, <9> 23.6003, <10> 3.3218, <11> 21.3427, <12> 32.1644, <13> 12.3198, <14> 11.8656, <15> 31.9853, <16> 4.3989, <17> 49.7672, <18> 42.4769, <19> 11.4453, <20> 9.4133;
param workload[JOB] := <1> 208.401, <2> 690.8802, <3> 2175.187, <4> 283.2422, <5> 2212.7334, <6> 114.7684, <7> 1133.5679, <8> 92.4675, <9> 556.9742, <10> 11.0344, <11> 455.5108, <12> 1034.5486, <13> 151.7775, <14> 140.7925, <15> 1023.0594, <16> 19.3503, <17> 2476.7742, <18> 1804.287, <19> 130.9949, <20> 88.6102;
param capacity[MACHINE] := <1> 14804.9616, <2> 14804.9616, <3> 14804.9616, <4> 14804.9616, <5> 14804.9616, <6> 14804.9616;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
