set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 28.1349, <2> 24.0103, <3> 32.9328, <4> 14.7172, <5> 23.4192, <6> 18.9336, <7> 25.0884, <8> 27.1789, <9> 22.6009, <10> 29.7343, <11> 29.7666, <12> 27.5705, <13> 28.2256, <14> 19.189, <15> 23.6918, <16> 30.8724, <17> 26.3731, <18> 21.349, <19> 20.2062, <20> 22.5524;
param workload[JOB] := <1> 28.1349, <2> 24.0103, <3> 32.9328, <4> 14.7172, <5> 23.4192, <6> 18.9336, <7> 25.0884, <8> 27.1789, <9> 22.6009, <10> 29.7343, <11> 29.7666, <12> 27.5705, <13> 28.2256, <14> 19.189, <15> 23.6918, <16> 30.8724, <17> 26.3731, <18> 21.349, <19> 20.2062, <20> 22.5524;
param capacity[MACHINE] := <1> 496.5471, <2> 496.5471, <3> 496.5471, <4> 496.5471, <5> 496.5471, <6> 496.5471;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
