set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.8742, <2> 28.0256, <3> 22.7411, <4> 23.7287, <5> 23.8188, <6> 26.6432, <7> 29.4227, <8> 29.3769, <9> 23.873, <10> 28.1311, <11> 20.4576, <12> 25.9266, <13> 27.297, <14> 22.3956, <15> 24.5046, <16> 25.9079, <17> 25.0111, <18> 26.6086, <19> 26.3566, <20> 28.0223;
param workload[JOB] := <1> 21.8742, <2> 28.0256, <3> 22.7411, <4> 23.7287, <5> 23.8188, <6> 26.6432, <7> 29.4227, <8> 29.3769, <9> 23.873, <10> 28.1311, <11> 20.4576, <12> 25.9266, <13> 27.297, <14> 22.3956, <15> 24.5046, <16> 25.9079, <17> 25.0111, <18> 26.6086, <19> 26.3566, <20> 28.0223;
param capacity[MACHINE] := <1> 510.1232, <2> 510.1232, <3> 510.1232, <4> 510.1232, <5> 510.1232, <6> 510.1232;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
