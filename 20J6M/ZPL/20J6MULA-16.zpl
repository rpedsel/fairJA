set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 45.3056, <2> 44.5398, <3> 26.7345, <4> 23.2685, <5> 16.651, <6> 38.7366, <7> 21.5401, <8> 18.6247, <9> 7.9589, <10> 44.5564, <11> 35.963, <12> 16.1614, <13> 39.281, <14> 40.0554, <15> 4.0797, <16> 12.9162, <17> 33.2483, <18> 3.4758, <19> 1.2447, <20> 41.1238;
param workload[JOB] := <1> 2052.5974, <2> 1983.7938, <3> 714.7335, <4> 541.4231, <5> 277.2558, <6> 1500.5242, <7> 463.9759, <8> 346.8795, <9> 63.3441, <10> 1985.2728, <11> 1293.3374, <12> 261.1908, <13> 1542.997, <14> 1604.4351, <15> 16.644, <16> 166.8282, <17> 1105.4495, <18> 12.0812, <19> 1.5493, <20> 1691.1669;
param capacity[MACHINE] := <1> 2937.5799, <2> 2937.5799, <3> 2937.5799, <4> 2937.5799, <5> 2937.5799, <6> 2937.5799;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
