set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.632, <2> 30.0626, <3> 24.6983, <4> 26.9286, <5> 24.1765, <6> 31.3378, <7> 25.3787, <8> 34.395, <9> 14.9341, <10> 20.1339, <11> 25.2356, <12> 27.7923, <13> 25.3459, <14> 24.1643, <15> 27.5698, <16> 34.8752, <17> 25.1073, <18> 32.5429, <19> 25.7003, <20> 27.7045;
param workload[JOB] := <1> 763.5274, <2> 903.7599, <3> 610.006, <4> 725.1495, <5> 584.5032, <6> 982.0577, <7> 644.0784, <8> 1183.016, <9> 223.0273, <10> 405.3739, <11> 636.8355, <12> 772.4119, <13> 642.4146, <14> 583.9134, <15> 760.0939, <16> 1216.2796, <17> 630.3765, <18> 1059.0403, <19> 660.5054, <20> 767.5393;
param capacity[MACHINE] := <1> 2458.985, <2> 2458.985, <3> 2458.985, <4> 2458.985, <5> 2458.985, <6> 2458.985;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
