set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 21.4189, <2> 19.6883, <3> 24.0687, <4> 27.0217, <5> 24.0424, <6> 26.0759, <7> 19.3025, <8> 20.1455, <9> 25.8102, <10> 36.7919, <11> 18.9614, <12> 29.07, <13> 21.201, <14> 28.8022, <15> 24.2232, <16> 24.9005, <17> 31.9751, <18> 22.6828, <19> 23.6547, <20> 25.4077;
param workload[JOB] := <1> 458.7693, <2> 387.6292, <3> 579.3023, <4> 730.1723, <5> 578.037, <6> 679.9526, <7> 372.5865, <8> 405.8412, <9> 666.1664, <10> 1353.6439, <11> 359.5347, <12> 845.0649, <13> 449.4824, <14> 829.5667, <15> 586.7634, <16> 620.0349, <17> 1022.407, <18> 514.5094, <19> 559.5448, <20> 645.5512;
param capacity[MACHINE] := <1> 1580.57, <2> 1580.57, <3> 1580.57, <4> 1580.57, <5> 1580.57, <6> 1580.57;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
