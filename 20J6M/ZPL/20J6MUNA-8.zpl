set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 16.8465, <2> 44.1042, <3> 12.2442, <4> 31.1339, <5> 3.4627, <6> 44.8825, <7> 36.2255, <8> 49.8542, <9> 3.5358, <10> 38.4972, <11> 2.7141, <12> 30.0274, <13> 46.7315, <14> 19.6497, <15> 15.995, <16> 21.2487, <17> 31.3902, <18> 44.5595, <19> 39.5766, <20> 23.7148;
param workload[JOB] := <1> 283.8046, <2> 1945.1805, <3> 149.9204, <4> 969.3197, <5> 11.9903, <6> 2014.4388, <7> 1312.2869, <8> 2485.4413, <9> 12.5019, <10> 1482.0344, <11> 7.3663, <12> 901.6448, <13> 2183.8331, <14> 386.1107, <15> 255.84, <16> 451.5073, <17> 985.3447, <18> 1985.549, <19> 1566.3073, <20> 562.3917;
param capacity[MACHINE] := <1> 19952.8137, <2> 19952.8137, <3> 19952.8137, <4> 19952.8137, <5> 19952.8137, <6> 19952.8137;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
