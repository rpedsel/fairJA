set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 40.3366, <2> 34.7785, <3> 44.4506, <4> 11.7192, <5> 38.9391, <6> 3.6441, <7> 1.583, <8> 46.0239, <9> 3.695, <10> 8.0176, <11> 0.2834, <12> 27.3028, <13> 17.9181, <14> 44.4819, <15> 38.9532, <16> 48.3679, <17> 29.343, <18> 4.6008, <19> 25.8939, <20> 13.6967;
param workload[JOB] := <1> 1627.0413, <2> 1209.5441, <3> 1975.8558, <4> 137.3396, <5> 1516.2535, <6> 13.2795, <7> 2.5059, <8> 2118.1994, <9> 13.653, <10> 64.2819, <11> 0.0803, <12> 745.4429, <13> 321.0583, <14> 1978.6394, <15> 1517.3518, <16> 2339.4538, <17> 861.0116, <18> 21.1674, <19> 670.4941, <20> 187.5996;
param capacity[MACHINE] := <1> 2165.0317, <2> 2165.0317, <3> 2165.0317, <4> 2165.0317, <5> 2165.0317, <6> 2165.0317;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
