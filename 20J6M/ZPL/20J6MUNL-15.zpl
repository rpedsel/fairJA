set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 48.1365, <2> 47.4368, <3> 40.4711, <4> 12.6355, <5> 46.293, <6> 38.3299, <7> 42.8908, <8> 20.0229, <9> 22.3576, <10> 48.8615, <11> 20.6322, <12> 33.3765, <13> 6.0857, <14> 45.3079, <15> 39.6191, <16> 44.2097, <17> 37.6916, <18> 31.5377, <19> 46.9214, <20> 26.3894;
param workload[JOB] := <1> 48.1365, <2> 47.4368, <3> 40.4711, <4> 12.6355, <5> 46.293, <6> 38.3299, <7> 42.8908, <8> 20.0229, <9> 22.3576, <10> 48.8615, <11> 20.6322, <12> 33.3765, <13> 6.0857, <14> 45.3079, <15> 39.6191, <16> 44.2097, <17> 37.6916, <18> 31.5377, <19> 46.9214, <20> 26.3894;
param capacity[MACHINE] := <1> 699.2068, <2> 699.2068, <3> 699.2068, <4> 699.2068, <5> 699.2068, <6> 699.2068;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
