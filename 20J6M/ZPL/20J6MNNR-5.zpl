set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.9274, <2> 28.8106, <3> 27.9671, <4> 19.2101, <5> 22.9899, <6> 29.2513, <7> 29.5503, <8> 26.5208, <9> 23.6762, <10> 22.4873, <11> 26.2327, <12> 21.7935, <13> 35.2964, <14> 27.7613, <15> 21.8751, <16> 28.0712, <17> 26.7213, <18> 25.9319, <19> 25.9797, <20> 24.7415;
param workload[JOB] := <1> 44.5843, <2> 49.8239, <3> 34.2545, <4> 40.9494, <5> 33.6702, <6> 42.547, <7> 27.7175, <8> 9.2837, <9> 18.8887, <10> 39.9146, <11> 21.444, <12> 18.3571, <13> 33.2099, <14> 18.1382, <15> 27.4667, <16> 21.5421, <17> 37.3483, <18> 30.1266, <19> 44.465, <20> 42.8046;
param capacity[MACHINE] := <1> 636.5363, <2> 636.5363, <3> 636.5363, <4> 636.5363, <5> 636.5363, <6> 636.5363;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
