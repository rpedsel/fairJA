set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 25.9068, <2> 31.27, <3> 22.8048, <4> 27.0961, <5> 31.5313, <6> 18.8402, <7> 23.1479, <8> 19.9505, <9> 24.3684, <10> 30.9416, <11> 20.3039, <12> 23.4376, <13> 32.2182, <14> 25.5006, <15> 12.3964, <16> 29.3635, <17> 31.1217, <18> 33.1243, <19> 24.1386, <20> 25.1972;
param workload[JOB] := <1> 671.1623, <2> 977.8129, <3> 520.0589, <4> 734.1986, <5> 994.2229, <6> 354.9531, <7> 535.8253, <8> 398.0225, <9> 593.8189, <10> 957.3826, <11> 412.2484, <12> 549.3211, <13> 1038.0124, <14> 650.2806, <15> 153.6707, <16> 862.2151, <17> 968.5602, <18> 1097.2193, <19> 582.672, <20> 634.8989;
param capacity[MACHINE] := <1> 2281.0928, <2> 2281.0928, <3> 2281.0928, <4> 2281.0928, <5> 2281.0928, <6> 2281.0928;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
