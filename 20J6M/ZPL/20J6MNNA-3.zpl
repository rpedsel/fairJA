set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 31.2165, <2> 17.6711, <3> 19.757, <4> 29.2606, <5> 29.2941, <6> 34.9472, <7> 23.3541, <8> 28.6971, <9> 28.0705, <10> 27.6963, <11> 23.0998, <12> 28.2211, <13> 26.525, <14> 16.5778, <15> 26.109, <16> 25.3236, <17> 36.7363, <18> 27.9765, <19> 28.4807, <20> 22.1918;
param workload[JOB] := <1> 974.4699, <2> 312.2678, <3> 390.339, <4> 856.1827, <5> 858.1443, <6> 1221.3068, <7> 545.414, <8> 823.5235, <9> 787.953, <10> 767.085, <11> 533.6008, <12> 796.4305, <13> 703.5756, <14> 274.8235, <15> 681.6799, <16> 641.2847, <17> 1349.5557, <18> 782.6846, <19> 811.1503, <20> 492.476;
param capacity[MACHINE] := <1> 14603.9476, <2> 14603.9476, <3> 14603.9476, <4> 14603.9476, <5> 14603.9476, <6> 14603.9476;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
