set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 27.3062, <2> 23.2846, <3> 22.9774, <4> 27.4395, <5> 24.6479, <6> 28.0413, <7> 25.7617, <8> 22.6387, <9> 21.5959, <10> 31.3593, <11> 29.2497, <12> 28.6196, <13> 26.4315, <14> 25.5936, <15> 28.7242, <16> 29.7828, <17> 20.7107, <18> 29.7996, <19> 26.9361, <20> 28.8379;
param workload[JOB] := <1> 745.6286, <2> 542.1726, <3> 527.9609, <4> 752.9262, <5> 607.519, <6> 786.3145, <7> 663.6652, <8> 512.5107, <9> 466.3829, <10> 983.4057, <11> 855.545, <12> 819.0815, <13> 698.6242, <14> 655.0324, <15> 825.0797, <16> 887.0152, <17> 428.9331, <18> 888.0162, <19> 725.5535, <20> 831.6245;
param capacity[MACHINE] := <1> 1775.374, <2> 1775.374, <3> 1775.374, <4> 1775.374, <5> 1775.374, <6> 1775.374;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
