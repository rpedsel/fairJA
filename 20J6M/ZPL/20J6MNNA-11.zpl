set JOB := {1 .. 20};
set MACHINE := {1 .. 6};
set JM := JOB * MACHINE;

param benefit[JOB] := <1> 9.183, <2> 21.3575, <3> 24.719, <4> 30.0103, <5> 27.4779, <6> 27.2555, <7> 16.9451, <8> 26.4264, <9> 22.2085, <10> 30.9615, <11> 30.968, <12> 25.8967, <13> 24.8908, <14> 27.6284, <15> 26.1963, <16> 20.9853, <17> 26.5774, <18> 20.1802, <19> 23.6774, <20> 32.7801;
param workload[JOB] := <1> 84.3275, <2> 456.1428, <3> 611.029, <4> 900.6181, <5> 755.035, <6> 742.8623, <7> 287.1364, <8> 698.3546, <9> 493.2175, <10> 958.6145, <11> 959.017, <12> 670.6391, <13> 619.5519, <14> 763.3285, <15> 686.2461, <16> 440.3828, <17> 706.3582, <18> 407.2405, <19> 560.6193, <20> 1074.535;
param capacity[MACHINE] := <1> 12875.2561, <2> 12875.2561, <3> 12875.2561, <4> 12875.2561, <5> 12875.2561, <6> 12875.2561;

var x[JM];
var z;
maximize minBenefit: z;
subto Z:
   forall <m> in MACHINE do
      sum <j> in JOB : benefit[j] * x[j,m] >= z;
subto K:
   forall <m> in MACHINE do
      sum <j> in JOB : workload[j] * x[j,m] <= capacity[m];
subto X:
   forall <j> in JOB do
      sum <m> in MACHINE : x[j,m] <= 1;
subto A:
   forall <j,m> in JM do
      x[j,m] >= 0;
